@model IEnumerable<EBP.Business.Database.ReportColumn>

@{
    ViewBag.Title = "Report Column";
    Layout = "~/Areas/Business/Views/Shared/_Layout.cshtml";
}

<h2> @ViewBag.ServiceName</h2>

<p>
    <div class="row col-md-12">
        <div class="col-md-8">
            @Html.ActionLink("Create New", "ReportColumnCreate", new { id = @ViewBag.ServiceId })
        </div>
    </div>
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayName("Column Name")
        </th>
        <th>
            @Html.DisplayName("Display Name")
        </th>
        <th>
            @Html.DisplayName("Column Type")
        </th>
        <th>
            @Html.DisplayName("Input Type")
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsMandatory)
        </th>
        <th>
            @Html.DisplayName("Created On")
        </th>
        <th>
            @Html.DisplayName("Created By")
        </th>
        <th>
            @Html.DisplayName("Updated On")
        </th>
        <th>
            @Html.DisplayName("Updated By")
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ColumnName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DisplayName)
            </td>
            <td>
                @{var Column = EBP.Business.Enums.EnumHelper.GetEnumName<EBP.Business.Enums.SalesColumnType>(item.ColumnType.HasValue ? item.ColumnType.Value : (int)EBP.Business.Enums.SalesColumnType.ReportMaster);}
                @Column
            </td>
            <td>
                @{var InputType = EBP.Business.Enums.EnumHelper.GetEnumName<EBP.Business.Enums.SalesInputType>(item.InputType.HasValue ? item.InputType.Value : (int)EBP.Business.Enums.SalesInputType.Text);}
                @InputType
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsMandatory)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedOn)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.User.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UpdatedOn)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.User1.FirstName)
            </td>
            <td>
                @if (item.InputType.HasValue && item.InputType == (int)EBP.Business.Enums.SalesInputType.Dropdown)
                {  @Html.ActionLink("Column Lookups", "ColumnLookups", new { id = item.Id }) <text>|</text>}
                @Html.ActionLink("Edit", "ReportColumnEdit", new { id = item.Id }) |
                @Html.ActionLink("Details", "ReportColumnDetails", new { id = item.Id }) |
                @Html.ActionLink("Delete", "ReportColumnDelete", new { id = item.Id })
            </td>
        </tr>
                    }

</table>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script>
    function CallChangefunc(val) {
        window.location.href = "ReportColumns?ServiceId=" + val;
    }
</script>

