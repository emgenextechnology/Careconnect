@model EBP.Business.Database.Rep

@{
    ViewBag.Title = "Delete";
    Layout = "~/Areas/Business/Views/Shared/_Layout.cshtml";
    var db = new EBP.Business.Database.CareConnectCrmEntities();
}

<h2>Delete</h2>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Sales Reps</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayName("Rep Name")
        </dt>

        <dd>
            @Html.DisplayFor(model => model.User2.FirstName) @Html.DisplayFor(model => model.User2.LastName)<br /> <small>@@ @Html.DisplayFor(model => model.User2.UserName)</small>
        </dd>

        <dt>
            @Html.DisplayName("Sales Team")
        </dt>

        <dd>
            @Html.DisplayFor(modelItem => modelItem.RepGroup.RepGroupName)
        </dd>

        <dt>
            @Html.DisplayName("Sales Director")
        </dt>

        <dd>
            @Html.DisplayFor(modelItem => modelItem.RepGroup.User2.FirstName) @Html.DisplayFor(modelItem => modelItem.RepGroup.User2.LastName)
        </dd>

        <dt>
            @Html.DisplayName("Manager")
        </dt>

        <dd>
            @String.Join(", ", Model.RepGroup.RepgroupManagerMappers.Select(a => a.User.FirstName + " " + a.User.LastName).ToArray())
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.IsActive)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.IsActive)
        </dd>

        <dt>
            @Html.DisplayName("Services")
        </dt>

        <dd>
            @String.Join(", ", db.RepServiceMappers.Where(a => a.RepId == Model.Id).Select(p => p.LookupEnrolledService.ServiceName).ToArray())
        </dd>
        @*<dt>
                @Html.DisplayName("Signon Date")
            </dt>

            <dd>
                @Html.DisplayFor(model => model.SignonDate)
            </dd>*@

        <dt>
            @Html.DisplayName("Created On")
            @Html.DisplayNameFor(model => model.CreatedOn)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CreatedOn)
        </dd>

        <dt>
            @Html.DisplayName("Updated On")
        </dt>

        <dd>
            @Html.DisplayFor(model => model.UpdatedOn)
        </dd>

        <dt>
            @Html.DisplayName("Sales Team")
        </dt>

        <dd>
            @Html.DisplayFor(model => model.RepGroup.RepGroupName)
        </dd>

        <dt>
            @Html.DisplayName("Created By")
        </dt>

        <dd>
            @Html.DisplayFor(model => model.User.FirstName) @Html.DisplayFor(model => model.User.LastName)
        </dd>

        <dt>
            @Html.DisplayName("Updated By")
        </dt>

        <dd>
            @Html.DisplayFor(model => model.User1.FirstName) @Html.DisplayFor(model => model.User1.LastName)
        </dd>

    </dl>
    @Html.ValidationMessage("Error", new { @class = "text-danger" })
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-actions no-color">
            <input type="submit" value="Delete" class="btn btn-default" /> |
            @Html.ActionLink("Back to List", "Index")
        </div>
    }
</div>
