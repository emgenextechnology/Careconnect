@model EmgenexBusinessPortal.Models.BusinessLoginViewModel

@{
    ViewBag.Title = "BusinessLogin";
    Layout = null;
}
<style>
    .Remembercheckbox {
        text-align: center;
        font-size: 18px;
        color: #4c4c4c;
    }

        .Remembercheckbox label, .radio label {
            min-height: 20px;
            padding-left: 20px;
            margin-bottom: 0;
            font-weight: 400;
            cursor: pointer;
        }
</style>

<link href="/Controlpanel/Content/css/bootstrap.min.css" rel="stylesheet" />
<link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:400,600,700" rel="stylesheet">
<link href="/Content/style.css" rel="stylesheet" />
<div class="container">
    <div class="common-login-page">
        <div class="careconnect-logo">
            <a href="#"><img src="@ViewBag.Logo" onerror="this.src='/Assets/Logo_Not_Available.jpg';" class="img-responsive"></a> @ViewBag.businessName Login
        </div>

        @using (Html.BeginForm("BusinessLogin", "Account", new { returnUrl = "/" + @ViewBag.RelativeUrl }))
        {
            <div class="common-login-form">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.Hidden("RelativeUrl", (string)@ViewBag.RelativeUrl)
                @Html.Hidden("ReturnRedirictUrl")
                <div class="form-group">

                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control formbox user-img", id = "cc-username", required = "required", placeholder = "User name" } })
                </div>
                <div class="form-group">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control formbox pass-img", id = "cc-password", required = "required", placeholder = "Password" } })
                </div>
                <button type="submit" class="btn btn-default cc-btn">Login</button>
                <div class="Remembercheckbox">
                    @Html.CheckBoxFor(model => model.RememberMe)@Html.LabelFor(model => model.RememberMe)
                    @Html.ValidationMessageFor(model => model.RememberMe, "", new { @class = "text-danger" })

                </div>
                <div class="checkbox">
                    @Html.ActionLink("Forgot Password", "ForgotPassword", "Account")<br />
                </div>
                <br />
                @*<p align="justify">
                    NOTICE TO ALL USERS:
                    This system is restricted solely to authorized users and may be monitored for administrative and security reasons. The user expressly consents to such monitoring. Any use of this system must be in compliance with careconnectsystems’ policies and applicable laws. Unauthorized users or any unauthorized use may subject the user to criminal and civil penalties under state, federal, or other applicable domestic and foreign laws.

                    When a PDF file is viewed, a copy of the file may be automatically saved to your workstation depending on your web browser. To prevent the unlawful viewing or distribution of protected health information that may be included in a PDF, these files should be managed in accordance with your organization's privacy or security policies.
                </p>*@
            </div>
        }
        <span class="copy"><a href="#"><img src="/Controlpanel/Content/images/careconnect-logo.png" class="img-responsive"></a></span>
    </div>
</div>@Scripts.Render("~/bundles/jquery")

<script>
    $(function () {
        var hashVal = window.location.hash;
        if (hashVal.length > 0) {
            $('#ReturnRedirictUrl').val(hashVal);
        }
    });
</script>

@*<div class="container">
        <h2>@ViewBag.businessName - Login</h2>
        <img src="@ViewBag.Logo" onerror="this.src='/Assets/Logo_Not_Available.jpg';" style="width:300px;" />

        @using (Html.BeginForm("BusinessLogin", "Account", new { returnUrl = "/" + @ViewBag.RelativeUrl }))
        {
            @Html.AntiForgeryToken()
            @Html.Hidden("RelativeUrl", (string)@ViewBag.RelativeUrl)
            <div class="form-horizontal">

                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.RememberMe, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.RememberMe)
                            @Html.ValidationMessageFor(model => model.RememberMe, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Login" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

    </div>*@
