//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EBP.Business.Database
{
    using System;
    using System.Collections.Generic;
    
    public partial class User
    {
        public User()
        {
            this.Accounts = new HashSet<Account>();
            this.Accounts1 = new HashSet<Account>();
            this.Departments = new HashSet<Department>();
            this.Departments1 = new HashSet<Department>();
            this.DepartmentPrivileges = new HashSet<DepartmentPrivilege>();
            this.DepartmentPrivileges1 = new HashSet<DepartmentPrivilege>();
            this.Leads = new HashSet<Lead>();
            this.Leads1 = new HashSet<Lead>();
            this.LookupCountries = new HashSet<LookupCountry>();
            this.LookupCountries1 = new HashSet<LookupCountry>();
            this.LookupDegrees = new HashSet<LookupDegree>();
            this.LookupDegrees1 = new HashSet<LookupDegree>();
            this.LookupDocumentTypes = new HashSet<LookupDocumentType>();
            this.LookupDocumentTypes1 = new HashSet<LookupDocumentType>();
            this.LookupEnrolledServices = new HashSet<LookupEnrolledService>();
            this.LookupEnrolledServices1 = new HashSet<LookupEnrolledService>();
            this.LookupLeadSources = new HashSet<LookupLeadSource>();
            this.LookupLeadSources1 = new HashSet<LookupLeadSource>();
            this.LookupMarketingCategories = new HashSet<LookupMarketingCategory>();
            this.LookupMarketingCategories1 = new HashSet<LookupMarketingCategory>();
            this.LookupNotificationTypes = new HashSet<LookupNotificationType>();
            this.LookupNotificationTypes1 = new HashSet<LookupNotificationType>();
            this.LookupPracticeSpecialityTypes = new HashSet<LookupPracticeSpecialityType>();
            this.LookupPracticeSpecialityTypes1 = new HashSet<LookupPracticeSpecialityType>();
            this.LookupPracticeTypes = new HashSet<LookupPracticeType>();
            this.LookupPracticeTypes1 = new HashSet<LookupPracticeType>();
            this.LookupServiceColumns = new HashSet<LookupServiceColumn>();
            this.LookupServiceColumns1 = new HashSet<LookupServiceColumn>();
            this.LookupStates = new HashSet<LookupState>();
            this.LookupStates1 = new HashSet<LookupState>();
            this.LookupTaskTypes = new HashSet<LookupTaskType>();
            this.LookupTaskTypes1 = new HashSet<LookupTaskType>();
            this.MarketingAttachments = new HashSet<MarketingAttachment>();
            this.MarketingDocuments = new HashSet<MarketingDocument>();
            this.MarketingDocuments1 = new HashSet<MarketingDocument>();
            this.ModulesMasters = new HashSet<ModulesMaster>();
            this.ModulesMasters1 = new HashSet<ModulesMaster>();
            this.Phones = new HashSet<Phone>();
            this.Phones1 = new HashSet<Phone>();
            this.PracticeAddressMappers = new HashSet<PracticeAddressMapper>();
            this.PracticeAddressMappers1 = new HashSet<PracticeAddressMapper>();
            this.PracticeContacts = new HashSet<PracticeContact>();
            this.PracticeContacts1 = new HashSet<PracticeContact>();
            this.PracticePracticeSpecialityMappers = new HashSet<PracticePracticeSpecialityMapper>();
            this.PracticePracticeSpecialityMappers1 = new HashSet<PracticePracticeSpecialityMapper>();
            this.PracticeProviderLocationMappers = new HashSet<PracticeProviderLocationMapper>();
            this.PracticeProviderLocationMappers1 = new HashSet<PracticeProviderLocationMapper>();
            this.PracticeProviderMappers = new HashSet<PracticeProviderMapper>();
            this.PracticeProviderMappers1 = new HashSet<PracticeProviderMapper>();
            this.PracticeServiceMappers = new HashSet<PracticeServiceMapper>();
            this.PracticeServiceMappers1 = new HashSet<PracticeServiceMapper>();
            this.Privileges = new HashSet<Privilege>();
            this.Privileges1 = new HashSet<Privilege>();
            this.Providers = new HashSet<Provider>();
            this.Providers1 = new HashSet<Provider>();
            this.Reps = new HashSet<Rep>();
            this.Reps1 = new HashSet<Rep>();
            this.Reps2 = new HashSet<Rep>();
            this.ReportColumns = new HashSet<ReportColumn>();
            this.ReportColumns1 = new HashSet<ReportColumn>();
            this.ReportColumnValues = new HashSet<ReportColumnValue>();
            this.ReportColumnValues1 = new HashSet<ReportColumnValue>();
            this.ReportFinances = new HashSet<ReportFinance>();
            this.ReportFinances1 = new HashSet<ReportFinance>();
            this.ReportMasters = new HashSet<ReportMaster>();
            this.ReportMasters1 = new HashSet<ReportMaster>();
            this.RepServiceMappers = new HashSet<RepServiceMapper>();
            this.RepServiceMappers1 = new HashSet<RepServiceMapper>();
            this.RolePrivileges = new HashSet<RolePrivilege>();
            this.SalesImportSummeries = new HashSet<SalesImportSummery>();
            this.SalesUserPrivileges = new HashSet<SalesUserPrivilege>();
            this.Tasks = new HashSet<Task>();
            this.Tasks1 = new HashSet<Task>();
            this.Tasks2 = new HashSet<Task>();
            this.TaskAttachments = new HashSet<TaskAttachment>();
            this.TaskItemOrders = new HashSet<TaskItemOrder>();
            this.TaskItemOrders1 = new HashSet<TaskItemOrder>();
            this.TaskItems = new HashSet<TaskItem>();
            this.TaskItems1 = new HashSet<TaskItem>();
            this.TaskLogs = new HashSet<TaskLog>();
            this.TaskUsers = new HashSet<TaskUser>();
            this.TaskUsers1 = new HashSet<TaskUser>();
            this.TaskUsers2 = new HashSet<TaskUser>();
            this.TaskUserAlerts = new HashSet<TaskUserAlert>();
            this.TaskUserAlerts1 = new HashSet<TaskUserAlert>();
            this.TaskUserAlerts2 = new HashSet<TaskUserAlert>();
            this.UserClaims = new HashSet<UserClaim>();
            this.UserColumnVisibilities = new HashSet<UserColumnVisibility>();
            this.UserColumnVisibilities1 = new HashSet<UserColumnVisibility>();
            this.UserDepartments = new HashSet<UserDepartment>();
            this.UserDepartments1 = new HashSet<UserDepartment>();
            this.UserDepartments2 = new HashSet<UserDepartment>();
            this.UserLogins = new HashSet<UserLogin>();
            this.UserNotificationMappers = new HashSet<UserNotificationMapper>();
            this.UserNotificationMappers1 = new HashSet<UserNotificationMapper>();
            this.UserNotificationMappers2 = new HashSet<UserNotificationMapper>();
            this.UserPrivileges = new HashSet<UserPrivilege>();
            this.UserPrivileges1 = new HashSet<UserPrivilege>();
            this.UserPrivileges2 = new HashSet<UserPrivilege>();
            this.UserProfiles = new HashSet<UserProfile>();
            this.UserProfiles1 = new HashSet<UserProfile>();
            this.UserProfiles2 = new HashSet<UserProfile>();
            this.Roles = new HashSet<Role>();
            this.Addresses = new HashSet<Address>();
            this.Addresses1 = new HashSet<Address>();
            this.Practices = new HashSet<Practice>();
            this.Practices1 = new HashSet<Practice>();
            this.BusinessMasters = new HashSet<BusinessMaster>();
            this.BusinessMasters1 = new HashSet<BusinessMaster>();
            this.Notes = new HashSet<Note>();
            this.Notes1 = new HashSet<Note>();
            this.RepGroups = new HashSet<RepGroup>();
            this.RepGroups1 = new HashSet<RepGroup>();
            this.RepgroupManagerMappers = new HashSet<RepgroupManagerMapper>();
            this.RepgroupManagerMappers1 = new HashSet<RepgroupManagerMapper>();
            this.RepgroupManagerMappers2 = new HashSet<RepgroupManagerMapper>();
        }
    
        public int Id { get; set; }
        public string FirstName { get; set; }
        public string MiddleName { get; set; }
        public string LastName { get; set; }
        public Nullable<int> BusinessId { get; set; }
        public string Email { get; set; }
        public bool EmailConfirmed { get; set; }
        public string PasswordHash { get; set; }
        public string SecurityStamp { get; set; }
        public string PhoneNumber { get; set; }
        public bool PhoneNumberConfirmed { get; set; }
        public bool TwoFactorEnabled { get; set; }
        public Nullable<System.DateTime> LockoutEndDateUtc { get; set; }
        public bool LockoutEnabled { get; set; }
        public int AccessFailedCount { get; set; }
        public string UserName { get; set; }
        public Nullable<bool> IsActive { get; set; }
        public Nullable<int> OldId { get; set; }
    
        public virtual ICollection<Account> Accounts { get; set; }
        public virtual ICollection<Account> Accounts1 { get; set; }
        public virtual ICollection<Department> Departments { get; set; }
        public virtual ICollection<Department> Departments1 { get; set; }
        public virtual ICollection<DepartmentPrivilege> DepartmentPrivileges { get; set; }
        public virtual ICollection<DepartmentPrivilege> DepartmentPrivileges1 { get; set; }
        public virtual ICollection<Lead> Leads { get; set; }
        public virtual ICollection<Lead> Leads1 { get; set; }
        public virtual ICollection<LookupCountry> LookupCountries { get; set; }
        public virtual ICollection<LookupCountry> LookupCountries1 { get; set; }
        public virtual ICollection<LookupDegree> LookupDegrees { get; set; }
        public virtual ICollection<LookupDegree> LookupDegrees1 { get; set; }
        public virtual ICollection<LookupDocumentType> LookupDocumentTypes { get; set; }
        public virtual ICollection<LookupDocumentType> LookupDocumentTypes1 { get; set; }
        public virtual ICollection<LookupEnrolledService> LookupEnrolledServices { get; set; }
        public virtual ICollection<LookupEnrolledService> LookupEnrolledServices1 { get; set; }
        public virtual ICollection<LookupLeadSource> LookupLeadSources { get; set; }
        public virtual ICollection<LookupLeadSource> LookupLeadSources1 { get; set; }
        public virtual ICollection<LookupMarketingCategory> LookupMarketingCategories { get; set; }
        public virtual ICollection<LookupMarketingCategory> LookupMarketingCategories1 { get; set; }
        public virtual ICollection<LookupNotificationType> LookupNotificationTypes { get; set; }
        public virtual ICollection<LookupNotificationType> LookupNotificationTypes1 { get; set; }
        public virtual ICollection<LookupPracticeSpecialityType> LookupPracticeSpecialityTypes { get; set; }
        public virtual ICollection<LookupPracticeSpecialityType> LookupPracticeSpecialityTypes1 { get; set; }
        public virtual ICollection<LookupPracticeType> LookupPracticeTypes { get; set; }
        public virtual ICollection<LookupPracticeType> LookupPracticeTypes1 { get; set; }
        public virtual ICollection<LookupServiceColumn> LookupServiceColumns { get; set; }
        public virtual ICollection<LookupServiceColumn> LookupServiceColumns1 { get; set; }
        public virtual ICollection<LookupState> LookupStates { get; set; }
        public virtual ICollection<LookupState> LookupStates1 { get; set; }
        public virtual ICollection<LookupTaskType> LookupTaskTypes { get; set; }
        public virtual ICollection<LookupTaskType> LookupTaskTypes1 { get; set; }
        public virtual ICollection<MarketingAttachment> MarketingAttachments { get; set; }
        public virtual ICollection<MarketingDocument> MarketingDocuments { get; set; }
        public virtual ICollection<MarketingDocument> MarketingDocuments1 { get; set; }
        public virtual ICollection<ModulesMaster> ModulesMasters { get; set; }
        public virtual ICollection<ModulesMaster> ModulesMasters1 { get; set; }
        public virtual ICollection<Phone> Phones { get; set; }
        public virtual ICollection<Phone> Phones1 { get; set; }
        public virtual ICollection<PracticeAddressMapper> PracticeAddressMappers { get; set; }
        public virtual ICollection<PracticeAddressMapper> PracticeAddressMappers1 { get; set; }
        public virtual ICollection<PracticeContact> PracticeContacts { get; set; }
        public virtual ICollection<PracticeContact> PracticeContacts1 { get; set; }
        public virtual ICollection<PracticePracticeSpecialityMapper> PracticePracticeSpecialityMappers { get; set; }
        public virtual ICollection<PracticePracticeSpecialityMapper> PracticePracticeSpecialityMappers1 { get; set; }
        public virtual ICollection<PracticeProviderLocationMapper> PracticeProviderLocationMappers { get; set; }
        public virtual ICollection<PracticeProviderLocationMapper> PracticeProviderLocationMappers1 { get; set; }
        public virtual ICollection<PracticeProviderMapper> PracticeProviderMappers { get; set; }
        public virtual ICollection<PracticeProviderMapper> PracticeProviderMappers1 { get; set; }
        public virtual ICollection<PracticeServiceMapper> PracticeServiceMappers { get; set; }
        public virtual ICollection<PracticeServiceMapper> PracticeServiceMappers1 { get; set; }
        public virtual ICollection<Privilege> Privileges { get; set; }
        public virtual ICollection<Privilege> Privileges1 { get; set; }
        public virtual ICollection<Provider> Providers { get; set; }
        public virtual ICollection<Provider> Providers1 { get; set; }
        public virtual ICollection<Rep> Reps { get; set; }
        public virtual ICollection<Rep> Reps1 { get; set; }
        public virtual ICollection<Rep> Reps2 { get; set; }
        public virtual ICollection<ReportColumn> ReportColumns { get; set; }
        public virtual ICollection<ReportColumn> ReportColumns1 { get; set; }
        public virtual ICollection<ReportColumnValue> ReportColumnValues { get; set; }
        public virtual ICollection<ReportColumnValue> ReportColumnValues1 { get; set; }
        public virtual ICollection<ReportFinance> ReportFinances { get; set; }
        public virtual ICollection<ReportFinance> ReportFinances1 { get; set; }
        public virtual ICollection<ReportMaster> ReportMasters { get; set; }
        public virtual ICollection<ReportMaster> ReportMasters1 { get; set; }
        public virtual ICollection<RepServiceMapper> RepServiceMappers { get; set; }
        public virtual ICollection<RepServiceMapper> RepServiceMappers1 { get; set; }
        public virtual ICollection<RolePrivilege> RolePrivileges { get; set; }
        public virtual ICollection<SalesImportSummery> SalesImportSummeries { get; set; }
        public virtual ICollection<SalesUserPrivilege> SalesUserPrivileges { get; set; }
        public virtual ICollection<Task> Tasks { get; set; }
        public virtual ICollection<Task> Tasks1 { get; set; }
        public virtual ICollection<Task> Tasks2 { get; set; }
        public virtual ICollection<TaskAttachment> TaskAttachments { get; set; }
        public virtual ICollection<TaskItemOrder> TaskItemOrders { get; set; }
        public virtual ICollection<TaskItemOrder> TaskItemOrders1 { get; set; }
        public virtual ICollection<TaskItem> TaskItems { get; set; }
        public virtual ICollection<TaskItem> TaskItems1 { get; set; }
        public virtual ICollection<TaskLog> TaskLogs { get; set; }
        public virtual ICollection<TaskUser> TaskUsers { get; set; }
        public virtual ICollection<TaskUser> TaskUsers1 { get; set; }
        public virtual ICollection<TaskUser> TaskUsers2 { get; set; }
        public virtual ICollection<TaskUserAlert> TaskUserAlerts { get; set; }
        public virtual ICollection<TaskUserAlert> TaskUserAlerts1 { get; set; }
        public virtual ICollection<TaskUserAlert> TaskUserAlerts2 { get; set; }
        public virtual ICollection<UserClaim> UserClaims { get; set; }
        public virtual ICollection<UserColumnVisibility> UserColumnVisibilities { get; set; }
        public virtual ICollection<UserColumnVisibility> UserColumnVisibilities1 { get; set; }
        public virtual ICollection<UserDepartment> UserDepartments { get; set; }
        public virtual ICollection<UserDepartment> UserDepartments1 { get; set; }
        public virtual ICollection<UserDepartment> UserDepartments2 { get; set; }
        public virtual ICollection<UserLogin> UserLogins { get; set; }
        public virtual ICollection<UserNotificationMapper> UserNotificationMappers { get; set; }
        public virtual ICollection<UserNotificationMapper> UserNotificationMappers1 { get; set; }
        public virtual ICollection<UserNotificationMapper> UserNotificationMappers2 { get; set; }
        public virtual ICollection<UserPrivilege> UserPrivileges { get; set; }
        public virtual ICollection<UserPrivilege> UserPrivileges1 { get; set; }
        public virtual ICollection<UserPrivilege> UserPrivileges2 { get; set; }
        public virtual ICollection<UserProfile> UserProfiles { get; set; }
        public virtual ICollection<UserProfile> UserProfiles1 { get; set; }
        public virtual ICollection<UserProfile> UserProfiles2 { get; set; }
        public virtual ICollection<Role> Roles { get; set; }
        public virtual ICollection<Address> Addresses { get; set; }
        public virtual ICollection<Address> Addresses1 { get; set; }
        public virtual ICollection<Practice> Practices { get; set; }
        public virtual ICollection<Practice> Practices1 { get; set; }
        public virtual ICollection<BusinessMaster> BusinessMasters { get; set; }
        public virtual ICollection<BusinessMaster> BusinessMasters1 { get; set; }
        public virtual BusinessMaster BusinessMaster { get; set; }
        public virtual ICollection<Note> Notes { get; set; }
        public virtual ICollection<Note> Notes1 { get; set; }
        public virtual ICollection<RepGroup> RepGroups { get; set; }
        public virtual ICollection<RepGroup> RepGroups1 { get; set; }
        public virtual ICollection<RepgroupManagerMapper> RepgroupManagerMappers { get; set; }
        public virtual ICollection<RepgroupManagerMapper> RepgroupManagerMappers1 { get; set; }
        public virtual ICollection<RepgroupManagerMapper> RepgroupManagerMappers2 { get; set; }
    }
}
