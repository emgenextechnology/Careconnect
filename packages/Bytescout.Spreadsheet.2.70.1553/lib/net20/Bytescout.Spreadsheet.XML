<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Bytescout.Spreadsheet</name>
    </assembly>
    <members>
        <member name="T:Bytescout.Spreadsheet.Constants.XlCellType">
            <summary>
            Specifies the type of cells
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlCellType.AllFormatConditions">
            <summary>
            Cells of any format.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlCellType.AllValidation">
            <summary>
            Cells having validation criteria.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlCellType.Blanks">
            <summary>
            Empty cells
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlCellType.Comments">
            <summary>
            Cells containing comments.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlCellType.Constants">
            <summary>
            Cells containing constants.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlCellType.Formulas">
            <summary>
            Cells containing formulas.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlCellType.LastCell">
            <summary>
            The last cell in the range.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlCellType.Visible">
            <summary>
            All visible cells.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlCellType.SameFormatConditions">
            <summary>
            Cells having the same format.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlCellType.SameValidation">
            <summary>
            Cells having the same validation criteria.
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Constants.XlDVAlertStyle">
            <summary>
            Specifies the icon used in message boxes displayed during validation.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlDVAlertStyle.Information">
            <summary>
            Stop icon.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlDVAlertStyle.Stop">
            <summary>
            Warning icon.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlDVAlertStyle.Warning">
            <summary>
            Information icon.
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Constants.XlDVType">
            <summary>
            Specifies the type of data validation used to validate user input
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlDVType.Custom">
            <summary>
            Data validation which uses a custom formula to check the cell value.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlDVType.Date">
            <summary>
            Data validation which checks for date values satisfying the given condition.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlDVType.Decimal">
            <summary>
            Data validation which checks for decimal values satisfying the given condition.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlDVType.InputOnly">
            <summary>
            Only validate when user changes the value.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlDVType.List">
            <summary>
            Data validation which checks for a value matching one of list of values.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlDVType.TextLength">
            <summary>
            Data validation which checks for text values, whose length satisfies the given condition.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlDVType.Time">
            <summary>
            Data validation which checks for time values satisfying the given condition.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlDVType.WholeNumber">
            <summary>
            Data validation which checks for whole number values satisfying the given condition.
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Constants.XlFormatConditionOperator">
            <summary>
            Specifies the operator to use to compare a formula against the value in
            a cell or, for xlBetween and xlNotBetween, to compare two formulas.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlFormatConditionOperator.Between">
            <summary>
            Between.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlFormatConditionOperator.Equal">
            <summary>
            Equal.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlFormatConditionOperator.Greater">
            <summary>
            Greater than.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlFormatConditionOperator.GreaterEqual">
            <summary>
            Greater than or equal to.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlFormatConditionOperator.Less">
            <summary>
            Less than.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlFormatConditionOperator.LessEqual">
            <summary>
            Less than or equal to.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlFormatConditionOperator.NotBetween">
            <summary>
            Not between.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlFormatConditionOperator.NotEqual">
            <summary>
            Not equal.
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Constants.XlFormatConditionType">
            <summary>
            Specifies whether the conditional format is based on a cell value or an expression.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlFormatConditionType.CellValue">
            <summary>
            The conditional format is based on a cell value.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlFormatConditionType.Expression">
            <summary>
            The conditional format is based on an expression.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlFormatConditionType.ColorScale">
            <summary>
            Color scale
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlFormatConditionType.Databar">
            <summary>
            Databar
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlFormatConditionType.Top10">
            <summary>
            Top 10 values
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlFormatConditionType.IconSets">
            <summary>
            Icon sets
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlFormatConditionType.UniqueValues">
            <summary>
            Unique values
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlFormatConditionType.TextString">
            <summary>
            Text string
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlFormatConditionType.BlanksCondition">
            <summary>
            Blanks condition
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlFormatConditionType.TimePeriod">
            <summary>
            Time period
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlFormatConditionType.AboveAverageCondition">
            <summary>
            Above average condition
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlFormatConditionType.NoBlanksCondition">
            <summary>
            No blanks condition
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlFormatConditionType.ErrorsCondition">
            <summary>
            Errors condition
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlFormatConditionType.NoErrorsCondition">
            <summary>
            No errors condition
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Constants.XlIMEMode">
            <summary>
            Specifies the IME (input method editor) mode
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlIMEMode.Alpha">
            <summary>
            Half-width alphanumeric
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlIMEMode.AlphaFull">
            <summary>
            Full-width alphanumeric
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlIMEMode.Disable">
            <summary>
            Disable
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlIMEMode.Hangul">
            <summary>
            Half-width hangul
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlIMEMode.HangulFull">
            <summary>
            Full-width hangul
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlIMEMode.Hiragana">
            <summary>
            Hiragana
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlIMEMode.Katakana">
            <summary>
            Wide katakana
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlIMEMode.KatakanaHalf">
            <summary>
            Narrow katakana
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlIMEMode.NoControl">
            <summary>
            No Control
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlIMEMode.Off">
            <summary>
            Off (English mode)
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlIMEMode.On">
            <summary>
            On
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Constants.XlSpecialCellsValue">
            <summary>
            Specifies cells with a special type of value
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlSpecialCellsValue.xlErrors">
            <summary>
            Cells with errors.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlSpecialCellsValue.xlLogical">
            <summary>
             	Cells with logical values.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlSpecialCellsValue.xlNumbers">
            <summary>
            Cells with numeric values.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XlSpecialCellsValue.xlTextValues">
            <summary>
            Cells with text.
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Constants.BorderLineStyle">
            <summary>
            Specifies the line style for the border.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.BorderLineStyle.Continuous">
            <summary>
            Continuous line
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.BorderLineStyle.Dash">
            <summary>
            Dashed line
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.BorderLineStyle.DashDot">
            <summary>
            Alternating dashes and dots
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.BorderLineStyle.DashDotDot">
            <summary>
            Dash followed by two dots
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.BorderLineStyle.Dot">
            <summary>
            Dotted line
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.BorderLineStyle.Double">
            <summary>
            Double line
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.BorderLineStyle.LineStyleNone">
            <summary>
            No line
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.BorderLineStyle.SlantDashDot">
            <summary>
            Slanted dashes
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Constants.BorderWeight">
            <summary>
            Specifies the weight of the border around a range.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.BorderWeight.Hairline">
            <summary>
            Hairline (thinnest border)
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.BorderWeight.Medium">
            <summary>
            Medium
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.BorderWeight.Thick">
            <summary>
            Thick (widest border)
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.BorderWeight.Thin">
            <summary>
            Thin
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Constants.xlColorIndex">
            <summary>
            Specifies the color.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.xlColorIndex.Automatic">
            <summary>
            Automatic color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.xlColorIndex.None">
            <summary>
            No color
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Constants.SortDataOption">
            <summary>
            Specifies how to sort text.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.SortDataOption.SortNormal">
            <summary>
            Sorts numeric and text data separately.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.SortDataOption.SortTextAsNumbers">
            <summary>
            Treat text as numeric data for the sort.
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Constants.SortOrder">
            <summary>
            Specifies the sort order
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.SortOrder.Ascending">
            <summary>
            Sorts in ascending order
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.SortOrder.Descending">
            <summary>
            Sorts in descending order
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Constants.SortOrientation">
            <summary>
            Specifies the sort orientation.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.SortOrientation.SortColumns">
            <summary>
            Sorts by column.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.SortOrientation.SortRows">
            <summary>
            Sorts by row.
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Constants.VisibilityTypes">
            <summary>
            This simple type defines the possible states for workbook window visibility.
            Please take a look at:
                Open XML spec, 18.18.89 ST_Visibility (Visibility Types)
                [MS-XLS] 2.4.345 Window1
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.VisibilityTypes.hidden">
            <summary>
            Indicates the workbook window is hidden, but can be
            shown by the user via the user interface.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.VisibilityTypes.veryHidden">
            <summary>
            Indicates the sheet is hidden and cannot be shown in the user
            interface (UI). This state is only available programmatically.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.VisibilityTypes.visible">
            <summary>
            Indicates the workbook window is visible.
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Constants.PrintLocation">
            <summary>
            Specifies printed page order.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PrintLocation.PrintNoComments">
            <summary>
            Do not print comments.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PrintLocation.PrintSheetEnd">
            <summary>
            Print comments at end of document.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PrintLocation.PrintInPlace">
            <summary>
            Print comments as displayed.
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Constants.PageOrder">
            <summary>
            Specifies printed page order.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PageOrder.DownThenOver">
            <summary>
            Order pages vertically first, then move horizontally.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PageOrder.OverThenDown">
            <summary>
            Order pages horizontally first, then move vertically.
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Constants.PrintErrors">
            <summary>
            Specifies how to display cells with errors when printing the worksheet.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PrintErrors.Displayed">
            <summary>
            Display cell errors as displayed on screen.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PrintErrors.Blank">
            <summary>
            Display cell errors as blank.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PrintErrors.Dash">
            <summary>
            Display cell errors as dashes ("--").
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PrintErrors.NA">
            <summary>
            Display cell errors as #N/A.
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Constants.PageOrientation">
            <summary>
            Specifies the paper orientation.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PageOrientation.Landscape">
            <summary>
            Landscape orientation.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PageOrientation.Portrait">
            <summary>
            Portrait orientation.
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Constants.PaperSize">
            <summary>
            Specifies the paper size.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.Paper10x11">
            <summary>
            10 x 11 in
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.Paper10x14">
            <summary>
            10 x 14 in
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.Paper11x17">
            <summary>
            11 x 17 in
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.Paper12x11">
            <summary>
            12 x 11 in
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.Paper15x11">
            <summary>
            15 x 11 in
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.Paper9x11">
            <summary>
            9 x 11 in
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperA2">
            <summary>
            A2 420 x 594 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperA3">
            <summary>
            A3 297 x 420 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperA3Extra">
            <summary>
            A3 Extra 322 x 445 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperA3Rotated">
            <summary>
            A3 Rotated 420 x 297 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperA3Transverse">
            <summary>
            A3 Transverse 297 x 420 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperA3ExtraTransverse">
            <summary>
            A3 Extra Transverse 322 x 445 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperA4">
            <summary>
            A4 210 x 297 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperA4Extra">
            <summary>
            A4 Extra 9.27 x 12.69 in
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperA4Plus">
            <summary>
            A4 Plus 210 x 330 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperA4Rotated">
            <summary>
            A4 Rotated 297 x 210 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperA4Small">
            <summary>
            A4 Small 210 x 297 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperA4Transverse">
            <summary>
            A4 Transverse 210 x 297 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperA5">
            <summary>
            A5 148 x 210 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperA5Extra">
            <summary>
            A5 Extra 174 x 235 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperA5Rotated">
            <summary>
            A5 Rotated 210 x 148 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperA5Transverse">
            <summary>
            A5 Transverse 148 x 210 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperA6">
            <summary>
            A6 105 x 148 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperA6Rotated">
            <summary>
            A6 Rotated 148 x 105 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperB4">
            <summary>
            B4 (JIS) 250 x 354 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperB4ISO">
            <summary>
            B4 (ISO) 250 x 353 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperB4Rotated">
            <summary>
            B4 (JIS) Rotated 364 x 257 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperB5">
            <summary>
            B5 (JIS) 182 x 257 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperB5Extra">
            <summary>
            B5 (ISO) Extra 201 x 276 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperB5Rotated">
            <summary>
            B5 (JIS) Rotated 257 x 182 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperB5Transverse">
            <summary>
            B5 (JIS) Transverse 182 x 257 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperB6">
            <summary>
            B6 (JIS) 128 x 182 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperB6Rotated">
            <summary>
            B6 (JIS) Rotated 182 x 128 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperCsheet">
            <summary>
            C size sheet
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperDsheet">
            <summary>
            D size sheet
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperEnvelope09">
            <summary>
            US Envelope #9 3 7/8 x 8 7/8
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperEnvelope10">
            <summary>
            US Envelope #10 4 1/8 x 9 1/2
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperEnvelope11">
            <summary>
            US Envelope #11 4 1/2 x 10 3/8
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperEnvelope12">
            <summary>
            US Envelope #12 4 \276 x 11
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperEnvelope14">
            <summary>
            US Envelope #14 5 x 11 1/2
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperEnvelopeB4">
            <summary>
            Envelope B4 250 x 353 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperEnvelopeB5">
            <summary>
            Envelope B5 176 x 250 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperEnvelopeB6">
            <summary>
            Envelope B6 176 x 125 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperEnvelopeC3">
            <summary>
            Envelope C3 324 x 458 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperEnvelopeC4">
            <summary>
            Envelope C4 229 x 324 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperEnvelopeC5">
            <summary>
            Envelope C5 162 x 229 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperEnvelopeC6">
            <summary>
            Envelope C6 114 x 162 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperEnvelopeC65">
            <summary>
            Envelope C65 114 x 229 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperEnvelopeDL">
            <summary>
            Envelope DL 110 x 220mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperEnvelopeInvite">
            <summary>
            Envelope Invite 220 x 220 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperEnvelopeItaly">
            <summary>
            Envelope 110 x 230 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperEnvelopeMonarch">
            <summary>
            US Envelope Monarch 3.875 x 7.5 in
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperEnvelopePersonal">
            <summary>
            6 3/4 US Envelope 3 5/8 x 6 1/2 in
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperEsheet">
            <summary>
            E size sheet
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperExecutive">
            <summary>
            US Executive 7 1/4 x 10 1/2 in
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperFanfoldLegalGerman">
            <summary>
            German Legal Fanfold 8 1/2 x 13 in
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperFanfoldStdGerman">
            <summary>
            German Std Fanfold 8 1/2 x 12 in
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperFanfoldUS">
            <summary>
            US Std Fanfold 14 7/8 x 11 in
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperFolio">
            <summary>
            Folio 8 1/2 x 13 in
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperJapaneseDoublePostcard">
            <summary>
            Japanese Double Postcard 200 x 148 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperJapaneseDoublePostcardRotated">
            <summary>
            Double Japanese Postcard Rotated 148 x 200 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperJapaneseEnvelopeChou3">
            <summary>
            Japanese Envelope Chou #3
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperJapaneseEnvelopeChou3Rotated">
            <summary>
            Japanese Envelope Chou #3 Rotated
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperJapaneseEnvelopeChou4">
            <summary>
            Japanese Envelope Chou #4
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperJapaneseEnvelopeChou4Rotated">
            <summary>
            Japanese Envelope Chou #4 Rotated
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperJapaneseEnvelopeKaku2">
            <summary>
            Japanese Envelope Kaku #2
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperJapaneseEnvelopeKaku2Rotated">
            <summary>
            Japanese Envelope Kaku #2 Rotated
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperJapaneseEnvelopeKaku3">
            <summary>
            Japanese Envelope Kaku #3
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperJapaneseEnvelopeKaku3Rotated">
            <summary>
            Japanese Envelope Kaku #3 Rotated
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperJapaneseEnvelopeYou4">
            <summary>
            Japanese Envelope You #4
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperJapaneseEnvelopeYou4Rotated">
            <summary>
            Japanese Envelope You #4 Rotated
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperJapanesePostcard">
            <summary>
            Japanese Postcard 100 x 148 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperJapanesePostcardRotated">
            <summary>
            Japanese Postcard Rotated 148 x 100 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperLedger">
            <summary>
            US Ledger 17 x 11 in
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperLegal">
            <summary>
            US Legal 8 1/2 x 14 in
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperLegalExtra9">
            <summary>
            US Legal Extra 9 \275 x 15 in
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperLetter">
            <summary>
            US Letter 8 1/2 x 11 in
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperLetterExtra9">
            <summary>
            US Letter Extra 9 \275 x 12 in
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperLetterExtraTransverse9">
            <summary>
            Letter Extra Transverse 9\275 x 12 in
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperLetterPlus">
            <summary>
            US Letter Plus 8.5 x 12.69 in
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperLetterRotated">
            <summary>
            Letter Rotated 11 x 8 1/2 11 in
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperLetterSmall">
            <summary>
            US Letter Small 8 1/2 x 11 in
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperLetterTransverse">
            <summary>
            Letter Transverse 8 \275 x 11 in
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperNote">
            <summary>
            US Note 8 1/2 x 11 in
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperPRC16K">
            <summary>
            PRC 16K 146 x 215 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperPRC16KRotated">
            <summary>
            PRC 16K Rotated
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperPRC32K">
            <summary>
            PRC 32K 97 x 151 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperPRC32KRotated">
            <summary>
            PRC 32K Rotated
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperPRC32KBig">
            <summary>
            PRC 32K(Big) 97 x 151 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperPRC32KBigRotated">
            <summary>
            PRC 32K(Big) Rotated
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperPRCEnvelope1">
            <summary>
            PRC Envelope #1 102 x 165 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperPRCEnvelope1Rotated">
            <summary>
            PRC Envelope #1 Rotated 165 x 102 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperPRCEnvelope2">
            <summary>
            PRC Envelope #2 102 x 176 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperPRCEnvelope2Rotated">
            <summary>
            PRC Envelope #2 Rotated 176 x 102 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperPRCEnvelope3">
            <summary>
            PRC Envelope #3 125 x 176 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperPRCEnvelope3Rotated">
            <summary>
            PRC Envelope #3 Rotated 176 x 125 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperPRCEnvelope4">
            <summary>
            PRC Envelope #4 110 x 208 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperPRCEnvelope4Rotated">
            <summary>
            PRC Envelope #4 Rotated 208 x 110 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperPRCEnvelope5">
            <summary>
            PRC Envelope #5 110 x 220 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperPRCEnvelope5Rotated">
            <summary>
            PRC Envelope #5 Rotated 220 x 110 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperPRCEnvelope6">
            <summary>
            PRC Envelope #6 120 x 230 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperPRCEnvelope6Rotated">
            <summary>
            PRC Envelope #6 Rotated 230 x 120 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperPRCEnvelope7">
            <summary>
            PRC Envelope #7 160 x 230 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperPRCEnvelope7Rotated">
            <summary>
            PRC Envelope #7 Rotated 230 x 160 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperPRCEnvelope8">
            <summary>
            PRC Envelope #8 120 x 309 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperPRCEnvelope8Rotated">
            <summary>
            PRC Envelope #8 Rotated 309 x 120 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperPRCEnvelope9">
            <summary>
            PRC Envelope #9 229 x 324 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperPRCEnvelope9Rotated">
            <summary>
            PRC Envelope #9 Rotated 324 x 229 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperPRCEnvelope10">
            <summary>
            PRC Envelope #10 324 x 458 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperPRCEnvelope10Rotated">
            <summary>
            PRC Envelope #10 Rotated 458 x 324 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperQuarto">
            <summary>
            Quarto 215 x 275 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperStatement">
            <summary>
            US Statement 5 1/2 x 8 1/2 in
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperSuperA">
            <summary>
            SuperA/SuperA/A4 227 x 356 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperSuperB">
            <summary>
            SuperB/SuperB/A3 305 x 487 mm
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperTabloid">
            <summary>
            US Tabloid 11 x 17 in
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperTabloidExtra">
            <summary>
            US Tabloid Extra 11.69 x 18 in
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PaperSize.PaperUser">
            <summary>
            User (custom) paper size. 
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Constants.EnhancedSheetProtection">
            <summary>
            Enhanced sheet protection option flags
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.EnhancedSheetProtection.Object">
            <summary>
            (1) Enable edit objects
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.EnhancedSheetProtection.Scenario">
            <summary>
            (2) Enable edit scenarios
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.EnhancedSheetProtection.FormatCells">
            <summary>
            (4) Enable change cell formatting
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.EnhancedSheetProtection.FormatColumns">
            <summary>
            (8) Enable change column formatting
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.EnhancedSheetProtection.FormatRows">
            <summary>
            (16) Enable change row formatting
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.EnhancedSheetProtection.InsertColumns">
            <summary>
            (32) Enable insert columns
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.EnhancedSheetProtection.InsertRows">
            <summary>
            (64) Enable insert rows
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.EnhancedSheetProtection.InsertHyperlinks">
            <summary>
            (128) Enable insert hyperlinks
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.EnhancedSheetProtection.DeleteColumns">
            <summary>
            (160) Enable delete columns
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.EnhancedSheetProtection.DeleteRows">
            <summary>
            (320) Enable delete rows
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.EnhancedSheetProtection.SelectLockedCells">
            <summary>
            (1024) (Enable select locked cells
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.EnhancedSheetProtection.Sort">
            <summary>
            (2048) Enable sort a cell range
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.EnhancedSheetProtection.AutoFilter">
            <summary>
            (1600) Enable use Autofilter
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.EnhancedSheetProtection.PivotTables">
            <summary>
            (3200) Enable use PivotTable reports
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.EnhancedSheetProtection.SelectUnlockedCells">
            <summary>
            (6400) Enable select unlocked cells
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Constants.DataType">
            <summary>
            Data type enumeration
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.DataType.BOOLEAN">
            <summary>
            (0) Boolean
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.DataType.EMPTY">
            <summary>
            (1) Empty
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.DataType.ERROR">
            <summary>
            (2) Error 
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.DataType.NUMERIC">
            <summary>
            (3) Numeric
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.DataType.STRING">
            <summary>
            (4) String
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Constants.AlignmentHorizontal">
            <summary>
            Horizontal alignment type enumeration
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.AlignmentHorizontal.General">
            <summary>
            (0) General alignment
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.AlignmentHorizontal.Left">
            <summary>
            (1) Left alignment
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.AlignmentHorizontal.Centered">
            <summary>
            (2) Centered alignment
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.AlignmentHorizontal.Right">
            <summary>
            (3) Right alignment
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.AlignmentHorizontal.Filled">
            <summary>
            (4) Filled alignment
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.AlignmentHorizontal.Justified">
            <summary>
            (5) Justified alignment
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.AlignmentHorizontal.CenteredSelect">
            <summary>
            (6) Centred selecti alignment
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.AlignmentHorizontal.Distributed">
            <summary>
            (7) Distributed alignment
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Constants.AlignmentVertical">
            <summary>
            Vertical alignment
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.AlignmentVertical.Top">
            <summary>
            (0) Top alignment
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.AlignmentVertical.Centered">
            <summary>
            (16) Centered alignment
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.AlignmentVertical.Bottom">
            <summary>
            (32) Bottom alignment
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.AlignmentVertical.Justified">
            <summary>
            (48) Justified alignment
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.AlignmentVertical.Distributed">
            <summary>
            (64) Distributed alignment
            Available in Excel 10.0 (Excel XP) and later only
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Constants.BIFF_VERSION">
            <summary>
            BIFF format version enumeration
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.BIFF_VERSION.BIFF7">
            <summary>
            (1280) BIFF 7
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.BIFF_VERSION.BIFF8">
            <summary>
            (1536) BIFF 8
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Constants.BuiltInNames">
            <summary>
            This built-in names that are reserved for specific functionality.
            
            Please take a look at:
                Excel Binary File Format (.xls) Structure Specification,
                    2.4.150 Lbl.
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Constants.CellType">
            <summary>
            Cell type 
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.CellType.BLANK">
            <summary>
            (513) Blank 
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.CellType.BOOLERR">
            <summary>
            (517)Boolean error
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.CellType.FORMULA">
            <summary>
            (6)Formula
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.CellType.NUMBER">
            <summary>
            (531)Number
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.CellType.LABEL">
            <summary>
            (516)Label
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.CellType.LABELSST">
            <summary>
            (253) Label st
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.CellType.RK">
            <summary>
            (638) RK Number type
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Constants.FontUnderlineStyle">
            <summary>
            Represents font underline type
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.FontUnderlineStyle.None">
            <summary>
            (0) None 
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.FontUnderlineStyle.Single">
            <summary>
            (1) Single underline
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.FontUnderlineStyle.Double">
            <summary>
            (2) Double underline
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.FontUnderlineStyle.SingleAccounting">
            <summary>
            (33) Single accounting underline
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.FontUnderlineStyle.DoubleAccounting">
            <summary>
            (34) Double accounting underline
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Constants.FontEscapementType">
            <summary>
            Represents font escapement type
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.FontEscapementType.None">
            <summary>
            (0) None
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.FontEscapementType.Superscript">
            <summary>
            (1) Superscript 
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.FontEscapementType.Subscript">
            <summary>
            (2) Subscript
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Constants.NumberFormatType">
            <summary>
            Type of the cell according to the analysis of NumberFormat formatting string for the value.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.NumberFormatType.General">
            <summary>
            (0) General formatting type
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.NumberFormatType.Decimal">
            <summary>
            (1) Decimal formatting
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.NumberFormatType.Currency">
            <summary>
            (2) Currency formatting type
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.NumberFormatType.Percent">
            <summary>
            (3) Percents formatting type
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.NumberFormatType.Scientific">
            <summary>
            (4) Scientific formatting type
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.NumberFormatType.Fraction">
            <summary>
            (5) Fraction formatting type
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.NumberFormatType.DateTime">
            <summary>
            (6) DateTime formatting type
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.NumberFormatType.Text">
            <summary>
            (7) Plain text formatting type
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.NumberFormatType.Unknown">
            <summary>
            (255) Unknown formatting, check NumberFormatString to check formatting string
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Constants.FORMULAERROR">
            <summary>
            Formula error type
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.FORMULAERROR.NULL">
            <summary>
             (0) #NULL! error type
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.FORMULAERROR.DIV0">
            <summary>
            (7) #DIV/0!
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.FORMULAERROR.VALUE">
            <summary>
            (15) #VALUE!
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.FORMULAERROR.REF">
            <summary>
            (23) #REF!
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.FORMULAERROR.NAME">
            <summary>
            (29) #NAME?
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.FORMULAERROR.NUM">
            <summary>
            (36) #NUM!
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.FORMULAERROR.NA">
            <summary>
            (42) #N/A
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Constants.LineStyle">
            <summary>
            Line style
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.LineStyle.None">
            <summary>
            (0) None
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.LineStyle.Thin">
            <summary>
            (1) Thin style
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.LineStyle.Medium">
            <summary>
            (2) Medium style
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.LineStyle.Dashed">
            <summary>
            (3) Dashed style
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.LineStyle.Dotted">
            <summary>
            (4) Dotted style
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.LineStyle.Thick">
            <summary>
            (5) Thick style
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.LineStyle.Double">
            <summary>
            (6) Double style
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.LineStyle.Hair">
            <summary>
            (7) Hair style
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.LineStyle.MediumDashed">
            <summary>
            (8) Medium dashed style (BIFF8 and higher only)
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.LineStyle.ThinDashDotted">
            <summary>
            (9) Thin dash dotted style (BIFF8 and higher only)
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.LineStyle.MediumDashDotted">
            <summary>
            (10) Medium dash dotted style (BIFF8 and higher only)
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.LineStyle.ThinDashDotDoted">
            <summary>
            (11) Thin dash dot doted style (BIFF8 and higher only)
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.LineStyle.MediumDashDotDotted">
            <summary>
            (12) Medium dash dot dotted style (BIFF8 and higher only)
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.LineStyle.SlantedMediumDashDotted">
            <summary>
            (13) Slanted medium dash dotted style (BIFF8 and higher only)
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Constants.PatternStyle">
            <summary>
            Pattern style enumeration
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PatternStyle.Checker">
            <summary>
            Checkerboard
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PatternStyle.CrissCross">
            <summary>
            Criss-cross lines
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PatternStyle.Down">
            <summary>
            Dark diagonal lines running from the upper left to the lower right
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PatternStyle.Gray16">
            <summary>
            16% gray
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PatternStyle.Gray25">
            <summary>
            25% gray
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PatternStyle.Gray50">
            <summary>
            50% gray
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PatternStyle.Gray75">
            <summary>
            75% gray
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PatternStyle.Gray8">
            <summary>
            8% gray
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PatternStyle.Grid">
            <summary>
            Grid
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PatternStyle.Horizontal">
            <summary>
            Dark horizontal lines
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PatternStyle.LightDown">
            <summary>
            Light diagonal lines running from the upper left to the lower right
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PatternStyle.LightHorizontal">
            <summary>
            Light horizontal lines
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PatternStyle.LightUp">
            <summary>
            Light diagonal lines running from the lower left to the upper right
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PatternStyle.LightVertical">
            <summary>
            Light vertical lines
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PatternStyle.None">
            <summary>
            No pattern
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PatternStyle.SemiGray75">
            <summary>
            75% dark moire
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PatternStyle.Solid">
            <summary>
            Solid color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PatternStyle.Up">
            <summary>
            Dark diagonal lines running from the lower left to the upper right
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.PatternStyle.Vertical">
            <summary>
            Dark vertical lines
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Constants.ReadingOrder">
            <summary>
            Reading order enumeration
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.ReadingOrder.Context">
            <summary>
            (0) Context dependent order
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.ReadingOrder.LeftToRight">
            <summary>
            (64) Left to right order
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.ReadingOrder.RightToLeft">
            <summary>
            (128) Right to left order
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Constants.SHEETVISIBILITY">
            <summary>
            The hidden state of the sheet
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.SHEETVISIBILITY.Visible">
            <summary>
            Visible
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.SHEETVISIBILITY.Hidden">
            <summary>
            Hidden
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.SHEETVISIBILITY.VeryHidden">
            <summary>
            Very Hidden. The sheet is hidden and cannot be displayed using the user interface
            Can only be set programmatically, e.g. with a Visual Basic macro.
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Constants.SpreadsheetFormatType">
            <summary>
            Spreadsheet type by file format 
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.SpreadsheetFormatType.XLS">
            <summary>
            (1) XLS spreadsheet format
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.SpreadsheetFormatType.CSV">
            <summary>
            (2) CSV spreadsheet format
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.SpreadsheetFormatType.XLSX">
            <summary>
            (3) XLSX spreadsheet format
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.SpreadsheetFormatType.ODS">
            <summary>
            (4) ODS spreadsheet format
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.SpreadsheetFormatType.XML">
            <summary>
            (5) XML spreadsheet format
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.SpreadsheetFormatType.TXT">
            <summary>
            (6) TXT spreadsheet format
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.SpreadsheetFormatType.HTML">
            <summary>
            (7) HTML spreadsheet format
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Constants.XLSPallette">
            <summary>
            Class representing default colour table
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.Black">
            <summary>
            Black color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.White">
            <summary>
            White color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.Red">
            <summary>
            Red color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.Lime">
            <summary>
            Lime color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.Blue">
            <summary>
            Blue color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.Yellow">
            <summary>
            Yellow color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.Magenta">
            <summary>
            Magenta color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.Aqua">
            <summary>
            Aqua color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.Maroon">
            <summary>
            Maroon color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.Green">
            <summary>
            Green color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.Navy">
            <summary>
            Navy color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.Olive">
            <summary>
            Olive color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.Purple">
            <summary>
            Purple color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.Teal">
            <summary>
            Teal color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.Silver">
            <summary>
            Silver color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.Gray">
            <summary>
            Gray color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.Fuchsia">
            <summary>
            Funchsia color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.BlueViolet">
            <summary>
            BlueViolet color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.Cherry2">
            <summary>
            Cherry2 color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.Coral">
            <summary>
            Coral color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.CornFlower">
            <summary>
            CornFlower color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.DarkViolet">
            <summary>
            DarkViolet color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.Ivory">
            <summary>
            Ivory color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.LightTurquois">
            <summary>
            LightTurquois color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.PastelSky">
            <summary>
            Pastel sky color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.Sky">
            <summary>
            Sky color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.PaleGreen">
            <summary>
            Pale green color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.LightYellow">
            <summary>
            Light yellow color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.PaleSky">
            <summary>
            Pale sky color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.Rose">
            <summary>
            Rose color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.Lilac">
            <summary>
            Lilac color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.LightBrown">
            <summary>
            Light brown color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.DarkSky">
            <summary>
            Dark sky color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.DarkTurquois">
            <summary>
            Dark Turquois
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.Grass">
            <summary>
            Grass color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.Gold">
            <summary>
            Gold color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.LightOrange">
            <summary>
            Light orange color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.Orange">
            <summary>
            Orange color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.DarkBlueGrey2">
            <summary>
            Dark blue grey color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.Grey40">
            <summary>
            Grey40 color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.DarkBlueGrey">
            <summary>
            Dark blue grey color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.Emerald">
            <summary>
            Emerald color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.DarkGreen">
            <summary>
            Dark green color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.Olive2">
            <summary>
            Olive2 color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.Brown">
            <summary>
            Brown color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.Cherry">
            <summary>
            Cherry color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.Indigo">
            <summary>
            Indigo color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Constants.XLSPallette.Grey80">
            <summary>
            Grey80 color
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.Constants.XLSPallette.Index(System.Drawing.Color)">
            <summary>
            Indexes the specified color.
            </summary>
            <param name="color">The color.</param>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Constants.XLSPallette.Index(System.Drawing.Color,System.Drawing.Color[])">
            <summary>
            Indexes the specified color.
            </summary>
            <param name="color">The color.</param>
            <param name="palette">The palette.</param>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Constants.XLSPallette.Colour(System.UInt16)">
            <summary>
            Return color for the specified index.
            </summary>
            <param name="Index">The index.</param>
            <returns></returns>
        </member>
        <member name="T:Bytescout.Spreadsheet.BaseClasses.CellAddress">
            <summary>
            Cell address 
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.BaseClasses.CellAddress.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.BaseClasses.CellAddress" /> class
            with Row = -1 and Column = -1.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.BaseClasses.CellAddress.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.BaseClasses.CellAddress" /> class.
            </summary>
            <param name="Row">The row.</param>
            <param name="Column">The column.</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.CellAddress.Row">
            <summary>
            Row index
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.CellAddress.Column">
            <summary>
            Column index
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.CellAddress.RowRelative">
            <summary>
            Specifies a relative or absolute row index
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.CellAddress.ColumnRelative">
            <summary>
            Specifies a relative or absolute column index
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.BaseClasses.CellAddress.GetCellAddress(System.String)">
            <summary>
            Gets the cell address.
            </summary>
            <param name="A1Ref">The a1 ref.</param>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.BaseClasses.CellAddress.IsEmpty">
            <summary>
            Indicates whether the specified CellAddress is empty.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.BaseClasses.CellAddress.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="T:Bytescout.Spreadsheet.BaseClasses.CellRangeAddress">
            <summary>
            Cell range address
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.BaseClasses.CellRangeAddress.FirstRow">
            <summary>
            First row index
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.BaseClasses.CellRangeAddress.LastRow">
            <summary>
            Last row index
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.BaseClasses.CellRangeAddress.FirstColumn">
            <summary>
            First column index
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.BaseClasses.CellRangeAddress.LastColumn">
            <summary>
            Last column index
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.BaseClasses.CellRangeAddress.FirstRowRelative">
            <summary>
            Specifies a relative or absolute first row index
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.BaseClasses.CellRangeAddress.LastRowRelative">
            <summary>
            Specifies a relative or absolute last row index
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.BaseClasses.CellRangeAddress.FirstColumnRelative">
            <summary>
            Specifies a relative or absolute first column index
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.BaseClasses.CellRangeAddress.LastColumnRelative">
            <summary>
            Specifies a relative or absolute last column index
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.BaseClasses.CellRangeAddress.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.BaseClasses.CellRangeAddress" /> struct.
            </summary>
            <param name="firstRow">The first row.</param>
            <param name="lastRow">The last row.</param>
            <param name="firstColumn">The first column.</param>
            <param name="lastColumn">The last column.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.BaseClasses.CellRangeAddress.GetCellRangeAddress(System.String)">
            <summary>
            Gets the cell range address.
            </summary>
            <param name="A1Ref">The a1 ref.</param>
            <returns></returns>
        </member>
        <member name="T:Bytescout.Spreadsheet.BaseClasses.PageSetup">
            <summary>
            Page setup settings for the worksheet.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.BaseClasses.PageSetup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.BaseClasses.PageSetup" /> class.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.PageSetup.PaperSize">
            <summary>
            Gets or sets the size of the paper.
            </summary>
            <value>The size of the paper.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.PageSetup.Zoom">
            <summary>
            Gets or sets the percentage (between 10 and 400 percent) by which Microsoft Excel will scale the worksheet for printing.
            </summary>
            <value>The scaling factor for printing as a percentage.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.PageSetup.FirstPageNumber">
            <summary>
            Gets or sets the first page number that will be used when this sheet is printed.
            </summary>
            <value>The Page number for first printed page.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.PageSetup.UseFirstPageNumber">
            <summary>
            Gets or sets a value indicating whether use FirstPageNumber value for first page number, and do not auto number the pages.
            </summary>
            <value>
                <c>true</c> if use FirstPageNumber value for first page number; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.PageSetup.FitToPagesWide">
            <summary>
            Gets or sets  the number of pages wide the worksheet will be scaled to when it's printed.
            </summary>
            <value>Number of horizontal pages to fit on.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.PageSetup.FitToPagesTall">
            <summary>
            Gets or sets the number of pages tall the worksheet will be scaled to when it's printed.
            </summary>
            <value>Number of vertical pages to fit on.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.PageSetup.Order">
            <summary>
            Gets or sets  the order that Microsoft Excel uses to number pages when printing a large worksheet.
            </summary>
            <value>Order of printed pages.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.PageSetup.Orientation">
            <summary>
            Gets or sets the page orientation.
            </summary>
            <value>The page orientation.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.PageSetup.BlackAndWhite">
            <summary>
            Gets or sets a value indicating whether the document is printed in black and white.
            </summary>
            <value>
                <c>true</c> if the document is printed in black and white; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.PageSetup.Draft">
            <summary>
            Gets or sets a value indicating whether the sheet will be printed without graphics.
            </summary>
            <value>
                <c>true</c> if print without graphics; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.PageSetup.PrintComments">
            <summary>
            Gets or sets the way comments are printed with the sheet.
            </summary>
            <value>The print comments.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.PageSetup.PrintNotes">
            <summary>
            Gets or sets a value indicating whether cell notes are printed as end notes with the sheet.
            </summary>
            <value>
                <c>true</c> if cell notes are printed as end notes with the sheet; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.PageSetup.PrintErrors">
            <summary>
            Gets or sets an <see cref="P:Bytescout.Spreadsheet.BaseClasses.PageSetup.PrintErrors" /> contstant specifying the type of print error displayed.
            </summary>
            <value>The type of print error displayed.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.PageSetup.PrintQualityHorizontal">
            <summary>
            Gets or sets the horizontal print resolution of the device in dots per inch (DPI).
            </summary>
            <value>The horizontal print resolution.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.PageSetup.PrintQualityVertical">
            <summary>
            Gets or sets the vertical print resolution of the device in dots per inch (DPI).
            </summary>
            <value>The vertical print resolution.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.PageSetup.HeaderMargin">
            <summary>
            Gets or sets the distance from the top of the page to the header, in points.
            </summary>
            <value>The header margin.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.PageSetup.FooterMargin">
            <summary>
            Gets or sets the distance from the bottom of the page to the footer, in points.
            </summary>
            <value>The footer margin.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.PageSetup.Copies">
            <summary>
            Gets or sets the number of copies to print.
            </summary>
            <value>The number of copies to print.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.PageSetup.BottomMargin">
            <summary>
            Gets or sets the size of the bottom margin, in points.
            </summary>
            <value>The bottom margin.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.PageSetup.LeftMargin">
            <summary>
            Gets or sets the size of the left margin, in points.
            </summary>
            <value>The left margin.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.PageSetup.RightMargin">
            <summary>
            Gets or sets the size of the right margin, in points.
            </summary>
            <value>The right margin.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.PageSetup.TopMargin">
            <summary>
            Gets or sets the size of the top margin, in points.
            </summary>
            <value>The top margin.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.PageSetup.CenterHorizontally">
            <summary>
            Gets or sets a value indicating whether the sheet is centered horizontally on the page when it's printed.
            </summary>
            <value>
                <c>true</c> if the sheet is centered horizontally on the page when it's printed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.PageSetup.CenterVertically">
            <summary>
            Gets or sets a value indicating whether sheet is centered vertically on the page when it's printed.
            </summary>
            <value>
                <c>true</c> if sheet is centered vertically on the page when it's printed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.PageSetup.LeftHeader">
            <summary>
            Gets or sets the left part of the header.
            </summary>
            <value>
            The left part of the header.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.PageSetup.CenterHeader">
            <summary>
            Gets or sets the center part of the header.
            </summary>
            <value>
            The left center of the header.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.PageSetup.RightHeader">
            <summary>
            Gets or sets the right part of the header.
            </summary>
            <value>
            The right part of the header.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.PageSetup.LeftFooter">
            <summary>
            Gets or sets the left part of the footer.
            </summary>
            <value>
            The left part of the footer.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.PageSetup.CenterFooter">
            <summary>
            Gets or sets the center part of the footer.
            </summary>
            <value>
            The center part of the footer.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.PageSetup.RightFooter">
            <summary>
            Gets or sets the right part of the footer.
            </summary>
            <value>
            The right part of the footer.
            </value>
        </member>
        <member name="T:Bytescout.Spreadsheet.BaseClasses.MD4">
            <summary>
            Implements the MD4 message digest algorithm in C#
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.BaseClasses.MD4.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.BaseClasses.MD4" /> class.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.BaseClasses.MD4.#ctor(Bytescout.Spreadsheet.BaseClasses.MD4)">
            <summary>
            This constructor is here to implement the clonability of this class
            </summary>
            <param name="md"></param>
        </member>
        <member name="M:Bytescout.Spreadsheet.BaseClasses.MD4.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.BaseClasses.MD4.GetByteHashFromString(System.String)">
            <summary>
            Returns a byte hash from a string
            </summary>
            <param name="s">string to hash</param>
            <returns>byte-array that contains the hash</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.BaseClasses.MD4.GetByteHashFromBytes(System.Byte[])">
            <summary>
            Returns a binary hash from an input byte array
            </summary>
            <param name="b">byte-array to hash</param>
            <returns>binary hash of input</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.BaseClasses.MD4.GetHexHashFromBytes(System.Byte[])">
            <summary>
            Returns a string that contains the hexadecimal hash
            </summary>
            <param name="b">byte-array to input</param>
            <returns>String that contains the hex of the hash</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.BaseClasses.MD4.GetByteHashFromByte(System.Byte)">
            <summary>
            Returns a byte hash from the input byte
            </summary>
            <param name="b">byte to hash</param>
            <returns>binary hash of the input byte</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.BaseClasses.MD4.GetHexHashFromByte(System.Byte)">
            <summary>
            Returns a string that contains the hexadecimal hash
            </summary>
            <param name="b">byte to hash</param>
            <returns>String that contains the hex of the hash</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.BaseClasses.MD4.GetHexHashFromString(System.String)">
            <summary>
            Returns a string that contains the hexadecimal hash
            </summary>
            <param name="s">string to hash</param>
            <returns>String that contains the hex of the hash</returns>
        </member>
        <member name="T:Bytescout.Spreadsheet.BaseClasses.ViewOptions">
            <summary>
            View options
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.ViewOptions.GridLineColor">
            <summary>
            Gets or sets the color of the gridlines
            </summary>
            <value>The color of the gridline.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.ViewOptions.ShowFormulas">
            <summary>
            Gets or sets a value indicating whether formulas or values only are displayed in the <see cref="T:Bytescout.Spreadsheet.Worksheet" /></summary>
            <value>
                <c>true</c> if display formulas; <c>false</c> if display values.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.ViewOptions.ShowGridLines">
            <summary>
            Gets or sets a value indicating whether gridlines are shown in the <see cref="T:Bytescout.Spreadsheet.Worksheet" /></summary>
            <value>
                <c>true</c> if show gridlines; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.ViewOptions.ShowSheetHeaders">
            <summary>
            Gets or sets a value indicating whether column headings are visible or not in the <see cref="T:Bytescout.Spreadsheet.Worksheet" /></summary>
            <value>
                <c>true</c> if show row and column headings; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.ViewOptions.PanesFrozen">
            <summary>
            Gets or sets a value indicating whether the panes in the window are frozen (locked) or not
            </summary>
            <value>
                <c>true</c> if panes are frozen (locked); otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.ViewOptions.ShowZeroValues">
            <summary>
            Gets or sets a value indicating whether  the <see cref="T:Bytescout.Spreadsheet.Worksheet" /> displays zero values or not
            </summary>
            <value>
                <c>true</c> if show values of zero as a zero symbol; <c>false</c> if zero values should be displayed as blank.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.ViewOptions.GridLinesColorEnabled">
            <summary>
            Gets or sets a value indicating whether the gridlines of the window are drawn with the window default foreground color or with the color specified by the value of <see cref="P:Bytescout.Spreadsheet.BaseClasses.ViewOptions.GridLineColor" /> option.
            </summary>
            <value>
                <c>true</c> to use window default foreground color; otherwise, <c>false</c> to use <see cref="P:Bytescout.Spreadsheet.BaseClasses.ViewOptions.GridLineColor" /> for this purpose instead.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.ViewOptions.RightToLeft">
            <summary>
            Gets or sets a value indicating whether columns are displayed in right-to-left mode or not.
            </summary>
            <value>
                <c>true</c> if columns are displayed from right to left; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.ViewOptions.ShowGuts">
            <summary>
            Gets or sets a value indicating whether the window displays the outline symbols or not.
            </summary>
            <value>
                <c>true</c> to show outline symbols; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.ViewOptions.FrozenNoSplit">
            <summary>
            Gets or sets a value indicating whether the panes in the window are frozen with pane splits or without
            </summary>
            <value>
                <c>true</c> if frozen without pane splits; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.ViewOptions.Selected">
            <summary>
            Gets or sets a value indicating whether the sheet tab is selected
            </summary>
            <value>
                <c>true</c> if the sheet tab is selected; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.ViewOptions.Paged">
            <summary>
            Gets or sets a value indicating whether the sheet is currently being displayed in the window.
            </summary>
            <value>
                <c>true</c> if the sheet is currently being displayed in the window; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.ViewOptions.PageBreakPreview">
            <summary>
            Gets or sets a value indicating whether the sheet is in a Page Break Preview view
            </summary>
            <value>
                <c>true</c> if show in a page break preview; <c>false</c> if show in a normal view.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.ViewOptions.ActivePane">
            <summary>
            Gets or sets the active pane.
            </summary>
            <value>The active pane.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.ViewOptions.SplitColumn">
            <summary>
            Gets or sets the column number where the window is split into panes (the number of columns to the left of the split line).
            </summary>
            <value>The split column.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.ViewOptions.SplitRow">
            <summary>
            Gets or sets the row number where the window is split into panes (the number of rows above the split).
            </summary>
            <value>The split row.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.ViewOptions.SplitHorizontal">
            <summary>
            Gets or sets the location of the horizontal window split, in points.
            </summary>
            <value>The split horizontal.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.ViewOptions.SplitVertical">
            <summary>
            Gets or sets the location of the vertical window split, in points.
            </summary>
            <value>The split vertical.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.BaseClasses.ViewOptions.Zoom">
            <summary>
            Gets or sets the display size of the window, as a percentage.
            </summary>
            <value>The zoom.</value>
        </member>
        <member name="T:Bytescout.Spreadsheet.BaseClasses.XLSCompoundFile">
            <summary>
            Class for operation with xls files
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.BaseClasses.XLSCompoundFile.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.BaseClasses.XLSCompoundFile" /> class.
            </summary>
            <param name="file">The xls file.</param>
            <param name="New">if set to <c>true</c> [new].</param>
        </member>
        <member name="T:Bytescout.Spreadsheet.Charts.ChartArea">
            <summary>
            Represents the chart area of a chart.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ChartArea.Left">
            <summary>
            Gets or sets the leftmost coordinate of the chart in points.
            </summary>
            <value>The leftmost coordinate of the chart in points.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ChartArea.Top">
            <summary>
            Gets or sets the topmost coordinate of the chart in points.
            </summary>
            <value>The topmost coordinate of the chart in points.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ChartArea.Width">
            <summary>
            Gets the width of the chart in points.
            </summary>
            <value>The width of the chart in points.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ChartArea.Height">
            <summary>
            Gets or sets the height of the chart in points.
            </summary>
            <value>The height of the chart in points.</value>
        </member>
        <member name="T:Bytescout.Spreadsheet.Charts.ChartTitle">
            <summary>
            Represents the chart title.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ChartTitle.Border">
            <summary>
            Gets a <see cref="P:Bytescout.Spreadsheet.Charts.ChartTitle.Border" /> object that represents the border of the object.
            </summary>
            <value>The border.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ChartTitle.Fill">
            <summary>
            Gets a <see cref="T:Bytescout.Spreadsheet.Charts.FillFormat" /> object that contains fill formatting properties for the specified chart or shape.
            </summary>
            <value>The fill.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ChartTitle.Font">
            <summary>
            Gets a <see cref="T:Bytescout.Spreadsheet.SpreadsheetFont" /> object that represents the font of the specified object.
            </summary>
            <value>The font.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ChartTitle.Left">
            <summary>
            Gets or sets the position, in points, of the left edge of the chart title.
            </summary>
            <value>The position of the left edge of the chart title in points.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ChartTitle.Orientation">
            <summary>
            Gets or sets the text orientation. Can be an integer value from –90 to 90 degrees.
            </summary>
            <value>The text orientation.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ChartTitle.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ChartTitle.Top">
            <summary>
            Gets or sets the position, in points, of the top edge of the chart title.
            </summary>
            <value>The position of the top edge of the chart title in points.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ChartTitle.Shadow">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Bytescout.Spreadsheet.Charts.ChartTitle" /> has a shadow.
            </summary>
            <value>
                <c>true</c> if shadow; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Bytescout.Spreadsheet.Charts.ColorFormat">
            <summary>
            Represents color information.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ColorFormat.Color">
            <summary>
            Gets or sets the color.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ColorFormat.RGB">
            <summary>
            Gets or sets the red-green-blue value of the specified color.
            </summary>
            <value>The red-green-blue value of the specified color.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ColorFormat.SchemeColor">
            <summary>
            Gets or sets the color as an index in the current color scheme.
            </summary>
            <value>The index in the current color scheme.</value>
        </member>
        <member name="T:Bytescout.Spreadsheet.Charts.FillFormat">
            <summary>
            Represents fill formatting for a shape.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.FillFormat.BackColor">
            <summary>
            Gets or sets a <see cref="T:Bytescout.Spreadsheet.Charts.ColorFormat" /> object that represents the specified fill background color.
            </summary>
            <value>The color of the back.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.FillFormat.ForeColor">
            <summary>
            Gets or sets a <see cref="T:Bytescout.Spreadsheet.Charts.ColorFormat" /> object that represents the specified foreground fill or solid color.
            </summary>
            <value>The color of the back.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.FillFormat.Pattern">
            <summary>
            Gets or sets the fill pattern.
            </summary>
            <value>The fill pattern.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.Charts.FillFormat.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            <see cref="M:System.Object.GetHashCode"></see> is suitable for
            use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Charts.FillFormat.op_Equality(Bytescout.Spreadsheet.Charts.FillFormat,Bytescout.Spreadsheet.Charts.FillFormat)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Charts.FillFormat.op_Inequality(Bytescout.Spreadsheet.Charts.FillFormat,Bytescout.Spreadsheet.Charts.FillFormat)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Charts.FillFormat.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"></see>
            is equal to the current <see cref="T:System.Object"></see>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"></see>
            to compare with the current <see cref="T:System.Object"></see>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"></see>
            is equal to the current <see cref="T:System.Object"></see>; otherwise, false.
            </returns>
        </member>
        <member name="T:Bytescout.Spreadsheet.Charts.HiLoLines">
            <summary>
            Represents the high-low lines in a chart group.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.HiLoLines.Border">
            <summary>
            Gets the border.
            </summary>
            <value>The border.</value>
        </member>
        <member name="T:Bytescout.Spreadsheet.Charts.AxisCrossingPoint">
            <summary>
            Specifies the possible crossing points for an axis.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.AxisCrossingPoint.ExactValue">
            <summary>
            (Axis Crosses at Exact Value) The category axis crosses at value
            spceified by <see cref="P:Bytescout.Spreadsheet.Charts.ChartAxis.CrossingValue" />. 
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.AxisCrossingPoint.AutoZero">
            <summary>
            (Axis Crosses at Zero) The category axis crosses at the zero
            point of the value axis (if possible), or the minimum value (if the
            minimum is greater than zero) or the maximum (if the maximum
            is less than zero).
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.AxisCrossingPoint.Max">
            <summary>
            (Maximum) The axis crosses at the maximum value.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.AxisCrossingPoint.Min">
            <summary>
            (Minimum) Axis crosses at the minimum value of the chart.
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Charts.AxisOrientation">
            <summary>
            Specifies the orientation of the axis.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.AxisOrientation.MaxMin">
            <summary>
            (Maximum to Minimum) Specifies that the values on the axis shall
            be reversed so they go from maximum to minimum.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.AxisOrientation.MinMax">
            <summary>
            (Minimum to Maximum) Specifies that the axis values shall be in
            the usual order, minimum to maximum.
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Charts.AxisPosition">
            <summary>
            Specifies the position of the axis on the chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.AxisPosition.Bottom">
            <summary>
            Specifies that the axis shall be displayed at the bottom of the plot area.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.AxisPosition.Left">
            <summary>
            Specifies that the axis shall be displayed at the left of the plot area.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.AxisPosition.Right">
            <summary>
            Specifies that the axis shall be displayed at the right of the plot area.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.AxisPosition.Top">
            <summary>
            Specifies that the axis shall be displayed at the top of the plot area.
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Charts.Chart">
            <summary>
            Class for common chart properties and methods.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.Charts.Chart.#ctor(Bytescout.Spreadsheet.Spreadsheet,Bytescout.Spreadsheet.Charts.ChartAxis[])">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.Charts.Chart" /> class.
            </summary>
            <param name="document">The document this chart will belong to.</param>
            <param name="axes">The axes.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Charts.Chart.#ctor(Bytescout.Spreadsheet.Spreadsheet,Bytescout.Spreadsheet.Charts.ChartType)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.Charts.Chart" /> class.
            </summary>
            <param name="document">The document.</param>
            <param name="chartType">Type of the chart.</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Chart.ChartGroups">
            <summary>
            Gets the chart groups.
            </summary>
            <value>The chart groups.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Chart.PlacementType">
            <summary>
            Gets or sets the Placement setting of this chart, which specifies
            how changes to the sheet will affect the placement of the chart.
            </summary>
            <value>The placement.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Chart.Name">
            <summary>
            Gets or sets the name of this chart used for
            identification purposes only.
            </summary>
            <value>The name of this chart used for identification
            purposes only.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Chart.RoundedCorners">
            <summary>
            Gets or sets a value indicating whether chart area has rounded corners.
            </summary>
            <value>
                <c>true</c> if chart area has rounded corners; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Chart.ShowAutoTitle">
            <summary>
            Gets or sets a value indicating whether the auto-generated title shall
            be shown for this chart.
            </summary>
            <value>
                <c>true</c> if the auto-generated title shall be shown for this
            chart; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Chart.DisplayBlanksAs">
            <summary>
            Gets or sets a value indicating how blank cells shall be plotted on a chart.
            </summary>
            <value>The value indicating how blank cells shall be plotted on a chart.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Chart.PlotArea">
            <summary>
            Gets the plot area properties of the chart.
            </summary>
            <value>The plot area properties of the chart.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Chart.Legend">
            <summary>
            Gets the legend of the chart.
            </summary>
            <value>The legend of the chart.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Chart.PlotVisibleOnly">
            <summary>
            Gets or sets a value indicating whether only visible cells should
            be plotted on the chart.
            </summary>
            <value>
                <c>true</c> if only visible cells should be plotted on the
            chart; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Chart.ShowDataLabelsOverMax">
            <summary>
            Gets or sets a value indicating whether data labels over the maximum
            of the chart shall be shown.
            </summary>
            <value>
                <c>true</c> if data labels over the maximum of the chart shall
            be shown; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Chart.Elevation">
            <summary>
            Gets or sets the elevation of the 3-D chart view, in degrees.
            </summary>
            <value>The elevation of the 3-D chart view, in degrees.</value>
            <remarks>The value of this property must be between -90 and 90,
            except for 3-D bar charts, where it must be between 0 and 44.</remarks>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Chart.Perspective">
            <summary>
            Gets or sets the perspective for the 3-D chart view. Must be between 0 and 100.
            </summary>
            <value>The perspective for the 3-D chart view.</value>
            <remarks>This element is ignored if <see cref="P:Bytescout.Spreadsheet.Charts.Chart.RightAngleAxes" /> property  is true.</remarks>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Chart.Rotation">
            <summary>
            Gets or sets the rotation of the 3-D chart view (the rotation of the plot area around the z-axis, in degrees).
            </summary>
            <value>The rotation of the 3-D chart view (the rotation of the plot area around the z-axis, in degrees).</value>
            <remarks>The value of this property must be from 0 to 360, except for 3-D bar charts, where the value must be from 0 to 44.</remarks>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Chart.HeightPercent">
            <summary>
            Gets or sets the height of a 3-D chart as a percentage of the chart width.
            </summary>
            <value>The height of a 3-D chart as a percentage of the chart width.</value>
            <remarks>The height should be between 5 and 500 percent.</remarks>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Chart.DepthPercent">
            <summary>
            Gets or sets the depth of a 3-D chart as a percentage of the chart width.
            </summary>
            <value>The depth of a 3-D chart as a percentage of the chart width.</value>
            <remarks>The depth should be between 20 and 2000 percent.</remarks>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Chart.RightAngleAxes">
            <summary>
            Gets or sets a value indicating whether the chart axes are at right
            angles, rather than drawn in perspective
            </summary>
            <value>
                <c>true</c> if the chart axes are at right angles, and not
            drawn in perspective; otherwise, <c>false</c>.</value>
            <remarks>If this property is True, the <see cref="P:Bytescout.Spreadsheet.Charts.Chart.Perspective" /> property is ignored.</remarks>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Chart.BackWall">
            <summary>
            Gets the back wall properties of the chart.
            </summary>
            <value>The back wall properties of the chart.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Chart.Floor">
            <summary>
            Gets the floor properties of the chart.
            </summary>
            <value>The floor properties of the chart.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Chart.SideWall">
            <summary>
            Gets the side wall properties of the chart.
            </summary>
            <value>The side wall properties of the chart.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Chart.ChartType">
            <summary>
            Gets or sets the type of the chart.
            </summary>
            <value>The type of the chart.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Chart.SeriesCollection">
            <summary>
            Gets the series collection.
            </summary>
            <value>The series collection.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Chart.XAxis">
            <summary>
            Gets the x axis.
            </summary>
            <value>The x axis.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Chart.YAxis">
            <summary>
            Gets the y axis.
            </summary>
            <value>The y axis.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Chart.ZAxis">
            <summary>
            Gets the z axis.
            </summary>
            <value>The z axis.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Chart.ChartTitle">
            <summary>
            Gets a <see cref="P:Bytescout.Spreadsheet.Charts.Chart.ChartTitle" /> object that represents the title of the specified chart.
            </summary>
            <value>The chart title.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Chart.ChartArea">
            <summary>
            Gets a <see cref="P:Bytescout.Spreadsheet.Charts.Chart.ChartArea" /> object that represents the complete chart area for the chart.
            </summary>
            <value>The chart area.</value>
        </member>
        <member name="T:Bytescout.Spreadsheet.Charts.ChartGroup">
            <summary>
            Represents one or more series plotted in a chart with the same format.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ChartGroup.DoughnutHoleSize">
            <summary>
            Gets or sets the size of the hole in a doughnut chart group.
            The hole size is expressed as a percentage of the chart size, between 10 and 90 percent.
            </summary>
            <value>The size of the doughnut hole.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ChartGroup.FirstSliceAngle">
            <summary>
            Gets or sets the angle of the first pie-chart or doughnut-chart slice, in degrees (clockwise from vertical).
            Applies only to pie, 3-D pie, and doughnut charts.
            </summary>
            <value>The first slice angle.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ChartGroup.GapWidth">
            <summary>
            Gets or sets the width of the gap between bar or column clusters,
            as a percentage of the bar or column width or the space between
            the primary and secondary sections in a pie of pie and Bar of Pie chart.
            </summary>
            <value>The width of the gap between bar or column clusters, as a
            percentage of the bar or column width.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ChartGroup.HasHiLoLines">
            <summary>
            Gets or sets a value indicating whether line chart has high-low lines.
            </summary>
            <value>
                <c>true</c> if the line chart has high-low lines; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ChartGroup.HiLoLines">
            <summary>
            Gets a HiLoLines object that represents the high-low lines for a series on a line chart.
            </summary>
            <value>The HiLoLines object.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ChartGroup.VaryByCategories">
            <summary>
            Gets or sets a value indicating whether colors are varied for each data point
            of the first series in a chart containing only one series.
            </summary>
            <value>
                <c>true</c> if a different color or pattern to each data marker; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ChartGroup.BubbleScale">
            <summary>
            Gets or sets the scale factor for the bubble chart in percent
            of the default size.
            </summary>
            <value>The scale factor for the bubble chart in percent
            of the default size.</value>
            <remarks>The value be an integer from 0 to 300, corresponding to
            a percentage of the default size.</remarks>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ChartGroup.ShowNegativeBubbles">
            <summary>
            Gets or sets a value indicating whether negative sized bubbles shall
            be shown on the chart.
            </summary>
            <value>
                <c>true</c> if negative sized bubbles shall
            be shown on the chart; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ChartGroup.SizeRepresents">
            <summary>
            Gets or sets the value indicating how the bubble size values
            are represented on the chart.
            </summary>
            <value>The value indicating how the bubble size values
            are represented on the chart.</value>
        </member>
        <member name="T:Bytescout.Spreadsheet.Charts.ChartGroupCollection">
            <summary>
            A collection of all the ChartGroup objects in the specified chart.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ChartGroupCollection.Count">
            <summary>
            Gets the number of ChartGroup contained in the collection.
            </summary>
            <value>The number of ChartGroup contained in the collection.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ChartGroupCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Bytescout.Spreadsheet.Charts.ChartGroup" /> at the specified index.
            </summary>
            <value>The <see cref="T:Bytescout.Spreadsheet.Charts.ChartGroup" /> at the specified index.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.Charts.ChartGroupCollection.Add(Bytescout.Spreadsheet.Charts.ChartGroup)">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Charts.ChartGroupCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used
            to iterate through the collection.
            </returns>
        </member>
        <member name="T:Bytescout.Spreadsheet.Charts.ChartType">
            <summary>
            The chart type
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.Area">
            <summary>
            Area chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.Area3D">
            <summary>
            3D area chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.AreaStacked">
            <summary>
            Stacked area chart
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.AreaStacked100">
            <summary>
            100% stacked area chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.AreaStacked1003D">
            <summary>
            3D 100% stacked area chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.AreaStacked3D">
            <summary>
            3D stacked area chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.BarClustered">
            <summary>
            Clustered bar chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.BarClustered3D">
            <summary>
            3D clustered bar chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.BarOfPie">
            <summary>
            Bar of pie chart. 
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.BarStacked">
            <summary>
            Stacked bar chart. 
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.BarStacked100">
            <summary>
            100% stacked bar chart. 
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.BarStacked1003D">
            <summary>
            3D 100% stacked bar chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.BarStacked3D">
            <summary>
            3D stacked bar chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.Bubble">
            <summary>
            Bubble chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.Bubble3DEffect">
            <summary>
            3D bubble chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.Column3D">
            <summary>
            3D column chart .
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.ColumnClustered">
            <summary>
            Clustered column chart. 
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.ColumnClustered3D">
            <summary>
            3D clustered column chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.ColumnStacked">
            <summary>
            Stacked column chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.ColumnStacked100">
            <summary>
            100% stacked column chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.ColumnStacked1003D">
            <summary>
            3D 100% stacked column chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.ColumnStacked3D">
            <summary>
            3D stacked column chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.ConeBarClustered">
            <summary>
            Clustered cone bar chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.ConeBarStacked">
            <summary>
            Stacked cone bar chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.ConeBarStacked100">
            <summary>
            100% stacked cone bar chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.ConeCol">
            <summary>
            3D cone column chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.ConeColClustered">
            <summary>
            Clustered cone column chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.ConeColStacked">
            <summary>
            Stacked cone column chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.ConeColStacked100">
            <summary>
            100% stacked cone column chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.CylinderBarClustered">
            <summary>
            Clustered cylinder bar chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.CylinderBarStacked">
            <summary>
            Stacked cylinder bar chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.CylinderBarStacked100">
            <summary>
            100% stacked cylinder bar chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.CylinderCol">
            <summary>
            3D cylinder column chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.CylinderColClustered">
            <summary>
            Clustered cylinder column chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.CylinderColStacked">
            <summary>
            Stacked cylinder column chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.CylinderColStacked100">
            <summary>
            100% stacked cylinder column chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.Doughnut">
            <summary>
            Doughnut chart. 
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.DoughnutExploded">
            <summary>
            Exploded doughnut  chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.Line">
            <summary>
            Line chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.Line3D">
            <summary>
            3D Line chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.LineMarkers">
            <summary>
            Line chart with markers.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.LineMarkersStacked">
            <summary>
            Stacked line chart with markers. 
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.LineMarkersStacked100">
            <summary>
            100% stacked line chart with markers. 
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.LineStacked">
            <summary>
            Stacked line chart. 
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.LineStacked100">
            <summary>
            100% stacked line chart. 
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.Pie">
            <summary>
            Pie chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.Pie3D">
            <summary>
            3D pie chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.PieExploded">
            <summary>
            Exploded Pie chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.PieExploded3D">
            <summary>
            Exploded 3D Pie chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.PieOfPie">
            <summary>
            Pie of pie chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.PyramidBarClustered">
            <summary>
            Clustered pyramid bar chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.PyramidBarStacked">
            <summary>
            Stacked pyramid bar chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.PyramidBarStacked100">
            <summary>
            100% stacked pyramid bar chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.PyramidCol">
            <summary>
            3D pyramid column chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.PyramidColClustered">
            <summary>
            Clustered pyramid column chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.PyramidColStacked">
            <summary>
            Stacked pyramid column chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.PyramidColStacked100">
            <summary>
            100% stacked pyramid column chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.Radar">
            <summary>
            Radar chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.RadarFilled">
            <summary>
            Filled radar chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.RadarMarkers">
            <summary>
            Radar  chart with data narkers.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.StockHLC">
            <summary>
            High-Low-Close stock chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.StockOHLC">
            <summary>
            Open-High-Low-Close stock chart
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.StockVHLC">
            <summary>
            Volume-High-Low-Close stock chart
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.StockVOHLC">
            <summary>
            Volume-Open-High-Low-Close stock chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.Surface">
            <summary>
            3D surface chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.SurfaceTopView">
            <summary>
            Surface chart (Top view).
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.SurfaceTopViewWireframe">
            <summary>
            Surface chart (Top view wireframe).
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.SurfaceWireframe">
            <summary>
            Surface chart (wireframe).
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.XYScatter">
            <summary>
            Scatter chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.XYScatterLines">
            <summary>
            Scatter chart with lines.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.XYScatterLinesNoMarkers">
            <summary>
             Scatter chart with lines and no data markers.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.XYScatterSmooth">
            <summary>
            Scatter chart with smoothed lines.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartType.XYScatterSmoothNoMarkers">
            <summary>
            Scatter chart with smoothed lines and no data markers.
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Charts.ChartLineStyle">
            <summary>
            This type represents preset line dash values.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartLineStyle.Dash">
            <summary>
            Dash
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartLineStyle.DashDot">
            <summary>
            Dash Dot
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartLineStyle.Dot">
            <summary>
            Dot
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartLineStyle.LgDash">
            <summary>
            Large Dash
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartLineStyle.LgDashDot">
            <summary>
            Large Dash Dot
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartLineStyle.LgDashDotDot">
            <summary>
            Large Dash Dot Dot
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartLineStyle.Solid">
            <summary>
            Solid
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartLineStyle.SysDash">
            <summary>
            System Dash
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartLineStyle.SysDashDot">
            <summary>
            System Dash Dot
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartLineStyle.SysDashDotDot">
            <summary>
            System Dash Dot Dot
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.ChartLineStyle.SysDot">
            <summary>
            System Dot
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Charts.Outline">
            <summary>
            Specifies the outline style.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Outline.Width">
            <summary>
            Gets or sets the width of a line in points.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Outline.Color">
            <summary>
            Gets or sets the color.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Outline.LineStyle">
            <summary>
            Gets or sets the line style.
            </summary>
            <value>The line style.</value>
        </member>
        <member name="T:Bytescout.Spreadsheet.Charts.ShapeProperties">
            <summary>
            Specifies the formatting of series.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ShapeProperties.FillColor">
            <summary>
            Gets or sets the color of the fill.
            </summary>
            <value>The color of the fill.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ShapeProperties.Outline">
            <summary>
            Gets or sets the outline.
            </summary>
            <value>The outline.</value>
        </member>
        <member name="T:Bytescout.Spreadsheet.Charts.ValuesSeries">
            <summary>
            Specifies base properties for a chart series.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.Charts.ValuesSeries.#ctor(Bytescout.Spreadsheet.Range)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.Charts.ValuesSeries" /> class.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="T:Bytescout.Spreadsheet.Charts.BarGrouping">
            <summary>
            Specifies the kind of grouping for a column or bar chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.BarGrouping.Clustered">
            <summary>
            (Clustered) Specifies that the chart series are drawn next to
            each other along the category axis.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.BarGrouping.PercentStacked">
            <summary>
            (100% Stacked) Specifies that the chart series are drawn next
            to each other along the value axis and scaled to total 100%.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.BarGrouping.Stacked">
            <summary>
            (Stacked) Specifies that the chart series are drawn next to each
            other on the value axis.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.BarGrouping.Standard">
            <summary>
            (Standard) Specifies that the chart series are drawn next to each
            other on the depth axis.
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Charts.CategoryAxis">
            <summary>
            Specifies the category axis of the chart.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.Charts.CategoryAxis.#ctor(Bytescout.Spreadsheet.Spreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.Charts.CategoryAxis" /> class.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.CategoryAxis.AutomaticCategory">
            <summary>
            Gets or sets a value indicating whether this axis is a text axis
            based on the data that is used for the axis labels, not a
            specific choice.
            </summary>
            <value>
                <c>true</c> if this axis is a text axis
            based on the data that is used for the axis labels, not a
            specific choice; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.CategoryAxis.LabelAlignment">
            <summary>
            Gets or sets the tick label alignment.
            </summary>
            <value>The tick label alignment.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.CategoryAxis.LabelOffset">
            <summary>
            Gets or sets the label offset (the distance of labels from the axis).
            </summary>
            <value>The label offset.</value>
            <remarks>The label offset is an integer between 0 and 1000 and is percentage
            of the default offset value.</remarks>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.CategoryAxis.ShowLabelAsFlatText">
            <summary>
            Gets or sets a value indicating whether to show label as flat text.
            </summary>
            <value>
                <c>true</c> if to show label as flat text; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Bytescout.Spreadsheet.Charts.ChartAxis">
            <summary>
            Specifies base properties for a chart axis.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ChartAxis.Orientation">
            <summary>
            Gets or sets the orientation of the axis.
            </summary>
            <value>The orientation of the axis.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ChartAxis.DoNotDraw">
            <summary>
            Gets or sets a value indicating whether this axis should not be drawn.
            </summary>
            <value>
                <c>true</c> if this axis should not be drawn;
            otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ChartAxis.Position">
            <summary>
            Gets or sets the position of the axis within plot area.
            </summary>
            <value>The position of the axis within plot area.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ChartAxis.MajorTickMark">
            <summary>
            Gets or sets the major tick mark.
            </summary>
            <value>The major tick mark.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ChartAxis.MinorTickMark">
            <summary>
            Gets or sets the minor tick mark.
            </summary>
            <value>The minor tick mark.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ChartAxis.TickLabelPosition">
            <summary>
            Gets or sets the tick label position.
            </summary>
            <value>The tick label position.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ChartAxis.CrossingPoint">
            <summary>
            Gets or sets the crossing point for the axis.
            </summary>
            <value>The crossing point for the axis.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ChartAxis.CrossingValue">
            <summary>
            Gets or sets the crossing value for the axis.
            </summary>
            <value>The crossing value for the axis.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ChartAxis.ShowMajorGridLines">
            <summary>
            Gets or sets a value indicating whether to show major grid lines.
            </summary>
            <value>
                <c>true</c> if to show major grid lines;
            otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ChartAxis.ShowMinorGridLines">
            <summary>
            Gets or sets a value indicating whether to show minor grid lines.
            </summary>
            <value>
                <c>true</c> if to show minor grid lines;
            otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Bytescout.Spreadsheet.Charts.ChartCollection">
            <summary>
            Collection of charts.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.Charts.ChartCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that 
            can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ChartCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Bytescout.Spreadsheet.Charts.Chart" /> at the specified index.
            </summary>
            <value>The zero-based index of the element to get</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ChartCollection.Count">
            <summary>
            Gets the number of elements actually contained in the collection.
            </summary>
            <value></value>
            <returns>
            The number of elements actually contained in the collection.
            </returns>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ChartCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread safe).
            </summary>
            <value></value>
            <returns>true if access to the collection is synchronized (thread safe); otherwise, false.
            </returns>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ChartCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
            <value></value>
            <returns>
            An object that can be used to synchronize access to the collection.
            </returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Charts.ChartCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire collection to a compatible one-dimensional <see cref="T:System.Array" />,
            starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the
            destination of the elements copied from collection. The <see cref="T:System.Array" /> must
            have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Charts.ChartCollection.AddChart(System.Int32,System.Int32,Bytescout.Spreadsheet.Charts.ChartType)">
            <summary>
            Adds the chart.
            </summary>
            <param name="topRow">The top row.</param>
            <param name="leftColumn">The left column.</param>
            <param name="chartType">Type of the chart.</param>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Charts.ChartCollection.AddChart(Bytescout.Spreadsheet.Charts.ChartType)">
            <summary>
            Adds the chart.
            </summary>
            <param name="chartType">Type of the chart.</param>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Charts.ChartCollection.AddChartAndFitInto(System.Int32,System.Int32,System.Int32,System.Int32,Bytescout.Spreadsheet.Charts.ChartType)">
            <summary>
            Adds the chart and fit into.
            </summary>
            <param name="topRow">The top row.</param>
            <param name="leftColumn">The left column.</param>
            <param name="bottomRow">The bottom row.</param>
            <param name="rightColumn">The right column.</param>
            <param name="chartType">Type of the chart.</param>
            <returns></returns>
        </member>
        <member name="T:Bytescout.Spreadsheet.Charts.DataLabels">
            <summary>
            Specifies the settings for the data labels for an entire series
            or the entire chart.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.DataLabels.ShowLegendKey">
            <summary>
            Gets or sets a value indicating whether legend keys shall
            be shown in data labels.
            </summary>
            <value>
                <c>true</c> if legend keys shall be shown in data
            labels; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.DataLabels.ShowValue">
            <summary>
            Gets or sets a value indicating whether value shall be shown
            in a data label.
            </summary>
            <value>
                <c>true</c> if value shall be shown in a data label;
            otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.DataLabels.ShowCategoryName">
            <summary>
            Gets or sets a value indicating whether category name shall
            be shown in the data label.
            </summary>
            <value>
                <c>true</c> if category name shall be shown in the
            data label; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.DataLabels.ShowSeriesName">
            <summary>
            Gets or sets a value indicating whether series name shall be
            shown in a data label.
            </summary>
            <value>
                <c>true</c> if series name shall be shown in a data
            label; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.DataLabels.ShowPercent">
            <summary>
            Gets or sets a value indicating whether percentage shall be shown
            in a data label.
            </summary>
            <value>
                <c>true</c> if percentage shall be shown in a data label;
            otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.DataLabels.ShowBubbleSize">
            <summary>
            Gets or sets a value indicating whether bubble size shall be
            shown in a data label.
            </summary>
            <value>
                <c>true</c> if bubble size shall be shown in a data
            label; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.DataLabels.ShowLeaderLines">
            <summary>
            Gets or sets a value indicating whether leader lines shall be
            shown for data labels.
            </summary>
            <value>
                <c>true</c> if leader lines shall be shown for data
            labels; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Bytescout.Spreadsheet.Charts.Grouping">
            <summary>
            Specifies the possible groupings for a column, line, or area chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.Grouping.PercentStacked">
            <summary>
            (100% Stacked) Specifies that the chart series are drawn next
            to each other along the value axis and scaled to total 100%.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.Grouping.Stacked">
            <summary>
            (Stacked) Specifies that the chart series are drawn next to each
            other on the value axis.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.Grouping.Standard">
            <summary>
            (Standard) Specifies that the chart series are drawn on the value axis.
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Charts.Layout">
            <summary>
            Specifies how the chart element is placed on the chart.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Layout.Auto">
            <summary>
            Gets or sets a value indicating whether exact position
            of the chart element should be auto calculated.
            </summary>
            <value>
                <c>true</c> if exact position of the chart element
            should be auto calculated; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Layout.Height">
            <summary>
            Gets or sets a value specifies the height of the chart element
            as a fraction of the height of the chart.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Layout.Left">
            <summary>
            Gets or sets a value specifies the x location (left) of the chart
            element as a fraction of the width of the chart.
            </summary>
            <value>The left.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Layout.Top">
            <summary>
             Gets or sets a value specifies the top of the chart element as 
            a fraction of the height of the chart.
             </summary>
            <value>The top.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Layout.Width">
            <summary>
            Gets or sets a value specifies the width of the chart element
            as a fraction of the width of the chart.
            </summary>
            <value>The width.</value>
        </member>
        <member name="T:Bytescout.Spreadsheet.Charts.Legend">
            <summary>
            Specifies the legend for a chart.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Legend.Layout">
            <summary>
            Gets the layout of the legend.
            </summary>
            <value>The layout of the legend.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Legend.Position">
            <summary>
            Gets or sets the position of the legend.
            </summary>
            <value>The position of the legend.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Legend.MayBeOverlapped">
            <summary>
            Gets or sets a value indicating whether the legend may
            be overlapped by other elements.
            </summary>
            <value>
                <c>true</c> if the legend may be overlapped by other elements;
            otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Bytescout.Spreadsheet.Charts.LegendPosition">
            <summary>
            Specifies the possible positions for a chart's legend.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.LegendPosition.Bottom">
            <summary>
            Specifies that the legend shall be drawn at the bottom of the chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.LegendPosition.Left">
            <summary>
            Specifies that the legend shall be drawn at the left of the chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.LegendPosition.Right">
            <summary>
            Specifies that the legend shall be drawn at the right of the chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.LegendPosition.Top">
            <summary>
            Specifies that the legend shall be drawn at the top of the chart.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.LegendPosition.TopRight">
            <summary>
            Specifies that the legend shall be drawn at the top right of the chart.
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Charts.Marker">
            <summary>
            Specifies a data marker on a chart. The marker is applied
            to each data point.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.Charts.Marker.#ctor(Bytescout.Spreadsheet.Charts.MarkerStyle,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.Charts.Marker" /> class.
            </summary>
            <param name="style">The style.</param>
            <param name="size">The size.</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Marker.Style">
            <summary>
            Gets or sets the style of the marker.
            </summary>
            <value>The style of the marker.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Marker.Size">
            <summary>
            Gets or sets the size of the marker in points.
            </summary>
            <value>The size of the marker in points.</value>
            <remarks>The size of the marker should between
            2 and 72 points.</remarks>
        </member>
        <member name="T:Bytescout.Spreadsheet.Charts.MarkerStyle">
            <summary>
            All possible style for a marker drawn at each data point.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.MarkerStyle.Automatic">
            <summary>
            Automatic markers
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.MarkerStyle.Circle">
            <summary>
            Specifies a circle shall be drawn at each data point.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.MarkerStyle.Dash">
            <summary>
            Specifies a dash shall be drawn at each data point.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.MarkerStyle.Diamond">
            <summary>
            Specifies a diamond shall be drawn at each data point.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.MarkerStyle.Dot">
            <summary>
            Specifies a dot shall be drawn at each data point.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.MarkerStyle.None">
            <summary>
            Specifies nothing shall be drawn at each data point.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.MarkerStyle.Picture">
            <summary>
            Specifies a picture shall be drawn at each data point.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.MarkerStyle.Plus">
            <summary>
            Specifies a plus shall be drawn at each data point.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.MarkerStyle.Square">
            <summary>
            Specifies a square shall be drawn at each data point.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.MarkerStyle.Star">
            <summary>
            Specifies a star shall be drawn at each data point.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.MarkerStyle.Triangle">
            <summary>
            Specifies a triangle shall be drawn at each data point.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.MarkerStyle.X">
            <summary>
            Specifies an X shall be drawn at each data point.
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Charts.PlotArea">
            <summary>
            Specifies the plot area of the chart.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.Charts.PlotArea.#ctor(Bytescout.Spreadsheet.Spreadsheet,Bytescout.Spreadsheet.Charts.ChartAxis[])">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.Charts.PlotArea" /> class.
            </summary>
            <param name="document">The document.</param>
            <param name="axes">The axes.</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.PlotArea.Layout">
            <summary>
            Gets the layout of the plot area.
            </summary>
            <value>The layout of the plot area.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.PlotArea.Border">
            <summary>
            Gets the border.
            </summary>
            <value>The border.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.PlotArea.Interior">
            <summary>
            Gets the interior.
            </summary>
            <value>The interior.</value>
        </member>
        <member name="T:Bytescout.Spreadsheet.Charts.Series">
            <summary>
            Specifies base properties for a chart series.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.Charts.Series.#ctor(Bytescout.Spreadsheet.Range)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.Charts.Series" /> class.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Charts.Series.#ctor(Bytescout.Spreadsheet.Range,Bytescout.Spreadsheet.Range)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.Charts.Series" /> class.
            </summary>
            <param name="values">The values.</param>
            <param name="xvalues">The x values.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Charts.Series.#ctor(Bytescout.Spreadsheet.Range,Bytescout.Spreadsheet.Range,Bytescout.Spreadsheet.Range)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.Charts.Series" /> class.
            </summary>
            <param name="values">The values range.</param>
            <param name="xvalues">The x values range.</param>
            <param name="bubbleSizes">The bubble sizes range.</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Series.ChartType">
            <summary>
            Gets or sets the type of the chart.
            </summary>
            <value>The type of the chart.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Series.Values">
            <summary>
            Gets or sets the reference to source of the data contained
            in this chart.
            </summary>
            <value>The the reference to source of the data contained
            in this chart.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Series.XValues">
            <summary>
            Gets or sets the reference to source of the x values for a chart series.
            </summary>
            <value>The the reference to source of the x values.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Series.BubbleSizes">
            <summary>
            Gets or sets the reference to source of the bubble size values.
            </summary>
            <value>The reference to source of the bubble size values.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Series.ShapeProperties">
            <summary>
            Gets or sets a value specifies the formatting.
            </summary>
            <value>The Shape Properties.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Series.Name">
            <summary>
            Gets or sets name of the series.
            </summary>
            <value>The name of the series.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Series.MarkerSize">
            <summary>
            Gets or sets the size of the marker in points.
            </summary>
            <value>The size of the marker in points.</value>
            <remarks>The size of the marker should between 2 and 72 points.</remarks>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Series.MarkerStyle">
            <summary>
            Gets or sets the marker style for a point or series in a line chart, scatter chart, or radar chart.
            </summary>
            <value>The marker style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Series.DataLabels">
            <summary>
            Gets the <see cref="P:Bytescout.Spreadsheet.Charts.Series.DataLabels" /> object for for the series.
            </summary>
            <value>The <see cref="P:Bytescout.Spreadsheet.Charts.Series.DataLabels" />.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Series.InvertIfNegative">
            <summary>
            Gets or sets a value indicating whether chart shall invert
            its colors if the value is negative.
            </summary>
            <value>
                <c>true</c> if chart shall invert its colors if the
            value is negative; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Series.Has3DEffect">
            <summary>
            Gets or sets a value indicating whether the series has a three-dimensional appearance.
            Applies only to bubble charts
            </summary>
            <value>
                <c>true</c> if the series has a three-dimensional appearance; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Series.Explosion">
            <summary>
            Gets or sets the amount the data point shall be moved
            from the center of the pie (for a pie-chart or doughnut-chart slice). 
            </summary>
            <value>The amount the data point shall be moved from the
            center of the pie.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Series.Smooth">
            <summary>
            Gets or sets a value indicating whether line connecting the points on the
            chart shall be smoothed using Catmull-Rom splines.
            </summary>
            <value>
                <c>true</c> if line connecting the points on the chart shall be
            smoothed using Catmull-Rom splines; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Bytescout.Spreadsheet.Charts.SeriesAxis">
            <summary>
            Specifies a series axis for the chart.
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Charts.LabelAlignment">
            <summary>
            Specifies the possible ways to align the tick labels.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.LabelAlignment.Center">
            <summary>
            Specifies that the text shall be centered.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.LabelAlignment.Left">
            <summary>
            Specifies that the text shall be left justified.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.LabelAlignment.Right">
            <summary>
            Specifies that the text shall be right justified.
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Charts.BubbleSizeRepresents">
            <summary>
            Specifies the possible ways to represent data as bubble chart sizes.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.BubbleSizeRepresents.Area">
            <summary>
            (Bubble Size Represents Area) Specifies the area of the bubbles
            shall be proportional to the bubble size value.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.BubbleSizeRepresents.Width">
            <summary>
            (Bubble Size Represents Width) Specifies the radius of the bubbles
            shall be proportional to the bubble size value.
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Charts.SeriesCollection">
            <summary>
            Collection of series.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.SeriesCollection.m_series">
            <summary>
            Collection of series.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.SeriesCollection.Count">
            <summary>
            Gets the number of series contained in the collection.
            </summary>
            <value>The number of series contained in the collection.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.SeriesCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Bytescout.Spreadsheet.Charts.Series" /> at the specified index.
            </summary>
            <value>The <see cref="T:Bytescout.Spreadsheet.Charts.Series" /> at the specified index.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.Charts.SeriesCollection.Add(Bytescout.Spreadsheet.Charts.Series)">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Charts.SeriesCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used
            to iterate through the collection.
            </returns>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.SeriesCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the
            collection is synchronized (thread safe).
            </summary>
            <value></value>
            <returns>true if access to the collection is synchronized
            (thread safe); otherwise, false.
            </returns>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.SeriesCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
            <value>An object that can be used to synchronize access to the collection.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.Charts.SeriesCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire collection to a compatible one-dimensional <see cref="T:System.Array" />,
            starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the
            destination of the elements copied from collection. The <see cref="T:System.Array" /> must
            have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="T:Bytescout.Spreadsheet.Charts.Surface">
            <summary>
            Specifies a wall or floor properties of a 3D chart.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.Surface.Thickness">
            <summary>
            Gets or sets the thickness of the wall or floor as a percentage of
            the largest dimension of the plot volume.
            </summary>
            <value>The thickness of the wall or floor as a percentage of
            the largest dimension of the plot volume.</value>
        </member>
        <member name="T:Bytescout.Spreadsheet.Charts.TickLabelPosition">
            <summary>
            Specifies the possible positions for tick labels.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.TickLabelPosition.High">
            <summary>
            Specifies the axis labels shall be at the high end
            of the perpendicular axis.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.TickLabelPosition.Low">
            <summary>
            Specifies the axis labels shall be at the low end of
            the perpendicular axis.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.TickLabelPosition.NextTo">
            <summary>
            Specifies the axis labels shall be next to the axis.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.TickLabelPosition.None">
            <summary>
            Specifies the axis labels are not drawn.
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Charts.TickMark">
            <summary>
            Specifies the possible positions for tick marks.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.TickMark.Cross">
            <summary>
            Specifies the tick marks shall cross the axis.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.TickMark.Inside">
            <summary>
            Specifies the tick marks shall be inside the plot area.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.TickMark.None">
            <summary>
            Specifies there shall be no tick marks.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.TickMark.Outside">
            <summary>
            Specifies the tick marks shall be outside the plot area.
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Charts.ValueAxis">
            <summary>
            Specifies the value axis of the chart.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.Charts.ValueAxis.#ctor(Bytescout.Spreadsheet.Spreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.Charts.ValueAxis" /> class.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ValueAxis.CrossesBetweenCategories">
            <summary>
            Gets or sets a value indicating whether the value axis crosses the 
            category axis between categories.
            </summary>
            <value>
                <c>true</c> if the value axis crosses the category axis between
            categories; otherwise, <c>false</c>.
            </value>
            <remarks>
            If this property is set to <c>true</c> then the value axis crosses
            the category axis between data markers. If this property is set to
            <c>false</c> then the value axis crosses the category axis at
            the midpoint of a category.
            </remarks>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ValueAxis.MajorUnit">
            <summary>
            Gets or sets the distance between major ticks.
            </summary>
            <value>The distance between major ticks.</value>
            <remarks>Values less than 1 treated as "use default".</remarks>
        </member>
        <member name="P:Bytescout.Spreadsheet.Charts.ValueAxis.MinorUnit">
            <summary>
            Gets or sets the distance between minor ticks.
            </summary>
            <value>The distance between minor ticks.</value>
            <remarks>Values less than 1 treated as "use default".</remarks>
        </member>
        <member name="T:Bytescout.Spreadsheet.Charts.DisplayBlanksAs">
            <summary>
            Specifies the possible ways to display blanks in charts.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.DisplayBlanksAs.Gap">
            <summary>
            Specifies that blank values shall be left as a gap.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.DisplayBlanksAs.Span">
            <summary>
            Specifies that blank values shall be spanned with a line.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Charts.DisplayBlanksAs.Zero">
            <summary>
            Specifies that blank values shall be treated as zero.
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.COM.IViewOptions">
            <summary>
            View options
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IViewOptions.ActivePane">
            <summary>
            Gets or sets the active pane.
            </summary>
            <value>The active pane.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IViewOptions.FrozenNoSplit">
            <summary>
            Gets or sets a value indicating whether the panes in the window are frozen with pane splits or without
            </summary>
            <value>
                <c>true</c> if frozen without pane splits; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IViewOptions.GridLineColor">
            <summary>
            Gets or sets the color of the gridlines
            </summary>
            <value>The color of the gridline.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IViewOptions.GridLinesColorEnabled">
            <summary>
            Gets or sets a value indicating whether the gridlines of the window are drawn with the window default foreground color or with the color specified by the value of <see cref="P:Bytescout.Spreadsheet.BaseClasses.ViewOptions.GridLineColor" /> option.
            </summary>
            <value>
                <c>true</c> to use window default foreground color; otherwise, <c>false</c> to use <see cref="P:Bytescout.Spreadsheet.BaseClasses.ViewOptions.GridLineColor" /> for this purpose instead.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IViewOptions.PageBreakPreview">
            <summary>
            Gets or sets a value indicating whether the sheet is in a Page Break Preview view
            </summary>
            <value>
                <c>true</c> if show in a page break preview; <c>false</c> if show in a normal view.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IViewOptions.Paged">
            <summary>
            Gets or sets a value indicating whether the sheet is currently being displayed in the window.
            </summary>
            <value>
                <c>true</c> if the sheet is currently being displayed in the window; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IViewOptions.PanesFrozen">
            <summary>
            Gets or sets a value indicating whether the panes in the window are frozen (locked) or not
            </summary>
            <value>
                <c>true</c> if panes are frozen (locked); otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IViewOptions.RightToLeft">
            <summary>
            Gets or sets a value indicating whether columns are displayed in right-to-left mode or not.
            </summary>
            <value>
                <c>true</c> if columns are displayed from right to left; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IViewOptions.Selected">
            <summary>
            Gets or sets a value indicating whether the sheet tab is selected
            </summary>
            <value>
                <c>true</c> if the sheet tab is selected; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IViewOptions.ShowFormulas">
            <summary>
            Gets or sets a value indicating whether formulas or values only are displayed in the <see cref="T:Bytescout.Spreadsheet.Worksheet" /></summary>
            <value>
                <c>true</c> if display formulas; <c>false</c> if display values.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IViewOptions.ShowGridLines">
            <summary>
            Gets or sets a value indicating whether gridlines are shown in the <see cref="T:Bytescout.Spreadsheet.Worksheet" /></summary>
            <value>
                <c>true</c> if show gridlines; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IViewOptions.ShowGuts">
            <summary>
            Gets or sets a value indicating whether the window displays the outline symbols or not.
            </summary>
            <value>
                <c>true</c> to show outline symbols; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IViewOptions.ShowSheetHeaders">
            <summary>
            Gets or sets a value indicating whether column headings are visible or not in the <see cref="T:Bytescout.Spreadsheet.Worksheet" /></summary>
            <value>
                <c>true</c> if show row and column headings; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IViewOptions.ShowZeroValues">
            <summary>
            Gets or sets a value indicating whether  the <see cref="T:Bytescout.Spreadsheet.Worksheet" /> displays zero values or not
            </summary>
            <value>
                <c>true</c> if show values of zero as a zero symbol; <c>false</c> if zero values should be displayed as blank.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IViewOptions.SplitColumn">
            <summary>
            Gets or sets the column number where the window is split into panes (the number of columns to the left of the split line).
            </summary>
            <value>The split column.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IViewOptions.SplitHorizontal">
            <summary>
            Gets or sets the location of the horizontal window split, in points.
            </summary>
            <value>The split horizontal.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IViewOptions.SplitRow">
            <summary>
            Gets or sets the row number where the window is split into panes (the number of rows above the split).
            </summary>
            <value>The split row.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IViewOptions.SplitVertical">
            <summary>
            Gets or sets the location of the vertical window split, in points.
            </summary>
            <value>The split vertical.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IViewOptions.Zoom">
            <summary>
            Gets or sets the display size of the window, as a percentage.
            </summary>
            <value>The zoom.</value>
        </member>
        <member name="T:Bytescout.Spreadsheet.COM.ICellAddress">
            <summary>
            Cell address interface
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ICellAddress.Column">
            <summary>
            Column index
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ICellAddress.ColumnRelative">
            <summary>
            Specifies a relative or absolute column index
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ICellAddress.IsEmpty">
            <summary>
            Indicates whether the specified CellAddress is empty.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ICellAddress.Row">
            <summary>
            Row index
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ICellAddress.RowRelative">
            <summary>
            Specifies a relative or absolute row index
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.COM.IDefinedName">
            <summary>
            Represents a defined name
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IDefinedName.Comment">
            <summary>
            Gets or sets the comment associated with this defined name. 
            </summary>
            <value>The comment.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IDefinedName.Index">
            <summary>
            Returns the zero based index of the defined name in the DefinedNames collection. 
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IDefinedName.Name">
            <summary>
            Gets or sets the name of the defined name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IDefinedName.RefersTo">
            <summary>
            Gets or sets the formula that the name is defined to refer to.
            </summary>
            <value>The refers to.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IDefinedName.Value">
            <summary>
            Gets or sets the string containing the formula that the name is defined to refer to.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IDefinedName.Visible">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Bytescout.Spreadsheet.DefinedName" /> is visible in the user interface.
            </summary>
            <value>
                <c>true</c> if visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Bytescout.Spreadsheet.COM.ISpreadsheetOptions">
            <summary>
            Spreadsheet options class
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISpreadsheetOptions.MaxColumnCountAllowed">
            <summary>
            Gets the max column count allowed for the current format limitations set (see methods .SetExcel2003Limits, .SetExcel2007Limits, .SetOpenOffice3Limits to set current limitations)
            </summary>
            <value>The max columns.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISpreadsheetOptions.MaxRowCountAllowed">
            <summary>
            Gets the max row count allowed for the current format limitations set (see methods .SetExcel2003Limits, .SetExcel2007Limits, .SetOpenOffice3Limits to set current limitations)
            </summary>
            <value>The max row count allowed</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISpreadsheetOptions.MaxStringLengthAllowedPerCell">
            <summary>
            Gets the max string length per cell allowed for the current format limitations set (see methods .SetExcel2003Limits, .SetExcel2007Limits, .SetOpenOffice3Limits to set current limitations)
            </summary>
            <value>The max string length per cell.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheetOptions.SetExcel2003Limits">
            <summary>
            Sets Excel2003 compatible limits (string length, max column count, max row count etc)
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheetOptions.SetExcel2007Limits">
            <summary>
            Sets Excel2007 compatible limits (string length, max column count, max row count etc)
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheetOptions.SetOpenOffice3Limits">
            <summary>
            Sets Open Office 3 Calc compatible limits (string length, max column count, max row count etc)
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISpreadsheetOptions.ThrowExceptionsOnFormatIncompatibilities">
            <summary>
            Throw the exception if data can be corrupted while saving to the file or stream
            (usually this applies, for example, if you save into XLS format while spreadsheet
            contains formatting not supported by XLS format but supported by XLSX format only)
            False by default
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISpreadsheetOptions.ThrowExceptionsOnFormatLimits">
            <summary>
            Gets or sets a value indicating whether [throw exceptions on spreadsheet format limits].
            </summary>
            <value>
                <c>true</c> if [throw exceptions on format limits]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Bytescout.Spreadsheet.COM.ISearchOptions">
            <summary>
            Search options class
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISearchOptions.CaseSensitiveSearch">
            <summary>
            Use case sensitive search.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISearchOptions.RegexSearch">
            <summary>
            Perform regular expression search. <see cref="P:Bytescout.Spreadsheet.COM.ISearchOptions.SearchString" /> must contain a regular expression.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISearchOptions.SearchBackwards">
            <summary>
            Perform backward search.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISearchOptions.SearchString">
            <summary>
            String to search.
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.COM.ISpreadsheetFont">
            <summary>
            Spreadsheet font class 
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISpreadsheetFont.Bold">
            <summary>
            Gets a value indicating whether this <see cref="T:Bytescout.Spreadsheet.SpreadsheetFont" /> is bold.
            </summary>
            <value>
                <c>true</c> if bold; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISpreadsheetFont.CharacterSet">
            <summary>
            Gets the character set.
            </summary>
            <value>The character set.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheetFont.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"></see> to compare with the current <see cref="T:System.Object"></see>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>; otherwise, false.
            </returns>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISpreadsheetFont.Escapement">
            <summary>
            Gets the escapement.
            </summary>
            <value>The escapement.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISpreadsheetFont.Font">
            <summary>
            Gets the font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISpreadsheetFont.FontColor">
            <summary>
            Gets the color of the font.
            </summary>
            <value>The color of the font.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISpreadsheetFont.FontName">
            <summary>
            Gets the name of the font.
            </summary>
            <value>The name of the font.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheetFont.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode"></see> is suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISpreadsheetFont.Height">
            <summary>
            Gets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISpreadsheetFont.Italic">
            <summary>
            Gets a value indicating whether this <see cref="T:Bytescout.Spreadsheet.SpreadsheetFont" /> is italic.
            </summary>
            <value>
                <c>true</c> if italic; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISpreadsheetFont.StruckOut">
            <summary>
            Gets a value indicating whether [struck out].
            </summary>
            <value>
                <c>true</c> if [struck out]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISpreadsheetFont.Underline">
            <summary>
            Gets the underline.
            </summary>
            <value>The underline.</value>
        </member>
        <member name="T:Bytescout.Spreadsheet.COM.IDefinedNameList">
            <summary>
            A collection of defined names in a workbook.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IDefinedNameList.Add(System.String,System.String)">
            <summary>
            Adds a name to the collection, or modifies the name if it already exists.
            </summary>
            <param name="name">The name of the defined name.</param>
            <param name="formula">The formula to assign to the defined name.</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IDefinedNameList.Count">
            <summary>
            Gets the number of elements actually contained in the DefinedNameList.
            </summary>
            <value>The number of elements actually contained in the DefinedNameList.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IDefinedNameList.IndexOf(System.String)">
            <summary>
            Searches for the specified string and returns the zero-based index of the first occurrence within the entire DefinedNameList. 
            </summary>
            <param name="name">The name.</param>
            <returns>The zero-based index of the first occurrence of name within the entire DefinedNameList, if found; otherwise, –1. </returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IDefinedNameList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:Bytescout.Spreadsheet.DefinedName" />. 
            </summary>
            <param name="index">The The zero-based index of the element to remove.</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IDefinedNameList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Bytescout.Spreadsheet.DefinedName" /> at the specified index.
            </summary>
            <value>The zero-based index of the element to get</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IDefinedNameList.Item(System.String)">
            <summary>
            Gets the <see cref="T:Bytescout.Spreadsheet.DefinedName" /> with the specified name.
            </summary>
            <value>The specified name of the element to ge</value>
        </member>
        <member name="T:Bytescout.Spreadsheet.COM.IDocumentSummaryInformation">
            <summary>
            Structure describing SummaryInformation Property Set
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IDocumentSummaryInformation.Bytecount">
            <summary>
            An estimate of the size of the document in bytes. May be ignored.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IDocumentSummaryInformation.Category">
            <summary>
            Category name for the document
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IDocumentSummaryInformation.Cchwithspaces">
            <summary>
            Specifies an estimate of the number of characters in the document including whitespace. May be ignored.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IDocumentSummaryInformation.Codepage">
            <summary>
            Codepage for text
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IDocumentSummaryInformation.Company">
            <summary>
            Specifies the company associated with the document‘s authoring.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IDocumentSummaryInformation.Contentstatus">
            <summary>
            specifies the document status. May be absent.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IDocumentSummaryInformation.Contenttype">
            <summary>
            Specifies the content type of the file. May be absent.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IDocumentSummaryInformation.Docparts">
            <summary>
            docparts
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IDocumentSummaryInformation.Docversion">
            <summary>
            Should be absent.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IDocumentSummaryInformation.Headingpair">
            <summary>
            heading pair
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IDocumentSummaryInformation.Hiddencount">
            <summary>
            Specifies the number of hidden slides in the document. May be ignored.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IDocumentSummaryInformation.Hyperlinkschanged">
            <summary>
            hyperlinks changed
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IDocumentSummaryInformation.Language">
            <summary>
            Should be absent.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IDocumentSummaryInformation.Linecount">
            <summary>
            An estimate of the number of text lines in the document. May be ignored.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IDocumentSummaryInformation.Linksdirty">
            <summary>
            Links dirty
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IDocumentSummaryInformation.Manager">
            <summary>
            specifies the manager associated with the document.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IDocumentSummaryInformation.Mmclipcount">
            <summary>
            Specifies the number of multimedia clips in the document. May be ignored.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IDocumentSummaryInformation.Notecount">
            <summary>
            Specifies the number of notes in the document. May be ignored.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IDocumentSummaryInformation.Paracount">
            <summary>
            An estimate or an exact count of the number of paragraphs in the document. May be ignored.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IDocumentSummaryInformation.Presformat">
            <summary>
            Presentation format type of the document
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IDocumentSummaryInformation.Scale">
            <summary>
            The value of the property must be FALSE.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IDocumentSummaryInformation.Shareddoc">
            <summary>
            The property value MUST be FALSE (0x00000000).
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IDocumentSummaryInformation.Slidecount">
            <summary>
            Specifies the number of slides in the document. May be ignored.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IDocumentSummaryInformation.Version">
            <summary>
            Specifies the version of the application that wrote the property set storage.
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.COM.IVtHeadingPair">
            <summary>
            Heading Pair struct
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IVtHeadingPair.headerParts">
            <summary>
            heading String
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IVtHeadingPair.headingString">
            <summary>
            Header parts
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.COM.IHyperLinks">
            <summary>
            Hyperlinks 
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IHyperLinks.Add(Bytescout.Spreadsheet.Structures.CellsRange,System.String,System.String,System.String,System.String)">
            <summary>
            Adds the hyperlink.
            </summary>
            <param name="Anchor">The cells range.</param>
            <param name="Address">The hyperlink address.</param>
            <param name="SubAddress">The sub address.</param>
            <param name="ScreenTip">The screen tip.</param>
            <param name="TextToDisplay">The text to display.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IHyperLinks.Add(Bytescout.Spreadsheet.HyperLink)">
            <summary>
            Adds an <see cref="T:Bytescout.Spreadsheet.HyperLink" /> to the end of the HyperLinks.
            </summary>
            <param name="item">The <see cref="T:Bytescout.Spreadsheet.HyperLink" /> to be added to the end of the HyperLinks.</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IHyperLinks.Count">
            <summary>
            Gets the number of elements actually contained in the HyperLinks.
            </summary>
            <value>The number of elements actually contained in the HyperLinks.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IHyperLinks.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:Bytescout.Spreadsheet.HyperLink" />. 
            </summary>
            <param name="index">The The zero-based index of the element to remove.</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IHyperLinks.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Bytescout.Spreadsheet.HyperLink" /> at the specified index.
            </summary>
            <value>The zero-based index of the element to get</value>
        </member>
        <member name="T:Bytescout.Spreadsheet.COM.IHyperLink">
            <summary>
            Represents a hyperlink
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IHyperLink.Address">
            <summary>
            Gets or sets the address of this hyperlink.
            </summary>
            <value>The address.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IHyperLink.Range">
            <summary>
            Gets the range which this hyperlink is attached to.
            </summary>
            <value>The range.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IHyperLink.ScreenTip">
            <summary>
            Gets or sets the ScreenTip text for the specified hyperlink.
            </summary>
            <value>The screen tip.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IHyperLink.SubAddress">
            <summary>
            Gets or sets the the location within the document associated with the hyperlink.
            </summary>
            <value>The sub address.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IHyperLink.TextToDisplay">
            <summary>
            Gets or sets the text to be displayed for the specified hyperlink. The default value is the address of the hyperlink.
            <value>The text to display.</value></summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.COM.ISummaryInformation">
            <summary>
            Structure describing SummaryInformation Property Set
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISummaryInformation.ApplicationName">
            <summary>
            The name of the application that was used to create the document.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISummaryInformation.Author">
            <summary>
            The author of the document.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISummaryInformation.CharCount">
            <summary>
            The total number of characters in the document.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISummaryInformation.Codepage">
            <summary>
            Codepage for text
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISummaryInformation.Comments">
            <summary>
            Comments related the document.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISummaryInformation.CreateDateTime">
            <summary>
            Gets or sets the time that the document was created.
            </summary>
            <value>The create date time.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISummaryInformation.EditTime">
            <summary>
            Gets or sets the total amount of time that has been spent editing the document.
            </summary>
            <value>The edit time.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISummaryInformation.Keywords">
            <summary>
            Keywords related to the document.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISummaryInformation.LastAuthor">
            <summary>
            The last author of the document.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISummaryInformation.LastPrinted">
            <summary>
            Gets or sets the most recent time the document was printed.
            </summary>
            <value>The last printed.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISummaryInformation.LastSavedDateTime">
            <summary>
            Gets or sets the most recent time the document was saved.
            </summary>
            <value>The last saved date time.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISummaryInformation.PageCount">
            <summary>
            The total number of pages in the document.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISummaryInformation.RevisionNumber">
            <summary>
            An application-specific revision number for this version of the document.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISummaryInformation.Security">
            <summary>
            A 32-bit signed integer representing a set of application-suggested access control flags with the following values:
                0x00000001: Password protected
                0x00000002: Read-only recommended
                0x00000004: Read-only enforced
                0x00000008: Locked for annotations
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISummaryInformation.Subject">
            <summary>
            The subject of the document.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISummaryInformation.Template">
            <summary>
            The application specific template used to create the document.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISummaryInformation.Title">
            <summary>
            The title of the document.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISummaryInformation.WordCount">
            <summary>
            The total number of words in the document.
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.COM.ICellsRange">
            <summary>
            A structure that specifies a range of cells on the sheet.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ICellsRange.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
                <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ICellsRange.FirstColumn">
            <summary>
            First column index
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ICellsRange.FirstRow">
            <summary>
            First row index
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ICellsRange.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ICellsRange.LastColumn">
            <summary>
            Last column index
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ICellsRange.LastRow">
            <summary>
            Last row index
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ICellsRange.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Bytescout.Spreadsheet.COM.ICell">
            <summary>
            Cell interface
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ICell.Value">
            <summary>
            Gets or sets the value of cell.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ICell.Clear">
            <summary>
            Clears this cell.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ICell.ValueAsExcelDisplays">
            <summary>
            Returns the formatted string value of the cell in the sam way you would see in Excel or another spreadsheet editor. Formatting uses the <see cref="P:Bytescout.Spreadsheet.COM.ICell.NumberFormatString" /> formatting string settings to format the value.
            </summary>
            <value>The string with the formatted value.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ICell.ValueAsHTML">
            <summary>
            Gets or sets the formatted text (Rich-Text) in HTML coded format
            </summary>
            <value>The like html presentation of formatted text.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ICell.ValueAsString">
            <summary>
            Returns the formatted string value of the cell in the sam way you would see in Excel or another spreadsheet editor. Formatting uses the <see cref="P:Bytescout.Spreadsheet.COM.ICell.NumberFormatString" /> settings to format the value.
            </summary>
            <value>The string with the formatted value.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ICell.ValueAsDouble">
            <summary>
            Gets the value as double.
            </summary>
            <value>The value as double.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ICell.ValueAsInteger">
            <summary>
            Gets the value as integer.
            </summary>
            <value>The value as integer.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ICell.ValueAsBoolean">
            <summary>
            Gets a value as boolean.
            </summary>
            <value>The value as boolean.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ICell.ValueAsUnformattedString">
            <summary>
            Gets the value as unformatted string.
            </summary>
            <value>The value as unformatted string.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ICell.ValueAsDateTime">
            <summary>
            Gets or sets the value as date time, see type <see cref="T:System.DateTime" /></summary>
            <value>The value as <see cref="T:System.DateTime" />.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ICell.IsInteger">
            <summary>
            Gets a value indicating whether this Cell contains integer number.
            </summary>
            <value>
                <c>true</c> if this Cell contains integer number; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ICell.ValueDataType">
            <summary>
            Gets the type of the value data.
            </summary>
            <value>The type of the value data.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ICell.ContainsArrayFormula">
            <summary>
            Gets a value indicating whether this cell contains an array formula.
            </summary>
            <value>
                <c>true</c> if this cell contains array formula; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ICell.Formula">
            <summary>
            Gets or sets the formula for the cell.
            </summary>
            <value>The formula.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ICell.Calculate">
            <summary>
            Calculates of formula this cell (if formula is set for this cell)
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ICell.NumberFormatString">
            <summary>
            Gets or sets the number format string.
            </summary>
            <value>The number format string.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ICell.ValueDataTypeByNumberFormatString">
            <summary>
            Changes (<see cref="P:Bytescout.Spreadsheet.COM.ICell.NumberFormatString" /> to the predefined format string depending according to the (<see cref="T:Bytescout.Spreadsheet.Constants.NumberFormatType" />) type
            </summary>
            <value>The type of the predefined number format string.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ICell.GetAddress">
            <summary>
             Returns address of the cell as CellAddress object.
            </summary>
            <returns>Address of the cell.</returns>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ICell.Merged">
            <summary>
            Gets a value indicating whether this <see cref="T:Bytescout.Spreadsheet.Cell" /> is merged.
            </summary>
            <value>
                <c>true</c> if merged; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ICell.MergedWith">
            <summary>
            Gets the <see cref="T:Bytescout.Spreadsheet.Range" /> merged with this cell. 
            </summary>
            <value>The <see cref="T:Bytescout.Spreadsheet.Range" /> merged with this cell.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ICell.MergedWithCell">
            <summary>
            Gets the top left cell of <see cref="T:Bytescout.Spreadsheet.Range" /> merged this with cell. 
            </summary>
            <value>The top left cell of <see cref="T:Bytescout.Spreadsheet.Range" /> merged this with cell.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ICell.ToDateTime">
            <summary>
            Return the cell value as date time, see type <see cref="T:System.DateTime" /></summary>
            <value>The cell value as <see cref="T:System.DateTime" />.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ICell.ToHTML">
            <summary>
            Return the formatted text (Rich-Text) in HTML coded format
            </summary>
            <returns>The like html presentation of formatted text</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ICell.ToInteger">
            <summary>
            Return cell value as integer, see type <see cref="T:System.Int32" />.
            </summary>
            <returns>The cell value as <see cref="T:System.Int32" /></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ICell.ToDouble">
            <summary>
            Return cell value as double, see type <see cref="T:System.Double" />.
            </summary>
            <returns>The cell value as <see cref="T:System.Double" /></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ICell.ToString">
            <summary>
            Toes the string.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Bytescout.Spreadsheet.COM.IColumn">
            <summary>
            Column inteface
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IColumn.Width">
            <summary>
            Gets or sets the width of column.
            </summary>
            <value>The width in pixels.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IColumn.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Bytescout.Spreadsheet.Cell" /> at the specified Index.
            </summary>
            <value></value>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IColumn.AutoFit">
            <summary>
            AutoFit of column width.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IColumn.IsFormatted">
            <summary>
            Gets a bool value indicating that the column is formatted differently from the default format.
            </summary>
            <value>
                <c>true</c> if this column has non default format; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IColumn.IsNotEmptyCells">
            <summary>
            Gets a bool value indicating that the column contains only empty cells or not
            </summary>
            <value>
                <c>true</c> if this column contains not empty cells; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IColumn.NumberFormat">
            <summary>
            Gets or sets the number format string.
            </summary>
            <value>The number format string.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IColumn.Hidden">
            <summary>
            Gets or sets indicating that the column is hidden.
            </summary>
            <value>
                <c>true</c> if this column is hidden; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Bytescout.Spreadsheet.COM.IColumns">
            <summary>
            IColumns interface to manage columns in spreadsheet
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IColumns.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Bytescout.Spreadsheet.Row" /> with the specified Index.
            </summary>
            <value></value>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IColumns.Insert(System.Int32,System.Int32)">
            <summary>
            Inserts the specified ColumnCount Columns into the worksheet at the specified Index.
            </summary>
            <param name="Index">The index at which Column should be inserted.</param>
            <param name="ColumnCount">The Columns count.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IColumns.Insert(System.Int32)">
            <summary>
            Inserts Column into the worksheet at the specified Index.
            </summary>
            <param name="Index">The index at which Column should be inserted.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IColumns.Delete(System.Int32,System.Int32)">
            <summary>
            Deletes columns from First to Last indexes.
            </summary>
            <param name="First">The index first column.</param>
            <param name="Last">The index last column.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IColumns.Delete(System.Int32)">
            <summary>
            Deletes the column specified index.
            </summary>
            <param name="Index">The column index.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IColumns.CopyAndPaste(System.Int32,System.Int32,System.Int32)">
            <summary>
            Makes a copy and paste of the columns selection specified by First and Last columns indexes into new position (specified by Dest column index)
            </summary>
            <param name="First">The index of first column for copy.</param>
            <param name="Last">The index of last column for copy.</param>
            <param name="Dest">The index of destination column (to paste into).</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IColumns.FirstFormatedColumn">
            <summary>
            Gets the number of first formated column.
            </summary>
            <value>The number of first formated column.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IColumns.LastFormatedColumn">
            <summary>
            Gets the number of last formated column.
            </summary>
            <value>The number of last formated column.</value>
        </member>
        <member name="T:Bytescout.Spreadsheet.COM.IExtFormat">
            <summary>
            Ext format for the cell interface
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IExtFormat.CellFormat">
            <summary>
            Gets or sets the cell format.
            </summary>
            <value>The cell format.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IExtFormat.Locked">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Bytescout.Spreadsheet.COM.IExtFormat" /> is locked.
            </summary>
            <value>
                <c>true</c> if locked; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IExtFormat.HiddenFormula">
            <summary>
            Gets or sets a value indicating whether formula is hidden.
            </summary>
            <value>
                <c>true</c> if formula is hidden; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IExtFormat.AlignmentHorizontal">
            <summary>
            Sets the horizontal text alignment style of the row.
            </summary>
            <value>The horizontal text alignment style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IExtFormat.AlignmentVertical">
            <summary>
            Sets the vertical text alignment style of the row.
            </summary>
            <value>The vertical text alignment style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IExtFormat.Wrap">
            <summary>
            Sets a value indicating whether a text is wrapped.
            </summary>
            <value>
                <c>true</c> if a text is wrapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IExtFormat.ShrinkToFit">
            <summary>
            Gets or sets a value indicating shrink content to fit into cell.
            </summary>
            <value>
                <c>true</c> if shrink to fit; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IExtFormat.Rotation">
            <summary>
            Sets the text rotation angle for the row.
            </summary>
            <value>The rotation angle.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IExtFormat.Indent">
            <summary>
            Gets or sets the Indent value for the cell.
            </summary>
            <value>The rotation angle.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IExtFormat.TextDirection">
            <summary>
            Gets or sets the reading order.
            </summary>
            <value>Reading order.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IExtFormat.LeftBorderStyle">
            <summary>
            Sets the left border style.
            </summary>
            <value>The left border style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IExtFormat.RightBorderStyle">
            <summary>
            Sets the right border style.
            </summary>
            <value>The right border style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IExtFormat.TopBorderStyle">
            <summary>
            Sets the top border style.
            </summary>
            <value>The top border style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IExtFormat.BottomBorderStyle">
            <summary>
            Sets the bottom border style.
            </summary>
            <value>The bottom border style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IExtFormat.DiagonalBorderStyle">
            <summary>
            Gets or sets the diagonal border style.
            </summary>
            <value>The diagonal border style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IExtFormat.LeftBorderColor">
            <summary>
            Sets the color of the left border.
            </summary>
            <value>The color of the left border.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IExtFormat.RightBorderColor">
            <summary>
            Sets the color of the right border.
            </summary>
            <value>The color of the right border.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IExtFormat.TopBorderColor">
            <summary>
            Sets the color of the top border.
            </summary>
            <value>The color of the top border.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IExtFormat.BottomBorderColor">
            <summary>
            Sets the color of the bottom border.
            </summary>
            <value>The color of the bottom border.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IExtFormat.DiagonalBorderColor">
            <summary>
            Gets or sets the color of the diagonal border.
            </summary>
            <value>The color of the diagonal border.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IExtFormat.IsDiagonalDownLine">
            <summary>
            Gets or sets a value indicating whether this instance is diagonal line from top left to right bottom
            </summary>
            <value>
                <c>true</c> if this instance is diagonal down line; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IExtFormat.IsDiagonalUpLine">
            <summary>
            Gets or sets a value indicating whether this instance is diagonal line from bottom left to right top
            </summary>
            <value>
                <c>true</c> if this instance is diagonal up line; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IExtFormat.FillPattern">
            <summary>
            Sets the fill pattern of the row.
            </summary>
            <value>The fill pattern.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IExtFormat.FillPatternBackColor">
            <summary>
            Sets the background color for a fill pattern of the row.
            </summary>
            <value>The background color for a fill pattern.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IExtFormat.FillPatternForeColor">
            <summary>
            Sets the foreground color for a fill pattern of the row.
            </summary>
            <value>The foreground color for a fill pattern.</value>
        </member>
        <member name="T:Bytescout.Spreadsheet.COM.IFontFormat">
            <summary>
            Font format interface
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IFontFormat.Font">
            <summary>
            Sets the font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IFontFormat.SetFontProperties(System.String,System.Boolean,System.Boolean,System.Boolean,System.Single,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the font properties.
            </summary>
            <param name="FontName">Name of the font.</param>
            <param name="IsBold">if set to <c>true</c> [is bold].</param>
            <param name="IsItalic">if set to <c>true</c> [is italic].</param>
            <param name="IsUnderline">if set to <c>true</c> [is underline].</param>
            <param name="Size">The size.</param>
            <param name="R">The red component value for the new color of the font.</param>
            <param name="G">The green component value for the new color of the font.</param>
            <param name="B">The blue component value for the new color of the font.</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IFontFormat.FontColor">
            <summary>
            Sets the color of the font.
            </summary>
            <value>The color of the font.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IFontFormat.SetFontColorRGB(System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the color of the font from the specified 8-bit color values (red, green, and blue).
            </summary>
            <param name="r">The red component value for the new color of the font.</param>
            <param name="g">The green component value for the new color of the font.</param>
            <param name="b">The blue component value for the new color of the font.</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IFontFormat.FontColorIndex">
            <summary>
            Gets or sets the index of the font color.
            </summary>
            <value>The index of the font color.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IFontFormat.FontEscapement">
            <summary>
            Gets or sets the font escapement.
            </summary>
            <value>The font escapement.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IFontFormat.FontUnderline">
            <summary>
            Sets the font underline style.
            </summary>
            <value>The font underline style.</value>
        </member>
        <member name="T:Bytescout.Spreadsheet.COM.IRange">
            <summary>
            Range interface
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRange.Value">
            <summary>
            Sets the value of range.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRange.ValueAsHTML">
            <summary>
            Sets the formatted text (Rich-Text) in HTML coded format
            </summary>
            <value>The like html presentation of formatted text.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRange.Formula">
            <summary>
            Sets the formula for the range.
            </summary>
            <value>The formula.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRange.TopRowIndex">
            <summary>
            Index of the top row of the range.
            </summary>
            <value>Top row index.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRange.BottomRowIndex">
            <summary>
            Index of the bottom row of the range.
            </summary>
            <value>Bottom row index.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRange.LeftColumnIndex">
            <summary>
            Index of the left column of the range.
            </summary>
            <value>Left column index.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRange.RightColumnIndex">
            <summary>
            Index of the right column of the range.
            </summary>
            <value>Right column index.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IRange.CopyInto(System.Int32,System.Int32)">
            <summary>
            Makes a copy and paste of the current range into the position referenced by (row, col) cell
            </summary>
            <param name="row">The top row of destination range.</param>
            <param name="col">The left col of destination range.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IRange.CopyInto(System.String)">
            <summary>
            Makes copy and paste of the current range into position referenced by A1-style cell name
            </summary>
            <param name="A1Ref">The A1-style top left cell reference of the destination range (to paste into).</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRange.IsNotEmptyCells">
            <summary>
            Gets a bool value indicating that the range contains only empty cells or not
            </summary>
            <value>
                <c>true</c> if this range contains not empty cells; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRange.NumberFormatString">
            <summary>
            Sets the number format string.
            </summary>
            <value>The number format string.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRange.ValueDataTypeByNumberFormatString">
            <summary>
            Sets the type (<see cref="P:Bytescout.Spreadsheet.COM.IRange.ValueDataTypeByNumberFormatString" />) of the number format. 
            </summary>
            <value>The type of the number format.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IRange.Calculate">
            <summary>
            Calculates the formulas in the Range.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRange.Font">
            <summary>
            Sets the font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRange.FontColor">
            <summary>
            Sets the color of the font.
            </summary>
            <value>The color of the font.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRange.FontEscapement">
            <summary>
            Sets the font escapement.
            </summary>
            <value>The font escapement.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRange.FontUnderline">
            <summary>
            Sets the font underline style.
            </summary>
            <value>The font underline style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRange.CellFormat">
            <summary>
            Sets the cell format.
            </summary>
            <value>The cell format.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRange.Locked">
            <summary>
            Sets a value indicating whether this <see cref="T:Bytescout.Spreadsheet.COM.IRange" /> is locked.
            </summary>
            <value>
                <c>true</c> if locked; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRange.HiddenFormula">
            <summary>
            Gets or sets a value indicating whether formula is hidden.
            </summary>
            <value>
                <c>true</c> if formula is hidden; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRange.AlignmentHorizontal">
            <summary>
            Sets the horizontal text alignment style of the row.
            </summary>
            <value>The horizontal text alignment style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRange.AlignmentVertical">
            <summary>
            Sets the vertical text alignment style of the row.
            </summary>
            <value>The vertical text alignment style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRange.Wrap">
            <summary>
            Sets a value indicating whether a text is wrapped.
            </summary>
            <value>
                <c>true</c> if a text is wrapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRange.ShrinkToFit">
            <summary>
            Gets or sets a value indicating shrink content to fit into cell.
            </summary>
            <value>
                <c>true</c> if shrink to fit; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRange.Rotation">
            <summary>
            Sets the text rotation angle for the row.
            </summary>
            <value>The rotation angle.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRange.Indent">
            <summary>
            Gets or sets the Indent value for the cell.
            </summary>
            <value>The rotation angle.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRange.TextDirection">
            <summary>
            Gets or sets the reading order.
            </summary>
            <value>Reading order.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRange.LeftBorderStyle">
            <summary>
            Sets the left border style.
            </summary>
            <value>The left border style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRange.RightBorderStyle">
            <summary>
            Sets the right border style.
            </summary>
            <value>The right border style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRange.TopBorderStyle">
            <summary>
            Sets the top border style.
            </summary>
            <value>The top border style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRange.BottomBorderStyle">
            <summary>
            Sets the bottom border style.
            </summary>
            <value>The bottom border style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRange.DiagonalBorderStyle">
            <summary>
            Gets or sets the diagonal border style.
            </summary>
            <value>The diagonal border style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRange.LeftBorderColor">
            <summary>
            Sets the color of the left border.
            </summary>
            <value>The color of the left border.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRange.RightBorderColor">
            <summary>
            Sets the color of the right border.
            </summary>
            <value>The color of the right border.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRange.TopBorderColor">
            <summary>
            Sets the color of the top border.
            </summary>
            <value>The color of the top border.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRange.BottomBorderColor">
            <summary>
            Sets the color of the bottom border.
            </summary>
            <value>The color of the bottom border.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRange.DiagonalBorderColor">
            <summary>
            Gets or sets the color of the diagonal border.
            </summary>
            <value>The color of the diagonal border.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRange.IsDiagonalDownLine">
            <summary>
            Sets a value indicating whether this instance is diagonal down line.
            </summary>
            <value>
                <c>true</c> if this instance is diagonal down line; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRange.IsDiagonalUpLine">
            <summary>
            Sets a value indicating whether this instance is diagonal up line.
            </summary>
            <value>
                <c>true</c> if this instance is diagonal up line; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRange.FillPattern">
            <summary>
            Sets the fill pattern of the row.
            </summary>
            <value>The fill pattern.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRange.FillPatternBackColor">
            <summary>
            Sets the background color for a fill pattern of the row.
            </summary>
            <value>The background color for a fill pattern.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRange.FillPatternForeColor">
            <summary>
            Sets the foreground color for a fill pattern of the row.
            </summary>
            <value>The foreground color for a fill pattern.</value>
        </member>
        <member name="T:Bytescout.Spreadsheet.COM.IRow">
            <summary>
            Row interface
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRow.Height">
            <summary>
            Gets or sets the height of row.
            </summary>
            <value>The height of row, in pixel.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRow.UseStandardHeight">
            <summary>
            Gets or sets a value indicating that row height equals the standard height of the sheet.
            </summary>
            <value>
                <c>true</c> if the row height equals the standard height of the sheet; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRow.Hidden">
            <summary>
            Gets or sets indicating that the row is hidden.
            </summary>
            <value>
                <c>true</c> if this row is hidden; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IRow.AutoFit">
            <summary>
            AutoFit of row height.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRow.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Bytescout.Spreadsheet.Cell" /> at the specified Index.
            </summary>
            <value></value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRow.ColumnMin">
            <summary>
            Gets the index of the first column that contains a cell populated with data or formatting in the row. 
            </summary>
            <value>The index of the column.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRow.ColumnMax">
            <summary>
            Gets the index of the last column that contains a cell populated with data or formatting in the row. 
            </summary>
            <value>The index of the column.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRow.IsFormatted">
            <summary>
            Gets a bool value indicating that the row is formatted differently from the default format.
            </summary>
            <value>
                <c>true</c> if this row has non default format; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRow.IsNotEmptyCells">
            <summary>
            Indicates if the row contains non empty cells
            </summary>
            <value>
                <c>true</c> if this row contains non empty cells; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IRow.InsertCell(System.Int32,System.Int32)">
            <summary>
            Inserts the cells.
            </summary>
            <param name="Index">The index at which cell should be inserted.</param>
            <param name="CellCount">The cell count.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IRow.DeleteCell(System.Int32,System.Int32)">
            <summary>
            Deletes the cells.
            </summary>
            <param name="First">The index first cell.</param>
            <param name="Last">The index last cell.</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRow.NumberFormat">
            <summary>
            Gets or sets the number format string.
            </summary>
            <value>The number format string.</value>
        </member>
        <member name="T:Bytescout.Spreadsheet.COM.IRows">
            <summary>
            IRows interface for managing Rows collection
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRows.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Bytescout.Spreadsheet.Row" /> with the specified Index.
            </summary>
            <value></value>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IRows.Insert(System.Int32,System.Int32)">
            <summary>
            Inserts the specified RowCount Row into the List at the specified Index.
            </summary>
            <param name="Index">The index at which Row should be inserted.</param>
            <param name="RowCount">The row count.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IRows.Insert(System.Int32)">
            <summary>
            Inserts the Row into the List at the specified Index.
            </summary>
            <param name="Index">The index at which Row should be inserted.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IRows.Delete(System.Int32,System.Int32)">
            <summary>
            Deletes rows from First to Last indexes.
            </summary>
            <param name="First">The index first row.</param>
            <param name="Last">The index last row.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IRows.Delete(System.Int32)">
            <summary>
            Deletes the row.
            </summary>
            <param name="Index">The row index.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IRows.CopyAndPaste(System.Int32,System.Int32,System.Int32)">
            <summary>
            Makes a copy and paste of the rows selection specified by First and Last rows indexes into new position (specified by Dest row index)
            </summary>
            <param name="First">The index of first row for copy.</param>
            <param name="Last">The index of last row for copy.</param>
            <param name="Dest">The index destination row.</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRows.FirstFormatedRow">
            <summary>
            Gets the number of first formated row.
            </summary>
            <value>The number of first formated row.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IRows.LastFormatedRow">
            <summary>
            Gets the number of last formated row.
            </summary>
            <value>The number of last formated row.</value>
        </member>
        <member name="T:Bytescout.Spreadsheet.COM.ISpreadsheet">
            <summary>
            Spreadsheet document interface
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.LoadFromFile(System.String)">
            <summary>
            Load data from file.
            </summary>
            <param name="FileName">Name of the file.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.LoadFromFile(System.String,System.String)">
            <summary>
            Load data from file.
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="Delimiter">Delimiter for text files.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.LoadFromFile(System.String,Bytescout.Spreadsheet.CacheType)">
            <summary>
            Load data from file.
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="Cache">Type of the cache.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.LoadFromFile(System.String,Bytescout.Spreadsheet.CacheType,System.String)">
            <summary>
            Load data from file.
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="Cache">Type of the cache.</param>
            <param name="Delimiter">Delimiter for text files.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.LoadFromFile(System.String,System.String,System.Text.Encoding)">
            <summary>
            Load data from file.
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="Delimiter">Delimiter for text files.</param>
            <param name="Encoding">The character encoding for text files.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.LoadFromFile(System.String,Bytescout.Spreadsheet.CacheType,System.String,System.Text.Encoding)">
            <summary>
            Load data from file.
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="Cache">Type of the cache.</param>
            <param name="Delimiter">Delimiter for text files.</param>
            <param name="Encoding">The character encoding for text files.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.LoadFromFile(System.String,Bytescout.Spreadsheet.CacheType,System.String,System.Text.Encoding,System.String)">
            <summary>
            Load data from file.
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="Cache">Type of the cache.</param>
            <param name="Delimiter">Delimiter for text files.</param>
            <param name="Encoding">The character encoding for text files.</param>
            <param name="Password">The password.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.LoadFromStream(System.IO.Stream)">
            <summary>
            Load data from stream.
            </summary>
            <param name="AStream">The stream.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.LoadFromStream(System.IO.Stream,Bytescout.Spreadsheet.CacheType)">
            <summary>
            Load data from stream.
            </summary>
            <param name="AStream">The stream.</param>
            <param name="Cache">Type of the cache.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.LoadFromStream(System.IO.Stream,Bytescout.Spreadsheet.CacheType,System.String)">
            <summary>
            Load data from stream.
            </summary>
            <param name="AStream">The stream.</param>
            <param name="Cache">Type of the cache.</param>
            <param name="Password">The password.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.LoadFromStream(System.IO.Stream,Bytescout.Spreadsheet.Constants.SpreadsheetFormatType)">
            <summary>
            Load data from stream.
            </summary>
            <param name="AStream">The stream.</param>
            <param name="SType">Type of the stream.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.LoadFromStream(System.IO.Stream,Bytescout.Spreadsheet.Constants.SpreadsheetFormatType,Bytescout.Spreadsheet.CacheType)">
            <summary>
            Load data from stream.
            </summary>
            <param name="AStream">The stream.</param>
            <param name="SType">Type of the stream.</param>
            <param name="Cache">Type of the cache.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.LoadFromStream(System.IO.Stream,Bytescout.Spreadsheet.Constants.SpreadsheetFormatType,System.String,System.Text.Encoding)">
            <summary>
            Load data from stream.
            </summary>
            <param name="AStream">The stream.</param>
            <param name="SType">Type of the stream.</param>
            <param name="Delimiter">Delimiter for text files.</param>
            <param name="Encoding">The character encoding for text files.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.LoadFromStream(System.IO.Stream,Bytescout.Spreadsheet.Constants.SpreadsheetFormatType,Bytescout.Spreadsheet.CacheType,System.String,System.Text.Encoding)">
            <summary>
            Load data from stream.
            </summary>
            <param name="AStream">The stream.</param>
            <param name="SType">Type of the stream.</param>
            <param name="Cache">Type of the cache.</param>
            <param name="Delimiter">Delimiter for text files.</param>
            <param name="Encoding">The character encoding for text files.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.LoadFromStream(System.IO.Stream,Bytescout.Spreadsheet.Constants.SpreadsheetFormatType,Bytescout.Spreadsheet.CacheType,System.String,System.Text.Encoding,System.String)">
            <summary>
            Load data from stream.
            </summary>
            <param name="AStream">The stream.</param>
            <param name="SType">Type of the stream.</param>
            <param name="Cache">Type of the cache.</param>
            <param name="Delimiter">Delimiter for text files.</param>
            <param name="Encoding">The character encoding for text files.</param>
            <param name="Password">The password.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.SaveAsXML(System.String,System.Int32)">
            <summary>
            Saves data in XML file with specified name
            </summary>
            <param name="FileName">Name of the file to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.SaveAsXML(System.String,System.Int32,System.Text.Encoding)">
            <summary>
            Saves data in XML file with specified name
            </summary>
            <param name="FileName">Name of the file to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
            <param name="encoding">The character encoding.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.SaveAsTXT(System.String,System.Int32)">
            <summary>
            Saves data in TXT tab delimited file with specified name
            </summary>
            <param name="FileName">Name of the file to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.SaveAsTXT(System.String,System.Int32,System.String)">
            <summary>
            Saves data in TXT tab delimited file with specified name
            </summary>
            <param name="FileName">Name of the file to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
            <param name="Delimiter">Delimiter string.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.SaveAsTXT(System.String,System.Int32,System.String,System.String)">
            <summary>
            Saves data in TXT tab delimited file with specified name
            </summary>
            <param name="FileName">Name of the file to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
            <param name="Delimiter">Delimiter string.</param>
            <param name="QuoteSymbol">The quotation symbol.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.SaveAsTXT(System.String,System.Int32,System.String,System.String,System.Text.Encoding)">
            <summary>
            Saves data in TXT tab delimited file with specified name
            </summary>
            <param name="FileName">Name of the file to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
            <param name="Delimiter">Delimiter string.</param>
            <param name="QuoteSymbol">The quotation symbol.</param>
            <param name="encoding">The character encoding.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.SaveAsCSV(System.String,System.Int32)">
            <summary>
            Saves data in CSV file with specified name
            </summary>
            <param name="FileName">Name of the file to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.SaveAsCSV(System.String,System.Int32,System.String)">
            <summary>
            Saves data in CSV file with specified name
            </summary>
            <param name="FileName">Name of the file to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
            <param name="Delimiter">Delimiter string.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.SaveAsCSV(System.String,System.Int32,System.String,System.String)">
            <summary>
            Saves data in CSV file with specified name
            </summary>
            <param name="FileName">Name of the file to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
            <param name="Delimiter">Delimiter string.</param>
            <param name="Quote">Quotation symbol.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.SaveAsCSV(System.String,System.Int32,System.String,System.String,System.Text.Encoding)">
            <summary>
            Saves data in CSV file with specified name
            </summary>
            <param name="FileName">Name of the file to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
            <param name="Delimiter">Delimiter string.</param>
            <param name="Quote">Quotation symbol.</param>
            <param name="encoding">The character encoding.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.SaveAsXLS(System.String)">
            <summary>
            Saves data in XLS file FileName
            </summary>
            <param name="FileName">Name of the file.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.SaveAsXLSX(System.String)">
            <summary>
            Saves data in XLSX file FileName
            </summary>
            <param name="FileName">Name of the file.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.SaveAsXLSX(System.String,System.String)">
            <summary>
            Saves data in XLSX format to a file with specified name
            </summary>
            <param name="FileName">Name of the file to save to.</param>
            <param name="Password">The password.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.SaveAs(System.String)">
            <summary>
            Saves data in XLS or XLSX file FileName
            </summary>
            <param name="FileName">Name of the file.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.SaveAs(System.String,Bytescout.Spreadsheet.Constants.SpreadsheetFormatType)">
            <summary>
            Saves data in XLS or XLSX file FileName
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="SType">The format in which save a file.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.SaveToStreamXLS(System.IO.Stream)">
            <summary>
            Saves data in XLS format to a given stream
            </summary>
            <param name="AStream">Stream to save to.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.SaveToStreamXLSX(System.IO.Stream)">
            <summary>
            Saves data in XLSX format to a given stream
            </summary>
            <param name="stream">Stream to save to.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.SaveToStreamXLSX(System.IO.Stream,System.String)">
            <summary>
            Saves data in XLSX format to a given stream
            </summary>
            <param name="stream">Stream to save to.</param>
            <param name="Password">The password.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.SaveToStreamXML(System.IO.Stream,System.Int32)">
            <summary>
            Saves data in XML format to a given stream
            </summary>
            <param name="SheetIndex">Index of worksheet.</param>
            <param name="AStream">Stream to save to.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.SaveToStreamXML(System.IO.Stream,System.Int32,System.Text.Encoding)">
            <summary>
            Saves data in XML format to a given stream
            </summary>
            <param name="SheetIndex">Index of worksheet.</param>
            <param name="AStream">Stream to save to.</param>
            <param name="encoding">The character encoding.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.SaveToStreamCSV(System.IO.Stream,System.Int32)">
            <summary>
            Saves data in CSV format to a given stream
            </summary>
            <param name="AStream">Stream to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.SaveToStreamCSV(System.IO.Stream,System.Int32,System.String)">
            <summary>
            Saves data in CSV format to a given stream
            </summary>
            <param name="AStream">Stream to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
            <param name="Delimiter">Delimiter string.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.SaveToStreamCSV(System.IO.Stream,System.Int32,System.String,System.String)">
            <summary>
            Saves data in CSV format to a given stream
            </summary>
            <param name="AStream">Stream to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
            <param name="Delimiter">Delimiter string.</param>
            <param name="Quote">Quotation symbol.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.SaveToStreamCSV(System.IO.Stream,System.Int32,System.String,System.String,System.Text.Encoding)">
            <summary>
            Saves data in CSV format to a given stream
            </summary>
            <param name="AStream">Stream to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
            <param name="Delimiter">Delimiter string.</param>
            <param name="Quote">Quotation symbol.</param>
            <param name="encoding">The character encoding.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.SaveToStreamHTML(System.IO.Stream)">
            <summary>
            Saves first worksheet of spreadsheet as HTML document to a given stream.
            </summary>
            <param name="stream">The stream to save to.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.SaveToStreamHTML(System.IO.Stream,System.Int32)">
            <summary>
            Saves a worksheet of spreadsheet as HTML document to a given stream.
            </summary>
            <param name="stream">The stream to save to.</param>
            <param name="sheet">The worksheet to save.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.SaveToStreamTXT(System.IO.Stream,System.Int32)">
            <summary>
            Saves data in TXT format to a given stream
            </summary>
            <param name="AStream">Stream to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.SaveToStreamTXT(System.IO.Stream,System.Int32,System.String)">
            <summary>
            Saves data in TXT format to a given stream
            </summary>
            <param name="AStream">Stream to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
            <param name="Delimiter">Delimiter character.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.SaveToStreamTXT(System.IO.Stream,System.Int32,System.String,System.String)">
            <summary>
            Saves data in TXT format to a given stream
            </summary>
            <param name="AStream">Stream to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
            <param name="Delimiter">Delimiter character.</param>
            <param name="QuoteSymbol">The quotation symbol.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.SaveToStreamTXT(System.IO.Stream,System.Int32,System.String,System.String,System.Text.Encoding)">
            <summary>
            Saves data in TXT format to a given stream
            </summary>
            <param name="AStream">Stream to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
            <param name="Delimiter">Delimiter character.</param>
            <param name="QuoteSymbol">The quotation symbol.</param>
            <param name="encoding">The character encoding.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.SaveToStream(System.IO.Stream)">
            <summary>
            Saves data in XLS format to a given stream
            </summary>
            <param name="AStream">Stream to save to.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.SaveToStream(System.IO.Stream,Bytescout.Spreadsheet.Constants.SpreadsheetFormatType)">
            <summary>
            Saves data in XLS or XLSX format to a given stream
            </summary>
            <param name="AStream">Stream to save to.</param>
            <param name="SType">The format in which saves data.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.SaveAsHTML(System.String)">
            <summary>
            Saves spreadsheet in a HTML format file. 
            The second and subsequent worksheets of the spreadsheet will be saved 
            in separate files with auto-generated names.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns>List of generated HTML files.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.SaveAsHTML(System.String,System.Boolean)">
            <summary>
            Saves spreadsheet in a HTML format file. 
            The second and subsequent worksheets of the spreadsheet will be saved 
            in separate files with auto-generated names.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="createNavigationLinks">If true, the method will create links for navigation between generated HTML files.</param>
            <returns>List of generated HTML files.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.SaveAsPDF(System.String)">
            <summary>
            Saves spreadsheet to PDF file with specified name.
            </summary>
            <param name="FileName">Name of the file to save to.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.SaveAsPDF(System.String,System.Boolean)">
            <summary>
             Saves spreadsheet to PDF file with specified name.
             </summary>
            <param name="FileName">Name of the file to save to.</param>
            <param name="autoSize">Automatic document sizing. If <c>false</c>, the page size will be taken from worksheet page setup.</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISpreadsheet.Workbook">
            <summary>
            Gets or sets the Workbook.
            </summary>
            <value>The WorkBook.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISpreadsheet.Worksheets">
            <summary>
            Gets worksheets collection
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.Worksheet(System.Int32)">
            <summary>
            Return Worksheet the specified index.
            </summary>
            <param name="Index">The index.</param>
            <returns></returns>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISpreadsheet.SearchOptions">
            <summary>
            Gets the search options.
            </summary>
            <value>The search options.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISpreadsheet.Options">
            <summary>
            Gets the options.
            </summary>
            <value>The options.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISpreadsheet.RegistrationKey">
            <summary>
            Sets the name of the registration.
            </summary>
            <value>The name of the registration.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.ISpreadsheet.RegistrationName">
            <summary>
            Sets the registration key.
            </summary>
            <value>The registration key.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.GetAsBytesArray(Bytescout.Spreadsheet.Constants.SpreadsheetFormatType)">
            <summary>
            Gets the bytes of spreadsheet saved as document with specified type.
            </summary>
            <param name="type">The type to use while retrieving bytes.</param>
            <returns>The bytes of spreadsheet saved as document with specified type.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.GetAsBytesArrayXLS">
            <summary>
            Gets the bytes of spreadsheet saved as XLS document.
            </summary>
            <returns>The bytes of spreadsheet saved as XLS document.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.GetAsBytesArrayXLSX">
            <summary>
            Gets the bytes of spreadsheet saved as XLSX document.
            </summary>
            <returns>The bytes of spreadsheet saved as XLSX document.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.GetAsBytesArrayCSV">
            <summary>
            Gets the bytes of spreadsheet saved as CSV document.
            </summary>
            <returns>The bytes of spreadsheet saved as CSV document.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.GetAsBytesArrayTXT">
            <summary>
            Gets the bytes of spreadsheet saved as text document.
            </summary>
            <returns>The bytes of spreadsheet saved as text document.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.GetAsBytesArrayXML">
            <summary>
            Gets the bytes of spreadsheet saved as XML document.
            </summary>
            <returns>The bytes of spreadsheet saved as XML document.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.GetAsBytesArrayHTML">
            <summary>
            Gets the bytes of spreadsheet saved as HTML document.
            </summary>
            <returns>The bytes of spreadsheet saved as HTML document.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.GetAsBytesArrayHTML(System.Int32)">
            <summary>
            Gets the bytes of specified worksheet page saved as HTML document.
            </summary>
            <param name="worksheetIndex">Worksheet index.</param>
            <returns>The bytes of specified worksheet page saved as HTML document.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.ImportFromList(System.Collections.IList)">
            <summary>
            Import from IList of rows. Each row will contain IList of columns.
            </summary>
            <param name="list">List of rows. Each row should contain an IList of columns</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.ImportFromList(System.Collections.IList,System.Int32)">
            <summary>
            Import from IList of rows to the specified worksheet
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.ImportFromList(System.Collections.IList,System.String)">
            <summary>
            Import from IList of rows to the specified worksheet
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.ExportToList(System.Collections.IList)">
            <summary>
            Export rows to provided IList. Each row is String[] array of column values.
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.ExportToList(System.Collections.IList,System.String)">
            <summary>
            Export the named worksheet to the list
            </summary>
            <param name="list">List must be a 2 dimensional string array</param>
            <param name="worksheetName">Name of worksheet to export</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.ExportToList(System.Collections.IList,System.Int32)">
            <summary>
            Export the worksheet specified by index to the list
            </summary>
            <param name="list">List must be a 2 dimensional string array</param>
            <param name="worksheetIndex">Index of worksheet to export</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.ImportFrom2DArray(System.String[0:,0:])">
            <summary>
            Import from two-dimensional array. 
            </summary>
            <param name="array"></param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.ImportFrom2DArray(System.String[0:,0:],System.Int32)">
            <summary>
            Import from two-dimensional array to the specified worksheet
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.ImportFrom2DArray(System.String[0:,0:],System.String)">
            <summary>
            Import from two-dimensional array to the specified worksheet
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.ExportTo2DArray">
            <summary>
            Return spreadsheet rows and columns as two-dimensional array; 
            </summary>
            <returns>Two dimensional array</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.ExportTo2DArray(System.String)">
            <summary>
            Return spreadsheet rows and columns as two-dimensional array; 
            </summary>
            <param name="worksheetName">Name of worksheet to export</param>
            <returns>Two dimensional array</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.ExportTo2DArray(System.Int32)">
            <summary>
            Return spreadsheet rows and columns as two-dimensional array; 
            </summary>
            <param name="worksheetIndex">Index of worksheet to export</param>
            <returns>Two dimensional array</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.ImportFromDataTable(System.Data.DataTable)">
            <summary>
            Import rows and columns from DataTable to first worksheet.
            </summary>
            <param name="dataTable"></param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.ImportFromDataTable(System.Data.DataTable,System.String)">
            <summary>
            Import rows and columns from DataTable to specified worksheet.
            </summary>
            <param name="dataTable"></param>
            <param name="worksheetName"></param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.ImportFromDataTable(System.Data.DataTable,System.Int32)">
            <summary>
            Import rows and columns from DataTable to specified worksheet.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.ExportToDataTable">
            <summary>
            Return new DataTable object filled from first worksheet.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.ExportToDataTable(System.Int32)">
            <summary>
            Return new DataTable object filled from specified worksheet.
            </summary>
            <param name="worksheetIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.ExportToDataTable(System.Int32,System.Boolean)">
            <summary>
            Return new DataTable object filled from specified worksheet.
            </summary>
            <param name="worksheetIndex"></param>
            <param name="FirstRowAsHeader">if set to <c>true</c> use data from first row as columns header].</param>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.ExportToDataTable(System.String)">
            <summary>
            Return new DataTable object filled from specified worksheet.
            </summary>
            <param name="worksheetName">Name of worksheet to export</param>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.ExportToDataTable(System.String,System.Boolean)">
            <summary>
            Return new DataTable object filled from specified worksheet.
            </summary>
            <param name="worksheetName">Name of worksheet to export</param>
            <param name="FirstRowAsHeader">if set to <c>true</c> use data from first row as columns header].</param>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.ImportFromDataSet(System.Data.DataSet)">
            <summary>
            Import from DataSet. Create a worksheet for every DataTable in DataSet.
            </summary>
            <param name="dataSet"></param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.ExportToDataSet(System.Data.DataSet)">
            <summary>
            Fill provided DataSet with DataTables created from spreadsheet's worksheets.
            </summary>
            <param name="dataSet"></param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.ExportToDataSet(System.Data.DataSet,System.Boolean)">
            <summary>
            Fill provided DataSet with DataTables created from spreadsheet's worksheets.
            </summary>
            <param name="dataSet"></param>
            <param name="FirstRowAsHeader">if set to <c>true</c> use data from first row as columns header].</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.ExportToDataSet">
            <summary>
            Return new DataSet filled from spreadsheet. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.ImportFromJSON(System.String)">
            <summary>
            Fills the spreadsheet with rows and columns from JSON data string.
            </summary>
            <param name="jsonString">String containing JSON data.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.ISpreadsheet.ExportToJSON(System.Int32)">
            <summary>
            Return JSON data filled from spreadsheet. 
            </summary>
            <param name="worksheetIndex">Index of worksheet to export to JSON.</param>
            <returns>String containing JSON data.</returns>
        </member>
        <member name="T:Bytescout.Spreadsheet.COM.IWorkbook">
            <summary>
            Workbook interface
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IWorkbook.Worksheets">
            <summary>
            Gets the worksheets.
            </summary>
            <value>The worksheets.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IWorkbook.DefaultFont">
            <summary>
            Gets or sets the workbook default font.
            </summary>
            <value>The default font.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IWorkbook.Locale">
            <summary>
            Gets or sets the CultureInfo using in Workbook. This property should be used to set the locale (regional) settings for use in the new workbook (number, currency, time, date formatting). When you load existing spreadsheet then the SDK tries to use the saved locale settings for this file disregarding current Windows regional and language settings. When new workbook is created then the current Windows locale is used by default
            </summary>
            <value>The locale.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IWorkbook.AddInFunctionsNamesLocale">
            <summary>
            Gets or sets the add in functions names locale.
            </summary>
            <value>The add in functions names locale.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IWorkbook.RangeSelectionMethod">
            <summary>
            Gets or sets the range selection method.
            </summary>
            <value>The range selection method.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IWorkbook.ExternalReferenceUpdate">
            <summary>
            Gets or sets a value indicating whether external reference should be updated or not.
            </summary>
            <value>
                <c>true</c> if external reference update; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IWorkbook.AutoCalculation">
            <summary>
            Gets or sets a value indicating if formula should be re-calculated automatically on change of cells value.
            </summary>
            <value>
                <c>true</c> if calculate formulas automatically; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IWorkbook.Colors">
            <summary>
            Gets the colors in the user-defined palette. The palette has 56 entries.
            </summary>
            <value>The colors.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorkbook.Calculate">
            <summary>
            Calculates the all formulas in the Workbook.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IWorkbook.DocumentProperties">
            <summary>
            Document Properties
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IWorkbook.Names">
            <summary>
            Gets collection of the <see cref="T:Bytescout.Spreadsheet.DefinedName" /> objects.
            </summary>
            <value>The names.</value>
        </member>
        <member name="T:Bytescout.Spreadsheet.COM.IWorksheet">
            <summary>
            Worksheet interface
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IWorksheet.Name">
            <summary>
            Gets or sets Worksheet name
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IWorksheet.Active">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Bytescout.Spreadsheet.Worksheet" /> is active.
            </summary>
            <value>
                <c>true</c> if active; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IWorksheet.Protected">
            <summary>
            Gets a value indicating whether this <see cref="T:Bytescout.Spreadsheet.Worksheet" /> is protected against modification.
            </summary>
            <value>
                <c>true</c> if protected; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.Protect(System.String)">
            <summary>
            Protects this <see cref="T:Bytescout.Spreadsheet.Worksheet" /> with the password specified.
            </summary>
            <param name="Password">The password.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.Protect(System.String,Bytescout.Spreadsheet.Constants.EnhancedSheetProtection)">
            <summary>
            Protects this <see cref="T:Bytescout.Spreadsheet.Worksheet" /> with specified password and options.
            </summary>
            <param name="Password">The password.</param>
            <param name="Options">The <see cref="T:Bytescout.Spreadsheet.Constants.EnhancedSheetProtection" /> options.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.UnProtect(System.String)">
            <summary>
            UnProtects this <see cref="T:Bytescout.Spreadsheet.Worksheet" /> with the password.
            </summary>
            <param name="Password">The password.</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IWorksheet.ProtectionOptions">
            <summary>
            Gets the option flags for sheet protection.
            </summary>
            <value>The <see cref="T:Bytescout.Spreadsheet.Constants.EnhancedSheetProtection" /> options.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IWorksheet.DefaultColumnWidth">
            <summary>
            Gets or sets the default width of the column in 1/256 of the width of the zero character, using default font.
            </summary>
            <value>The width of the default column.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IWorksheet.IsEmpty">
            <summary>
            Gets a value indicating whether worksheet is empty.
            </summary>
            <value>
                <c>true</c> if this worksheet is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IWorksheet.UsedRangeRowMin">
            <summary>
            Gets the first used row.
            </summary>
            <value>The first used row.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IWorksheet.UsedRangeRowMax">
            <summary>
            Gets the last used row.
            </summary>
            <value>The last used row.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IWorksheet.UsedRangeColumnMin">
            <summary>
            Gets the first used column.
            </summary>
            <value>The first used column.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IWorksheet.UsedRangeColumnMax">
            <summary>
            Gets the last used column.
            </summary>
            <value>The last used column.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IWorksheet.NotEmptyRowMin">
            <summary>
            Gets the first row contains not empty cell.
            </summary>
            <value>The first not empty row.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IWorksheet.NotEmptyRowMax">
            <summary>
            Gets the last row contains not empty cell.
            </summary>
            <value>The last not empty row.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IWorksheet.NotEmptyColumnMin">
            <summary>
            Gets the first column contains not empty cell.
            </summary>
            <value>The first not empty column.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IWorksheet.NotEmptyColumnMax">
            <summary>
            Gets the last column contains not empty cell.
            </summary>
            <value>The last not empty column.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IWorksheet.Rows">
            <summary>
            Gets the list of rows.
            </summary>
            <value>The list of rows.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IWorksheet.Columns">
            <summary>
            Gets the list of columns.
            </summary>
            <value>The list of columns.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IWorksheet.Item(System.Int32,System.Int32)">
            <summary>
            Gets the <see cref="T:Bytescout.Spreadsheet.Cell" /> with the specified row and col.
            </summary>
            <value></value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IWorksheet.Item(System.String)">
            <summary>
            Gets the <see cref="T:Bytescout.Spreadsheet.Cell" /> with the specified by A1-style reference.
            </summary>
            <value></value>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.Cell(System.Int32,System.Int32)">
            <summary>
            Return cell the specified i and j.
            </summary>
            <param name="row">The index of row.</param>
            <param name="col">The index of column.</param>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.Cell(System.String)">
            <summary>
            Return cell the specified by A1-style reference.
            </summary>
            <param name="A1Ref">The A1-style reference.</param>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.Range(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Return cell range specified by (row1, col1) - top-left cell and (row2, col1) - bottom-right cell
            </summary>
            <param name="row1">The upper row of the range.</param>
            <param name="col1">The left col of the range.</param>
            <param name="row2">The lower row of the range.</param>
            <param name="col2">The right col of the range.</param>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.Range(System.String)">
            <summary>
            Return cell range the specified by A1-style reference.
            </summary>
            <param name="A1Ref">The A1-style reference.</param>
            <returns></returns>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IWorksheet.ViewOptions">
            <summary>
            Gets the view optionsfor the worksheet.
            </summary>
            <value>The view options.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IWorksheet.Hyperlinks">
            <summary>
            Returns a <see cref="T:Bytescout.Spreadsheet.HyperLinks" /> collection that represents the hyperlinks for the worksheet.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.SaveAsTXT(System.IO.Stream)">
            <summary>
            Saves worksheet in a tab-delimited text file
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.SaveAsTXT(System.IO.Stream,System.String)">
            <summary>
            Saves worksheet in a text format
            </summary>
            <param name="stream">The stream.</param>
            <param name="Delimiter">Delimiter of values.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.SaveAsTXT(System.IO.Stream,System.String,System.String)">
            <summary>
            Saves worksheet in a text format.
            </summary>
            <param name="stream">The stream.</param>
            <param name="Delimiter">The delimiter symbol.</param>
            <param name="QuoteSymbol">The quotation symbol.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.SaveAsTXT(System.IO.Stream,System.String,System.String,System.Text.Encoding)">
            <summary>
            Saves worksheet in a text format.
            </summary>
            <param name="stream">The stream.</param>
            <param name="Delimiter">The delimiter symbol.</param>
            <param name="QuoteSymbol">The quotation symbol.</param>
            <param name="encoding">The character encoding.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.SaveAsTXT(System.IO.Stream,Bytescout.Spreadsheet.ConversionOptions)">
            <summary>
            Saves worksheet in a text format.
            </summary>
            <param name="stream">The stream.</param>
            <param name="options">The format options.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.SaveAsTXT(System.String)">
            <summary>
            Saves worksheet in a tab-delimited text file format
            </summary>
            <param name="FileName">Name of the file.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.SaveAsTXT(System.String,System.String)">
            <summary>
            Saves worksheet in a tab-delimited text file format
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="Delimiter">Delimiter of values.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.SaveAsTXT(System.String,System.String,System.String)">
            <summary>
            Saves worksheet in a text format.
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="Delimiter">The delimiter symbol.</param>
            <param name="QuoteSymbol">The quotation symbol.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.SaveAsTXT(System.String,System.String,System.String,System.Text.Encoding)">
            <summary>
            Saves worksheet in a text format.
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="Delimiter">The delimiter symbol.</param>
            <param name="QuoteSymbol">The quotation symbol.</param>
            <param name="encoding">The character encoding.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.SaveAsTXT(System.String,Bytescout.Spreadsheet.ConversionOptions)">
            <summary>
            Saves worksheet in a text format.
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="options">The format options.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.SaveAsCSV(System.IO.Stream)">
            <summary>
            Saves worksheet in a CSV format file
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.SaveAsCSV(System.IO.Stream,System.String)">
            <summary>
            Saves worksheet in a CSV format file
            </summary>
            <param name="stream">The stream.</param>
            <param name="Delimiter">Delimiter of values.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.SaveAsCSV(System.IO.Stream,System.String,System.String)">
            <summary>
            Saves worksheet in a CSV format file
            </summary>
            <param name="stream">The stream.</param>
            <param name="Delimiter">Delimiter symbol.</param>
            <param name="Quote">Quotation symbol.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.SaveAsCSV(System.IO.Stream,System.String,System.String,System.Text.Encoding)">
            <summary>
            Saves worksheet in a CSV format file
            </summary>
            <param name="stream">The stream.</param>
            <param name="Delimiter">Delimiter symbol.</param>
            <param name="Quote">Quotation symbol.</param>
            <param name="encoding">The character encoding.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.SaveAsCSV(System.IO.Stream,Bytescout.Spreadsheet.ConversionOptions)">
            <summary>
            Saves worksheet in a CSV format file
            </summary>
            <param name="stream">The stream.</param>
            <param name="options">The format options.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.SaveAsCSV(System.String)">
            <summary>
            Saves worksheet in a CSV format file
            </summary>
            <param name="FileName">Name of the file.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.SaveAsCSV(System.String,System.String)">
            <summary>
            Saves worksheet in a CSV format file
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="Delimiter">Delimiter of values.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.SaveAsCSV(System.String,System.String,System.String)">
            <summary>
            Saves worksheet in a CSV format file.
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="Delimiter">Delimiter symbol.</param>
            <param name="Quote">Quotation symbol.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.SaveAsCSV(System.String,System.String,System.String,System.Text.Encoding)">
            <summary>
            Saves worksheet in a CSV format file.
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="Delimiter">Delimiter symbol.</param>
            <param name="Quote">Quotation symbol.</param>
            <param name="encoding">The character encoding.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.SaveAsCSV(System.String,Bytescout.Spreadsheet.ConversionOptions)">
            <summary>
            Saves worksheet in a CSV format file.
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="options">The format options.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.SaveAsHTML(System.String)">
            <summary>
            Saves worksheet in a HTML format file
            </summary>
            <param name="FileName">filename of output HTML file.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.SaveAsHTML(System.IO.Stream)">
            <summary>
            Saves worksheet in a HTML format file
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.SaveAsHTML(System.IO.StreamWriter)">
            <summary>
            Saves worksheet in a HTML format file. Use this overload to specify the encoding for output HTML file. 
            Create StreamWriter instance with required encoding in constructor parameters.
            </summary>
            <param name="streamWriter">The stream.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.SaveAsXML(System.String)">
            <summary>
            Saves worksheet in a XML format file
            </summary>
            <param name="FileName">Name of the file.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.SaveAsXML(System.String,System.Text.Encoding)">
            <summary>
            Saves worksheet in a XML format file
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="encoding">The character encoding.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.SaveAsXML(System.IO.Stream)">
            <summary>
            Saves worksheet in a XML format file
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.SaveAsXML(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Saves worksheet in a XML format file
            </summary>
            <param name="stream">The stream.</param>
            <param name="encoding">The character encoding.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.GetAsBytesArrayCSV">
            <summary>
            Gets the bytes of worksheet saved as CSV document.
            </summary>
            <returns>The bytes of worksheet saved as CSV document.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.GetAsBytesArrayTXT">
            <summary>
            Gets the bytes of worksheet saved as text document.
            </summary>
            <returns>The bytes of worksheet saved as text document.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.GetAsBytesArrayXML">
            <summary>
            Gets the bytes of worksheet saved as XML document.
            </summary>
            <returns>The bytes of worksheet saved as XML document.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.GetAsBytesArrayHTML">
            <summary>
            Gets the bytes of worksheet saved as HTML document.
            </summary>
            <returns>The bytes of worksheet saved as HTML document.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.Find(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Finds the specified search string on the worksheet.
            </summary>
            <param name="searchString">Search string.</param>
            <param name="caseSensitive">Use case sensitive search.</param>
            <param name="useRegularExpressions">The search string contains a regular expression.</param>
            <param name="searchBackwards">Perform backward search.</param>
            <returns>A cell containing the search string.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.Find">
            <summary>
            Finds the specified search string on the worksheet. Specify the search
            options using <see cref="P:Bytescout.Spreadsheet.Spreadsheet.SearchOptions" /> property.
            </summary>
            <returns>A cell containing the search string.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.FindNext">
            <summary>
            Finds next occurrence of the search string on the worksheet. You should
            initialize the search with the Find() method.
            </summary>
            <returns>A cell containing the search string or <see langword="null" />
            if the string is not found.</returns>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IWorksheet.BackgroundPicture">
            <summary>
            Gets or sets the sheet background picture.
            </summary>
            <value>The background picture.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IWorksheet.Visible">
            <summary>
            Gets or sets the visible state of the sheet.
            </summary>
            <value>The visible.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IWorksheet.PageSetup">
            <summary>
            Gets or sets the page setup.
            </summary>
            <value>The page setup.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.Calculate">
            <summary>
            Calculates the formulas in the Worksheet.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IWorksheet.Pictures">
            <summary>
            Gets the pictures.
            </summary>
            <value>The pictures.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.SaveAsPDF(System.String)">
            <summary>
             Saves worksheet to PDF file with specified name.
            </summary>
            <param name="fileName">Output PDF file name.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.SaveAsPDF(System.String,System.Boolean)">
            <summary>
             Saves worksheet to PDF file with specified name.
            </summary>
            <param name="fileName">Output PDF file name.</param>
            <param name="autoSize">Automatic document sizing. If <c>false</c>, the page size wiil be taken from worksheet page setup.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.SaveAsPDF(System.IO.Stream)">
            <summary>
             Saves worksheet to PDF file with specified name.
            </summary>
            <param name="stream">Output stream.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheet.SaveAsPDF(System.IO.Stream,System.Boolean)">
            <summary>
             Saves worksheet to PDF file with specified name.
            </summary>
            <param name="stream">Output stream.</param>
            <param name="autoSize">Automatic document sizing. If <c>false</c>, the page size wiil be taken from worksheet page setup.</param>
        </member>
        <member name="T:Bytescout.Spreadsheet.COM.IWorksheets">
            <summary>
            Worksheets collection interface
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IWorksheets.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Bytescout.Spreadsheet.Worksheet" /> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IWorksheets.Item(System.String)">
            <summary>
            Gets the <see cref="T:Bytescout.Spreadsheet.Worksheet" /> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheets.ByName(System.String)">
            <summary>
            Get Worksheet by name.
            </summary>
            <param name="Name">The name of Worksheet.</param>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheets.IndexOf(System.String)">
            <summary>
            Returns the index of worksheet on her name
            </summary>
            <param name="Name">The name of <see cref="T:Bytescout.Spreadsheet.Worksheet" /> object in the list.</param>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheets.Add(System.String)">
            <summary>
            Adds the worksheet.
            </summary>
            <param name="Name">The name of worksheet.</param>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheets.Add">
            <summary>
            Adds the worksheet with default name "Untitled N".
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheets.AddFromFile(System.String)">
            <summary>
            Adds the worksheet from CSV file.
            </summary>
            <param name="FileName">Name of the file.</param>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheets.AddFromFile(System.String,System.String,System.Text.Encoding)">
            <summary>
            Adds the worksheet from CSV file.
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="Delimiter">The delimiter.</param>
            <param name="Encoding">The character encoding.</param>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheets.Insert(System.Int32,System.String)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="Index">The zero-based index at which worksheet should be inserted.</param>
            <param name="Name">The name of worksheet.</param>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheets.Move(System.Int32,System.Int32)">
            <summary>
            Moves the specified SourceIndex Worksheet.
            </summary>
            <param name="SourceIndex">Index of the source.</param>
            <param name="DestIndex">Index of the destination.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheets.Copy(System.Int32,System.Int32,System.String)">
            <summary>
            Makes a copy and paste of the worksheet (SourceIndex) into a new worksheet (DestIndex)  with NewSheetName
            </summary>
            <param name="SourceIndex">Index of the source.</param>
            <param name="DestIndex">Index of the dest.</param>
            <param name="NewSheetName">New name of the Worksheet.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheets.Delete(System.Int32)">
            <summary>
            Deletes the worksheet.
            </summary>
            <param name="Index">The index of worksheet.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheets.Delete(System.String)">
            <summary>
            Deletes the worksheet.
            </summary>
            <param name="Name">The name of worksheet.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IWorksheets.DeleteAll">
            <summary>
            Deletes all worksheets.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.COM.IWorksheets.Count">
            <summary>
            Gets the worksheet count.
            </summary>
            <value>The worksheet count.</value>
        </member>
        <member name="T:Bytescout.Spreadsheet.COM.IXLSDocEngine">
            <summary>
            XLSDoc Engine interface
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.COM.IXLSDocEngine.SetParameters(System.String,System.String)">
            <summary>
            Sets the parameters.
            </summary>
            <param name="UserName">Name of the user.</param>
            <param name="Key">The key.</param>
        </member>
        <member name="T:Bytescout.Spreadsheet.Border">
            <summary>
            Represents the border of an object.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.Border.#ctor(Bytescout.Spreadsheet.Constants.BorderLineStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.Border" /> class.
            </summary>
            <param name="style">The style.</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.Border.Color">
            <summary>
            Gets or sets the color of the border.
            </summary>
            <value>The color of the border.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Border.ColorIndex">
            <summary>
            Gets or sets value that represents the color of the border.
            </summary>
            <value>The index of the color.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Border.LineStyle">
            <summary>
            Gets or sets the line style for the border.
            </summary>
            <value>The line style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Border.Weight">
            <summary>
            Gets or sets the weight of the border.
            </summary>
            <value>The weight.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.Border.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            <see cref="M:System.Object.GetHashCode"></see> is suitable for
            use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Border.op_Equality(Bytescout.Spreadsheet.Border,Bytescout.Spreadsheet.Border)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Border.op_Inequality(Bytescout.Spreadsheet.Border,Bytescout.Spreadsheet.Border)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Border.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"></see>
            is equal to the current <see cref="T:System.Object"></see>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"></see>
            to compare with the current <see cref="T:System.Object"></see>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"></see>
            is equal to the current <see cref="T:System.Object"></see>; otherwise, false.
            </returns>
        </member>
        <member name="T:Bytescout.Spreadsheet.Generic.PageBreaks">
            <summary></summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Generic.PageBreaks.Count">
            <summary>
            Gets the count.
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Generic.HPageBreaks">
            <summary>
            The collection of horizontal page breaks within the print area.
            The difference from Excel HPageBreaks: this collection includes HPageBreaks that were added by user only (i.e. doesn't include automatically added pagebreaks). 
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Generic.HPageBreaks.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Bytescout.Spreadsheet.Structures.HPageBreak" /> at the specified index.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.Generic.HPageBreaks.Add(Bytescout.Spreadsheet.Range)">
            <summary>
            Adds the specified range.
            </summary>
            <param name="range">The range.</param>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Generic.HPageBreaks.Add(Bytescout.Spreadsheet.Structures.CellsRange)">
            <summary>
            Adds the specified range.
            </summary>
            <param name="range">The range.</param>
            <returns></returns>
        </member>
        <member name="T:Bytescout.Spreadsheet.Generic.VPageBreaks">
            <summary>
            A collection of vertical page breaks within the print area.
            The difference from Excel VPageBreaks: this collection includes VPageBreaks that were added manually only (i.e. doesn't include automatically added pagebreaks).
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Generic.VPageBreaks.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Bytescout.Spreadsheet.Structures.VPageBreak" /> at the specified index.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.Generic.VPageBreaks.Add(Bytescout.Spreadsheet.Range)">
            <summary>
            Adds the specified range.
            </summary>
            <param name="range">The range.</param>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Generic.VPageBreaks.Add(Bytescout.Spreadsheet.Structures.CellsRange)">
            <summary>
            Adds the specified range.
            </summary>
            <param name="range">The range.</param>
            <returns></returns>
        </member>
        <member name="T:Bytescout.Spreadsheet.Generic.IPictures">
            <summary>
            IPictures interface
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Generic.IPictures.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Bytescout.Spreadsheet.MSODrawing.PictureShape" /> at the specified index.
            </summary>
            <value>The zero-based index of the element to get</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Generic.IPictures.Count">
            <summary>
            Gets the number of elements actually contained in the PictureShapeList.
            </summary>
            <value>The number of elements actually contained in the PictureShapeList.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.Generic.IPictures.Add(System.Int32,System.Int32,System.String)">
            <summary>
            Adds the specified image. Returns PictureShape object.
            </summary>
            <param name="topRow">The top row.</param>
            <param name="leftColumn">The left column.</param>
            <param name="ImageFileName">The image filename.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Generic.IPictures.Add(System.Int32,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Adds the specified image. Returns PictureShape object.
            </summary>
            <param name="topRow">The top row.</param>
            <param name="leftColumn">The left column.</param>
            <param name="ImageFileName">The image filename.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Generic.IPictures.AddAndFitInto(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Adds the specified image. Returns PictureShape object.
            </summary>
            <param name="topRow">The top row.</param>
            <param name="leftColumn">The left column.</param>
            <param name="bottomRow">The bottom row.</param>
            <param name="rightColumn">The right column.</param>
            <param name="ImageFileName">The image.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Generic.IPictures.Add(System.String,System.Int32,System.Int32)">
            <summary>
            Adds the specified image from filename. Returns PictureShape object.
            </summary>
            <param name="ImageFileName">The image filename.</param>
            <param name="left">The left in pixels.</param>
            <param name="top">The top in pixels.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Generic.IPictures.Add(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds the specified image. Returns PictureShape object.
            </summary>
            <param name="ImageFileName">The image filename.</param>
            <param name="left">The left in pixels.</param>
            <param name="top">The top in pixels.</param>
            <param name="width">The width in pixels.</param>
            <param name="height">The height in pixels.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Generic.IPictures.Add(System.Double,System.Double,System.String)">
            <summary>
            Adds the specified left. Returns PictureShape object.
            </summary>
            <param name="left">The left in points.</param>
            <param name="top">The top in points.</param>
            <param name="ImageFileName">The image filename.</param>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Generic.IPictures.AddAndFitInto(System.String,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Adds the specified image. Returns PictureShape object.
            </summary>
            <param name="top">The top in points.</param>
            <param name="left">The left in points.</param>
            <param name="bottom">The bottom  in points.</param>
            <param name="right">The right in points.</param>
            <param name="ImageFileName">The image.</param>
        </member>
        <member name="T:Bytescout.Spreadsheet.Generic.DefinedNameList">
            <summary>
            A collection of defined names in a workbook.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Generic.DefinedNameList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Bytescout.Spreadsheet.DefinedName" /> at the specified index.
            </summary>
            <value>The zero-based index of the element to get</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Generic.DefinedNameList.Item(System.String)">
            <summary>
            Gets the <see cref="T:Bytescout.Spreadsheet.DefinedName" /> with the specified name.
            </summary>
            <value>The specified name of the element to ge</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Generic.DefinedNameList.Count">
            <summary>
            Gets the number of elements actually contained in the DefinedNameList.
            </summary>
            <value>The number of elements actually contained in the DefinedNameList.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.Generic.DefinedNameList.Add(Bytescout.Spreadsheet.DefinedName)">
            <summary>
            Adds an <see cref="T:Bytescout.Spreadsheet.DefinedName" /> to the end of the DefinedNameList.
            </summary>
            <param name="item">The <see cref="T:Bytescout.Spreadsheet.DefinedName" /> to be added to the end of the DefinedNameList.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Generic.DefinedNameList.Add(System.String,System.String)">
            <summary>
            Adds a name to the collection, or modifies the name if it already exists.
            </summary>
            <param name="name">The name of the defined name.</param>
            <param name="formula">The formula to assign to the defined name.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Generic.DefinedNameList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:Bytescout.Spreadsheet.DefinedName" />. 
            </summary>
            <param name="index">The The zero-based index of the element to remove.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Generic.DefinedNameList.IndexOf(System.String)">
            <summary>
            Searches for the specified string and returns the zero-based index of the first occurrence within the entire DefinedNameList. 
            </summary>
            <param name="name">The name.</param>
            <returns>The zero-based index of the first occurrence of name within the entire DefinedNameList, if found; otherwise, –1. </returns>
        </member>
        <member name="T:Bytescout.Spreadsheet.Generic.Pictures">
            <summary>
            Pictures
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.Generic.Pictures.#ctor(Bytescout.Spreadsheet.Worksheet)">
            <summary>
            Pictures collection to store pictures for the worksheet
            </summary>
            <param name="worksheet">parent Worksheet</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Generic.Pictures.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that 
            can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:Bytescout.Spreadsheet.Generic.Pictures.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Bytescout.Spreadsheet.MSODrawing.PictureShape" /> at the specified index.
            </summary>
            <value>The zero-based index of the element to get</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Generic.Pictures.Count">
            <summary>
            Gets the number of elements actually contained in the PictureShapeList.
            </summary>
            <value>The number of elements actually contained in the PictureShapeList.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.Generic.Pictures.Add(System.Int32,System.Int32,System.String)">
            <summary>
            Adds the specified image. Returns PictureShape object.
            </summary>
            <param name="topRow">The top row.</param>
            <param name="leftColumn">The left column.</param>
            <param name="ImageFileName">The image filename.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Generic.Pictures.Add(System.Int32,System.Int32,System.Drawing.Image)">
            <summary>
            Adds the specified image. Returns PictureShape object.
            </summary>
            <param name="topRow">The top row.</param>
            <param name="leftColumn">The left column.</param>
            <param name="image">The image.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Generic.Pictures.Add(System.Int32,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Adds the specified image. Returns PictureShape object.
            </summary>
            <param name="topRow">The top row.</param>
            <param name="leftColumn">The left column.</param>
            <param name="ImageFileName">The image filename.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Generic.Pictures.Add(System.Int32,System.Int32,System.Drawing.Image,System.Int32,System.Int32)">
            <summary>
            Adds the specified image. Returns PictureShape object.
            </summary>
            <param name="topRow">The top row.</param>
            <param name="leftColumn">The left column.</param>
            <param name="image">The image.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Generic.Pictures.AddAndFitInto(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Adds the specified image. Returns PictureShape object.
            </summary>
            <param name="topRow">The top row.</param>
            <param name="leftColumn">The left column.</param>
            <param name="bottomRow">The bottom row.</param>
            <param name="rightColumn">The right column.</param>
            <param name="ImageFileName">The image.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Generic.Pictures.AddAndFitInto(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Image)">
            <summary>
            Adds the specified image. Returns PictureShape object.
            </summary>
            <param name="topRow">The top row.</param>
            <param name="leftColumn">The left column.</param>
            <param name="bottomRow">The bottom row.</param>
            <param name="rightColumn">The right column.</param>
            <param name="image">The image.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Generic.Pictures.Add(System.String,System.Int32,System.Int32)">
            <summary>
            Adds the specified image from filename. Returns PictureShape object.
            </summary>
            <param name="ImageFileName">The image filename.</param>
            <param name="left">The left in pixels.</param>
            <param name="top">The top in pixels.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Generic.Pictures.Add(System.Drawing.Image,System.Int32,System.Int32)">
            <summary>
            Adds the specified image. Returns PictureShape object.
            </summary>
            <param name="image">The image.</param>
            <param name="left">The left in pixels.</param>
            <param name="top">The top in pixels.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Generic.Pictures.Add(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds the specified image. Returns PictureShape object.
            </summary>
            <param name="ImageFileName">The image filename.</param>
            <param name="left">The left in pixels.</param>
            <param name="top">The top in pixels.</param>
            <param name="width">The width in pixels.</param>
            <param name="height">The height in pixels.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Generic.Pictures.Add(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds the specified image. Returns PictureShape object.
            </summary>
            <param name="image">The image in pixels.</param>
            <param name="left">The left in pixels.</param>
            <param name="top">The top in pixels.</param>
            <param name="width">The width in pixels.</param>
            <param name="height">The height in pixels.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Generic.Pictures.Add(System.Double,System.Double,System.String)">
            <summary>
            Adds the specified left. Returns PictureShape object.
            </summary>
            <param name="left">The left in points.</param>
            <param name="top">The top in points.</param>
            <param name="ImageFileName">The image filename.</param>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Generic.Pictures.Add(System.Double,System.Double,System.Drawing.Image)">
            <summary>
            Adds the specified left. Returns PictureShape object.
            </summary>
            <param name="left">The left in points.</param>
            <param name="top">The top in points.</param>
            <param name="image">The image.</param>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Generic.Pictures.AddAndFitInto(System.String,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Adds the specified image. Returns PictureShape object.
            </summary>
            <param name="top">The top in points.</param>
            <param name="left">The left in points.</param>
            <param name="bottom">The bottom  in points.</param>
            <param name="right">The right in points.</param>
            <param name="ImageFileName">The image.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Generic.Pictures.AddAndFitInto(System.Drawing.Image,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Adds the specified image. Returns PictureShape object.
            </summary>
            <param name="top">The top in points.</param>
            <param name="left">The left in points.</param>
            <param name="bottom">The bottom in points.</param>
            <param name="right">The right in points.</param>
            <param name="image">The image.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Generic.Pictures.Add(System.Drawing.Image)">
            <summary>
            Adds the specified image. Returns PictureShape object.
            </summary>
            <param name="image">The image.</param>
            <returns></returns>
        </member>
        <member name="T:Bytescout.Spreadsheet.Interior">
            <summary>
            Represents the interior of an object
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Interior.Color">
            <summary>
            Gets or sets the color of the interior as an index into the current color palette.
            </summary>
            <value>The color of the interior.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Interior.ColorIndex">
            <summary>
            Gets or sets the color of the interior.
            </summary>
            <value>The index of the color.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Interior.PatternColor">
            <summary>
            Gets or sets the color of the interior pattern.
            </summary>
            <value>The color of the interior pattern.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Interior.PatternColorIndex">
            <summary>
            Gets or sets the color of the interior pattern as an index into the current color palette.
            </summary>
            <value>The index of the pattern color.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Interior.Pattern">
            <summary>
            Gets or sets the interior pattern.
            </summary>
            <value>The interior pattern.</value>
        </member>
        <member name="T:Bytescout.Spreadsheet.Areas">
            <summary>
            A collection of the areas, or contiguous blocks of cells.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Areas.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Bytescout.Spreadsheet.Range" /> at the specified index.
            </summary>
            <value>Specifies the zero based index of the <see cref="T:Bytescout.Spreadsheet.Range" /> to return.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Areas.Count">
            <summary>
            Returns the number of objects in the collection.
            </summary>
            <value>The number of objects in the collection.</value>
        </member>
        <member name="T:Bytescout.Spreadsheet.OpenXML.Types.SheetState">
            <summary>
            This simple type defines the possible states for sheet visibility.
            Please take a look at:
                Open XML spec, 18.18.68 ST_SheetState (Sheet Visibility Types)
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.OpenXML.Types.SheetState.hidden">
            <summary>
            Indicates the workbook window is hidden, but can be shown by the
            user via the user interface.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.OpenXML.Types.SheetState.veryHidden">
            <summary>
            Indicates the sheet is hidden and cannot be shown in the user
            interface (UI). This state is only available programmatically.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.OpenXML.Types.SheetState.visible">
            <summary>
            Indicates the sheet is visible.
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.OpenXML.Types.AnchorEditType">
            <summary>
            This simple type specifies all possible settings for how DrawingML 
            contents shall be resized when the rows and columns between its start
            and ending anchor (the from and to child elements) are resized, or 
            have additional rows/columns inserted within them.
            
            Please take a look at:
                Open XML spec, 20.5.3.2 ST_EditAs simple type
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.OpenXML.Types.AnchorEditType.absolute">
            <summary>
            Do Not Move or Resize With Underlying Rows/Columns
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.OpenXML.Types.AnchorEditType.oneCell">
            <summary>
            Move With Cells but Do Not Resize
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.OpenXML.Types.AnchorEditType.twoCell">
            <summary>
            Move and Resize With Anchor Cells
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.OpenXML.Types.VerticalAlignRun">
            <summary>
            Vertical position of the text relative to the text's default appearance.
            
            Please take a look at:
                Open XML spec, 18.4.14 vertAlign (Vertical Alignment)
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Structures.PageBreak">
            <summary>
            This structure specifies individual row or column breaks
            
            Please take a look at:
                Excel Binary File Format (.xls) Structure Specification
                    2.5.160 HorzBrk
                    2.5.276 VertBrk
                ECMA-376 (.xlsx) Fundamentals and Markup Language Reference
                    18.3.1.3 brk (Break)
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Structures.PageBreak.Pt">
            <summary>
            Gets or sets a value indicating that a PivotTable created this break.
            </summary>
            <value>
                <c>true</c> if PivotTable created this break; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Bytescout.Spreadsheet.Structures.HPageBreak">
            <summary>
            Represents a horizontal page break.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Structures.HPageBreak.Location">
            <summary>
            Gets or sets the location.
            </summary>
            <value>
            The location.
            </value>
        </member>
        <member name="T:Bytescout.Spreadsheet.Structures.VPageBreak">
            <summary>
            Represents a vertical page break.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Structures.VPageBreak.Location">
            <summary>
            Gets or sets the location.
            </summary>
            <value>
            The location.
            </value>
        </member>
        <member name="T:Bytescout.Spreadsheet.Structures.PaneTypes">
            <summary>
            The enumeration specifies the different types of panes.
            Please take a look at:
                Open XML spec, 18.18.52 ST_Pane (Pane Types)
                [MS-XLS] 2.5.196 PaneType
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Structures.PaneTypes.bottomRight">
            <summary>
            Logical bottom-right pane
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Structures.PaneTypes.topRight">
            <summary>
            Logical top-right pane
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Structures.PaneTypes.bottomLeft">
            <summary>
            Logical bottom-left pane
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Structures.PaneTypes.topLeft">
            <summary>
            Logical top-left pane
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Structures.CellsRange">
            <summary>
            A structure that specifies a range of cells on the sheet.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Structures.CellsRange.FirstRow">
            <summary>
            First row index
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Structures.CellsRange.LastRow">
            <summary>
            Last row index
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Structures.CellsRange.FirstColumn">
            <summary>
            First column index
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Structures.CellsRange.LastColumn">
            <summary>
            Last column index
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.Structures.CellsRange.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.Structures.CellsRange" /> struct.
            </summary>
            <param name="firstRow">The first row.</param>
            <param name="lastRow">The last row.</param>
            <param name="firstColumn">The first column.</param>
            <param name="lastColumn">The last column.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Structures.CellsRange.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.Structures.CellsRange" /> struct.
            </summary>
            <param name="A1Ref">The A1 style reference.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Structures.CellsRange.#ctor(System.Byte[],System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.Structures.CellsRange" /> struct.
            
            Please take a look at:
                [MS-XLS], 2.5.209 Ref8U
            </summary>
            <param name="bytes">The array of bytes.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Structures.CellsRange.op_Equality(Bytescout.Spreadsheet.Structures.CellsRange,Bytescout.Spreadsheet.Structures.CellsRange)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Structures.CellsRange.op_Inequality(Bytescout.Spreadsheet.Structures.CellsRange,Bytescout.Spreadsheet.Structures.CellsRange)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Structures.CellsRange.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
                <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Structures.CellsRange.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Structures.CellsRange.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Bytescout.Spreadsheet.Validation">
            <summary>
            Represents data validation criteria defined for a worksheet range.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.Validation.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Validation.op_Equality(Bytescout.Spreadsheet.Validation,Bytescout.Spreadsheet.Validation)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Validation.op_Inequality(Bytescout.Spreadsheet.Validation,Bytescout.Spreadsheet.Validation)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Validation.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
                <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Bytescout.Spreadsheet.Validation.Operator">
            <summary>
            Gets the operator for data validation.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Validation.AlertStyle">
            <summary>
            Gets the validation alert style.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Validation.IMEMode">
            <summary>
            Gets or sets the IME mode.
            </summary>
            <value>
            The IME mode.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Validation.IgnoreBlank">
            <summary>
            Gets or sets a value indicating whether [ignore blank].
            </summary>
            <value>
                <c>true</c> if blank values are permitted by the range data validation; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Validation.InCellDropdown">
            <summary>
            Gets or sets a value indicating whether [in cell dropdown].
            </summary>
            <value>
                <c>true</c> if data validation displays a drop-down list that contains acceptable values; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Validation.Formula1">
            <summary>
            Gets the value or expression associated with the conditional format or data validation.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Validation.Formula2">
            <summary>
            Gets  value or expression associated with the second part of a conditional format or data validation.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Validation.ShowError">
            <summary>
            Gets or sets a value indicating whether [show error].
            </summary>
            <value>
                <c>true</c> if  the data validation error message will be displayed whenever the user enters invalid data; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Validation.ShowInput">
            <summary>
            Gets or sets a value indicating whether [show input].
            </summary>
            <value>
                <c>true</c> if the data validation input message will be displayed whenever the user selects a cell in the data validation range; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Validation.ErrorMessage">
            <summary>
            Gets or sets the data validation error message.
            </summary>
            <value>
            The error message.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Validation.ErrorTitle">
            <summary>
            Gets or sets the title of the data-validation error dialog box.
            </summary>
            <value>
            The error title.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Validation.InputMessage">
            <summary>
            Gets or sets the data validation input message.
            </summary>
            <value>
            The input message.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Validation.InputTitle">
            <summary>
            Gets or sets the title of the data-validation input dialog box.
            </summary>
            <value>
            The input title.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Validation.Type">
            <summary>
            Gets value, containing a XlDVType constant, that represents the data type validation.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Validation.Value">
            <summary>
            Gets a value indicating whether this <see cref="T:Bytescout.Spreadsheet.Validation" /> is value.
            </summary>
            <value>
                <c>true</c> if all the validation criteria are met; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Bytescout.Spreadsheet.MSODrawing.IFillFormat">
            <summary>
            IFillFormat interface
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.IFillFormat.BackColor">
            <summary>
            Back color
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.IFillFormat.ForeColor">
            <summary>
            Fore color
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.IFillFormat.GradientColorType">
            <summary>
            Gradient color type
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.IFillFormat.GradientDegree">
            <summary>
            Gets the gradient degree.
            </summary>
            <value>The gradient degree.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.IFillFormat.GradientStyle">
            <summary>
            Gradient style
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.IFillFormat.GradientVariant">
            <summary>
            Gets the gradient variant.
            </summary>
            <value>The gradient variant.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.IFillFormat.Transparency">
            <summary>
            Transparency
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.IFillFormat.Visible">
            <summary>
            Gets or sets a value indicating whether the fill is visible.
            </summary>
            <value>
                <c>true</c> if visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.MSODrawing.IFillFormat.OneColorGradient(Bytescout.Spreadsheet.MSODrawing.GradientStyle,System.Int32,System.Double)">
            <summary>
            One color gradient
            </summary>
            <param name="GradientStyle">Gradient style</param>
            <param name="Variant">Variant</param>
            <param name="Degree">Degreee</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.MSODrawing.IFillFormat.TwoColorGradient(Bytescout.Spreadsheet.MSODrawing.GradientStyle,System.Int32)">
            <summary>
            Twoes the color gradient.
            </summary>
            <param name="GradientStyle">The gradient style.</param>
            <param name="Variant">The variant.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.MSODrawing.IFillFormat.Solid">
            <summary>
            Solids this instance.
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.MSODrawing.ILineFormat">
            <summary>
            ILineFormat interface
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.ILineFormat.ForeColor">
            <summary>
            Fore color for line
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.ILineFormat.DashStyle">
            <summary>
            Gets or sets the dash style of the line.
            </summary>
            <value>The dash style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.ILineFormat.Style">
            <summary>
            Gets or sets the style of the line.
            </summary>
            <value>The style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.ILineFormat.Weight">
            <summary>
            Gets or sets the weight of the line in points.
            </summary>
            <value>The weight in points.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.ILineFormat.Visible">
            <summary>
            Gets or sets a value indicating whether the line is visible.
            </summary>
            <value>
                <c>true</c> if visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Bytescout.Spreadsheet.MSODrawing.IPictureShape">
            <summary>
            IPictureShape interface
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.IPictureShape.Picture">
            <summary>
            Gets the picture.
            </summary>
            <value>The picture.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.IPictureShape.TopRow">
            <summary>
            Gets or sets the top row.
            </summary>
            <value>The top row.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.IPictureShape.LeftColumn">
            <summary>
            Gets or sets the left column.
            </summary>
            <value>The left column.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.IPictureShape.Top">
            <summary>
            Gets or sets the position of the top edge of this picture in pixels.
            </summary>
            <value>The top.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.IPictureShape.Left">
            <summary>
            Gets or sets the position of the left edge of this picture in pixels.
            </summary>
            <value>The left.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.IPictureShape.Height">
            <summary>
            Gets or sets the height of this picture in pixels.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.IPictureShape.Width">
            <summary>
            Gets or sets the width of this picture in pixels.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.IPictureShape.Rotation">
            <summary>
            Gets or sets the rotation  of the picture, in degrees.
            </summary>
            <value>The rotation.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.IPictureShape.Name">
            <summary>
            Name of the picture
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.IPictureShape.PlacementType">
            <summary>
            Gets or sets the Placement setting of this picture, which specifies how changes to the sheet will affect the placement of this picture.
            </summary>
            <value>The placement.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.IPictureShape.Locked">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Bytescout.Spreadsheet.MSODrawing.PictureShape" /> is locked.
            </summary>
            <value>
                <c>true</c> if locked; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.IPictureShape.Print">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Bytescout.Spreadsheet.MSODrawing.PictureShape" /> is printable.
            </summary>
            <value>
                <c>true</c> if printable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.IPictureShape.CropFromTop">
            <summary>
            Gets or sets the value specified how much to crop the image from the top down as a fraction of picture size.
            </summary>
            <value>The crop from top.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.IPictureShape.CropFromBottom">
            <summary>
            Gets or sets the value specified how much to crop the image from the bottom up as a fraction of picture size.
            </summary>
            <value>The crop from bottom.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.IPictureShape.CropFromLeft">
            <summary>
            Gets or sets the value specified how much to crop the image from the left in as a fraction of picture size.
            </summary>
            <value>The crop from left.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.IPictureShape.CropFromRight">
            <summary>
            Gets or sets the value specified how much to crop the image from the right in as a fraction of picture size.
            </summary>
            <value>The crop from right.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.IPictureShape.Contrast">
            <summary>
            Gets or sets the contrast of the picture.
            The minimum value of 0.0 specifies that the picture is rendered with no contrast.
            The maximum value of 1.0 specifies that the picture is rendered with maximum contrast.
            The default value for this property is 0.5 and specifies no change to the contrast of the picture.
            </summary>
            <value>The contrast.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.IPictureShape.Brightness">
            <summary>
            Gets or sets the brightness of the picture.
            The minimum value of 0.0 specifies that the picture is rendered with the minimum brightness (dimmest).
            The maximum value of 1.0 specifies that the picture is rendered with the maximum brightness (brightest).
            The default value for this property is 0.5 and specifies no change to the brightness of the picture.
            </summary>
            <value>The brightness.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.IPictureShape.ColorType">
            <summary>
            Gets or sets the type of color transformation applied to the picture.
            </summary>
            <value>The type of the color.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.IPictureShape.LockAspectRatio">
            <summary>
            Gets or sets a value indicating whether the aspect ratio of this picture is locked.
            </summary>
            <value>
                <c>true</c> if [lock aspect ratio]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.IPictureShape.Line">
            <summary>
            Gets or sets the LineFormat object represents the border.
            </summary>
            <value>The line.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.IPictureShape.Fill">
            <summary>
            Fill format
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.MSODrawing.IPictureShape.ScaleHeight(System.Double,System.Boolean)">
            <summary>
            Scales the height of the picture by a specified factor.
            </summary>
            <param name="factor">Specifies the ratio between the height of the shape after you resize it and the current or original height.</param>
            <param name="relativeToOriginalSize">if set to <c>true</c> [to scale the picture relative to its original size];
            if set to <c>false</c> [to scale it relative to its current size].</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.MSODrawing.IPictureShape.ScaleWidth(System.Double,System.Boolean)">
            <summary>
            Scales the width of the picture by a specified factor.
            </summary>
            <param name="factor">Specifies the ratio between the width of the shape after you resize it and the current or original width.</param>
            <param name="relativeToOriginalSize">if set to <c>true</c> [to scale the picture relative to its original size];
            if set to <c>false</c> [to scale it relative to its current size].</param>
        </member>
        <member name="T:Bytescout.Spreadsheet.MSODrawing.PresetTexture">
            <summary>
            Preset texture
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetTexture.Mixed">
            <summary>
            (1) Mixed
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetTexture.Bouquet">
            <summary>
            (2) Boouqet
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetTexture.Canvas">
            <summary>
            (3) Canvas
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetTexture.Denim">
            <summary>
            (4) Denim
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetTexture.Granite">
            <summary>
            (5) Granite
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetTexture.MediumWood">
            <summary>
            (6) Medium wood
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetTexture.Oak">
            <summary>
            (7) Oak
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetTexture.Papyrus">
            <summary>
            (8) Papyrus
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetTexture.PinkTissuePaper">
            <summary>
            (9) Pink tissue paper
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetTexture.RecycledPaper">
            <summary>
            (10) Recycled paper
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetTexture.Stationery">
            <summary>
            (11) Stationary
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetTexture.WaterDroplets">
            <summary>
            (12) Water droplets
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetTexture.WovenMat">
            <summary>
            (13) Woven mat
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetTexture.BlueTissuePaper">
            <summary>
            (14) Blue tissue paper
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetTexture.BrownMarble">
            <summary>
            (15) Brown marble
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetTexture.Cork">
            <summary>
            (16) Cork
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetTexture.FishFossil">
            <summary>
            (17) Fish fossil
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetTexture.GreenMarble">
            <summary>
            (18) Green marble
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetTexture.Newsprint">
            <summary>
            (19) Newsprint
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetTexture.PaperBag">
            <summary>
            (20) Paper bag
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetTexture.Parchment">
            <summary>
            (21) Parchment
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetTexture.PurpleMesh">
            <summary>
            (22) Purple mesh
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetTexture.Sand">
            <summary>
            (23) Sand
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetTexture.Walnut">
            <summary>
            (24) Walnut
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetTexture.WhiteMarble">
            <summary>
            (25) White marble
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.MSODrawing.PresetGradientType">
            <summary>
            Preset gradient type
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetGradientType.Brass">
            <summary>
            (1) Brass
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetGradientType.Chrome">
            <summary>
            (2) Chrome
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetGradientType.Daybreak">
            <summary>
            (3) Day break
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetGradientType.EarlySunset">
            <summary>
            (4) Early sunset
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetGradientType.Fog">
            <summary>
            (5) Fog
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetGradientType.GoldII">
            <summary>
            (6) Gold II
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetGradientType.LateSunset">
            <summary>
            (7) Late sunset
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetGradientType.Moss">
            <summary>
            (8) Moss
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetGradientType.Ocean">
            <summary>
            (9) Ocean
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetGradientType.Peacock">
            <summary>
            (10) Peacock
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetGradientType.RainbowII">
            <summary>
            (11) Rainbow II
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetGradientType.Silver">
            <summary>
            (12) Silver
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetGradientType.Wheat">
            <summary>
            (13) Wheat
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetGradientType.Mixed">
            <summary>
            (14) Mixed
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetGradientType.CalmWater">
            <summary>
            (15) Calm water
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetGradientType.ChromeII">
            <summary>
            (16) Chrome II
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetGradientType.Desert">
            <summary>
            (17) Desert
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetGradientType.Fire">
            <summary>
            (18) Fire
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetGradientType.Gold">
            <summary>
            (19) Gold
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetGradientType.Horizon">
            <summary>
            (20) Horizon
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetGradientType.Mahogany">
            <summary>
            (21) Mahogany
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetGradientType.Nightfall">
            <summary>
            (22) Night fall
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetGradientType.Parchment">
            <summary>
            (23) Parchment
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetGradientType.Rainbow">
            <summary>
            (24) Rainbow
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PresetGradientType.Sapphire">
            <summary>
            (25) Sapphire
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.MSODrawing.PatternType">
            <summary>
            Pattern type
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.Percent5">
            <summary>
            (0) 5 percents
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.Percent10">
            <summary>
            (1) 10 percents
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.Percent20">
            <summary>
            (2) 20 percents
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.Percent25">
            <summary>
            (3) 25 percents
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.Percent30">
            <summary>
            (4) 30 percents
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.Percent40">
            <summary>
            (5) 40 percents
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.Percent50">
            <summary>
            (6) 50 percents
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.Percent60">
            <summary>
            (7) 60 percents
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.Percent70">
            <summary>
            (8) 70 percents
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.Percent75">
            <summary>
            (9) 75 percents
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.Percent80">
            <summary>
            (10) 80 percents
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.Percent90">
            <summary>
            (11) 90 percents
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.DarkDownwardDiagonal">
            <summary>
            (12) Dark downward diagonal
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.DarkHorizontal">
            <summary>
            (13) Dark horizontal
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.DarkUpwardDiagonal">
            <summary>
            (14) Dark upward diagonal
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.DarkVertical">
            <summary>
            (11) Dark vertical
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.DashedDownwardDiagonal">
            <summary>
            (15) Dashed downward diagonal
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.DashedHorizontal">
            <summary>
            (16) Dashed horizontal
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.DashedUpwardDiagonal">
            <summary>
            (17) Dashed upward diagonal
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.DashedVertical">
            <summary>
            (18) Dashed vertical
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.DiagonalBrick">
            <summary>
            (19) Diagonal brick
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.Divot">
            <summary>
            (20) Divot
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.DottedDiamond">
            <summary>
            (21) Dotted diamond
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.DottedGrid">
            <summary>
            (22) Dotted grid
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.HorizontalBrick">
            <summary>
            (23) Horizontal brick
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.LargeCheckerBoard">
            <summary>
            (24) Large checker board
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.LargeConfetti">
            <summary>
            (25) Large confetti
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.LargeGrid">
            <summary>
            (26) Large grid
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.LightDownwardDiagonal">
            <summary>
            (27) Light downward diagonal
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.LightHorizontal">
            <summary>
            (28) Light horizontal
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.LightUpwardDiagonal">
            <summary>
            (29) Light upward diagonal
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.LightVertical">
            <summary>
            (30) Light vertical
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.Mixed">
            <summary>
            (31) Mixed
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.NarrowHorizontal">
            <summary>
            (32) Narrow horizontal
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.NarrowVertical">
            <summary>
            (33) Narrow vertical
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.OutlinedDiamond">
            <summary>
            (34) Outlined diamond
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.Plaid">
            <summary>
            (35) Plaid
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.Shingle">
            <summary>
            (36) Shingle
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.SmallCheckerBoard">
            <summary>
            (37) Small checker board
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.SmallConfetti">
            <summary>
            (38) Small confetti
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.SmallGrid">
            <summary>
            (39) Small grid
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.SolidDiamond">
            <summary>
            (40) Solid diamond
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.Sphere">
            <summary>
            (41) Sphere
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.Trellis">
            <summary>
            (42) Trellis
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.Wave">
            <summary>
            (43) Wave
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.Weave">
            <summary>
            (44) Weave
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.WideDownwardDiagonal">
            <summary>
            (45) Wide downward diagonal
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.WideUpwardDiagonal">
            <summary>
            (46) Wide upward diagonal
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PatternType.ZigZag">
            <summary>
            (47) Zig zag
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.MSODrawing.GradientStyle">
            <summary>
            Gradient shading style
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.GradientStyle.DiagonalDown">
            <summary>
            (1) Diagonal down
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.GradientStyle.DiagonalUp">
            <summary>
            (2) Diagonal up
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.GradientStyle.FromCenter">
            <summary>
            (3) From center
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.GradientStyle.FromCorner">
            <summary>
            (4) From corner
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.GradientStyle.FromTitle">
            <summary>
            (5) From title
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.GradientStyle.Horizontal">
            <summary>
            (6) Horizontal
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.GradientStyle.Mixed">
            <summary>
            (7) Mixed
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.GradientStyle.Vertical">
            <summary>
            (8) Vertical
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.MSODrawing.GradientColorType">
            <summary>
            Gradient color type 
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.GradientColorType.ColorMixed">
            <summary>
            (1) Mixed colors
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.GradientColorType.OneColor">
            <summary>
            (2) One color
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.GradientColorType.PresetColors">
            <summary>
            (3) Preset colors
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.GradientColorType.TwoColors">
            <summary>
            (4) Two colors
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.MSODrawing.FillFormat">
            <summary>
            Fill format
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.FillFormat.BackColor">
            <summary>
            Back color
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.FillFormat.ForeColor">
            <summary>
            Fore color
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.FillFormat.GradientColorType">
            <summary>
            Gradient color type
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.FillFormat.GradientDegree">
            <summary>
            Gets the gradient degree.
            </summary>
            <value>The gradient degree.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.FillFormat.GradientStyle">
            <summary>
            Gradient style
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.FillFormat.GradientVariant">
            <summary>
            Gets the gradient variant.
            </summary>
            <value>The gradient variant.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.FillFormat.Transparency">
            <summary>
            Transparency
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.FillFormat.Visible">
            <summary>
            Gets or sets a value indicating whether the fill is visible.
            </summary>
            <value>
                <c>true</c> if visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.MSODrawing.FillFormat.OneColorGradient(Bytescout.Spreadsheet.MSODrawing.GradientStyle,System.Int32,System.Double)">
            <summary>
            One color gradient
            </summary>
            <param name="GradientStyle">Gradient style</param>
            <param name="Variant">Variant</param>
            <param name="Degree">Degreee</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.MSODrawing.FillFormat.TwoColorGradient(Bytescout.Spreadsheet.MSODrawing.GradientStyle,System.Int32)">
            <summary>
            Twoes the color gradient.
            </summary>
            <param name="GradientStyle">The gradient style.</param>
            <param name="Variant">The variant.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.MSODrawing.FillFormat.Solid">
            <summary>
            Solids this instance.
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.MSODrawing.LineStyle">
            <summary>
            Specifies the line style type
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.LineStyle.Single">
            <summary>
            (0) One line.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.LineStyle.Double">
            <summary>
            (1) Two lines of equal width.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.LineStyle.ThickThin">
            <summary>
            (2) Two lines: one thick, one thin.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.LineStyle.ThinThick">
            <summary>
            (3) Two lines: one thin, one thick.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.LineStyle.Triple">
            <summary>
            (4) Three lines: thin, thick, thin.
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.MSODrawing.LineDashStyle">
            <summary>
            Specifies preset line dash values
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.LineDashStyle.Solid">
            <summary>
            (0) Solid style
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.LineDashStyle.Dash">
            <summary>
            (1) Dash style
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.LineDashStyle.Dot">
            <summary>
            (2) Dot style
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.LineDashStyle.DashDot">
            <summary>
            (3) Dash dot style
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.LineDashStyle.DashDotDot">
            <summary>
            (4) Dash dot dot style
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.LineDashStyle.SquareDot">
            <summary>
            (5) Square dot style
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.LineDashStyle.DashStyleMixed">
            <summary>
            (6) Dash style mixed
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.LineDashStyle.DashLongDash">
            <summary>
            (7) Dash long dash style
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.LineDashStyle.DashLongDashDot">
            <summary>
            (8) Dash long dash dot style
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.MSODrawing.LineFormat">
            <summary>
            Line format class for pictures
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.LineFormat.ForeColor">
            <summary>
            Fore color for line
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.LineFormat.DashStyle">
            <summary>
            Gets or sets the dash style of the line.
            </summary>
            <value>The dash style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.LineFormat.Style">
            <summary>
            Gets or sets the style of the line.
            </summary>
            <value>The style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.LineFormat.Weight">
            <summary>
            Gets or sets the weight of the line in points.
            </summary>
            <value>The weight in points.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.LineFormat.Visible">
            <summary>
            Gets or sets a value indicating whether the line is visible.
            </summary>
            <value>
                <c>true</c> if visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Bytescout.Spreadsheet.MSODrawing.PictureColorType">
            <summary>
            Color transformation type fot the picture
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PictureColorType.Automatic">
            <summary>
            (1) Use original settings (Contrast = 0.5 and Brightness = 0.5)
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PictureColorType.BlackAndWhite">
            <summary>
            (2) Picture will be displayed in two-color mode (black and white colors only)
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PictureColorType.Grayscale">
            <summary>
            (3) Picture will be displayed in the grayscale color type 
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PictureColorType.Mixed">
            <summary>
            (4) Unused type
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.PictureColorType.Watermark">
            <summary>
            (5) Watermark-like color transformation. (Contrast = 0.15 and Brightness = 0.85)
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.MSODrawing.Placement">
            <summary>
            Specifies how changes to a worksheet will affect the
            placement of a shape.
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.Placement.MoveAndSize">
            <summary>
            (1) Shapes are move and size with Cells
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.Placement.Move">
            <summary>
            (2) Shapes are move but don't size with cells
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.MSODrawing.Placement.FreeFloating">
            <summary>
            (3) Shapes are don't move or size with cells
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.MSODrawing.PictureShape">
            <summary>
            Picture shape
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.MSODrawing.PictureShape.#ctor(System.Drawing.Image,Bytescout.Spreadsheet.Worksheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.MSODrawing.PictureShape" /> class.
            </summary>
            <param name="image">The image.</param>
            <param name="worksheet">The parent worksheet.</param>/// 
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.PictureShape.Picture">
            <summary>
            Gets the picture.
            </summary>
            <value>The picture.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.PictureShape.TopRow">
            <summary>
            Gets or sets the top row.
            </summary>
            <value>The top row.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.PictureShape.LeftColumn">
            <summary>
            Gets or sets the left column.
            </summary>
            <value>The left column.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.PictureShape.Top">
            <summary>
            Gets or sets the position of the top edge of this picture in pixels.
            </summary>
            <value>The top.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.PictureShape.Left">
            <summary>
            Gets or sets the position of the left edge of this picture in pixels.
            </summary>
            <value>The left.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.PictureShape.Height">
            <summary>
            Gets or sets the height of this picture in pixels.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.PictureShape.Width">
            <summary>
            Gets or sets the width of this picture in pixels.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.PictureShape.Rotation">
            <summary>
            Gets or sets the rotation  of the picture, in degrees.
            </summary>
            <value>The rotation.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.PictureShape.Name">
            <summary>
            Name of the picture
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.PictureShape.PlacementType">
            <summary>
            Gets or sets the Placement setting of this picture, which specifies how changes to the sheet will affect the placement of this picture.
            </summary>
            <value>The placement.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.PictureShape.Locked">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Bytescout.Spreadsheet.MSODrawing.PictureShape" /> is locked.
            </summary>
            <value>
                <c>true</c> if locked; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.PictureShape.Print">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Bytescout.Spreadsheet.MSODrawing.PictureShape" /> is printable.
            </summary>
            <value>
                <c>true</c> if printable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.PictureShape.CropFromTop">
            <summary>
            Gets or sets the value specified how much to crop the image from the top down as a fraction of picture size.
            </summary>
            <value>The crop from top.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.PictureShape.CropFromBottom">
            <summary>
            Gets or sets the value specified how much to crop the image from the bottom up as a fraction of picture size.
            </summary>
            <value>The crop from bottom.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.PictureShape.CropFromLeft">
            <summary>
            Gets or sets the value specified how much to crop the image from the left in as a fraction of picture size.
            </summary>
            <value>The crop from left.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.PictureShape.CropFromRight">
            <summary>
            Gets or sets the value specified how much to crop the image from the right in as a fraction of picture size.
            </summary>
            <value>The crop from right.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.PictureShape.Contrast">
            <summary>
            Gets or sets the contrast of the picture.
            The minimum value of 0.0 specifies that the picture is rendered with no contrast.
            The maximum value of 1.0 specifies that the picture is rendered with maximum contrast.
            The default value for this property is 0.5 and specifies no change to the contrast of the picture.
            </summary>
            <value>The contrast.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.PictureShape.Brightness">
            <summary>
            Gets or sets the brightness of the picture.
            The minimum value of 0.0 specifies that the picture is rendered with the minimum brightness (dimmest).
            The maximum value of 1.0 specifies that the picture is rendered with the maximum brightness (brightest).
            The default value for this property is 0.5 and specifies no change to the brightness of the picture.
            </summary>
            <value>The brightness.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.PictureShape.ColorType">
            <summary>
            Gets or sets the type of color transformation applied to the picture.
            </summary>
            <value>The type of the color.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.PictureShape.LockAspectRatio">
            <summary>
            Gets or sets a value indicating whether the aspect ratio of this picture is locked.
            </summary>
            <value>
                <c>true</c> if [lock aspect ratio]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.MSODrawing.PictureShape.ScaleHeight(System.Double,System.Boolean)">
            <summary>
            Scales the height of the picture by a specified factor.
            </summary>
            <param name="factor">Specifies the ratio between the height of the shape after you resize it and the current or original height.</param>
            <param name="relativeToOriginalSize">if set to <c>true</c> [to scale the picture relative to its original size];
            if set to <c>false</c> [to scale it relative to its current size].</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.MSODrawing.PictureShape.ScaleWidth(System.Double,System.Boolean)">
            <summary>
            Scales the width of the picture by a specified factor.
            </summary>
            <param name="factor">Specifies the ratio between the width of the shape after you resize it and the current or original width.</param>
            <param name="relativeToOriginalSize">if set to <c>true</c> [to scale the picture relative to its original size];
            if set to <c>false</c> [to scale it relative to its current size].</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.PictureShape.Line">
            <summary>
            Gets or sets the LineFormat object represents the border.
            </summary>
            <value>The line.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.MSODrawing.PictureShape.Fill">
            <summary>
            Fill format
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.CollectionImportExport.ImportFrom2DArray(System.String[0:,0:])">
            <summary>
            Import from two-dimensional array. 
            </summary>
            <param name="array"></param>
        </member>
        <member name="M:Bytescout.Spreadsheet.CollectionImportExport.ImportFrom2DArray(System.String[0:,0:],System.Int32)">
            <summary>
            Import from two-dimensional array to the specified worksheet
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.CollectionImportExport.ImportFrom2DArray(System.String[0:,0:],System.String)">
            <summary>
            Import from two-dimensional array to the specified worksheet
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.CollectionImportExport.ImportFrom2DArray(System.String[0:,0:],Bytescout.Spreadsheet.Worksheet)">
            <summary>
            Import from two-dimensional array to the specified worksheet
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.DefinedName">
            <summary>
            Represents a defined name
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.DefinedName.Index">
            <summary>
            Returns the zero based index of the defined name in the DefinedNames collection. 
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.DefinedName.Name">
            <summary>
            Gets or sets the name of the defined name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.DefinedName.Comment">
            <summary>
            Gets or sets the comment associated with this defined name. 
            </summary>
            <value>The comment.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.DefinedName.Value">
            <summary>
            Gets or sets the string containing the formula that the name is defined to refer to.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.DefinedName.RefersTo">
            <summary>
            Gets or sets the formula that the name is defined to refer to.
            </summary>
            <value>The refers to.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.DefinedName.Visible">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Bytescout.Spreadsheet.DefinedName" /> is visible in the user interface.
            </summary>
            <value>
                <c>true</c> if visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Bytescout.Spreadsheet.HyperLink">
            <summary>
            Represents a hyperlink
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.HyperLink.#ctor(Bytescout.Spreadsheet.Structures.CellsRange,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.HyperLink" /> class.
            </summary>
            <param name="Range">The cells range.</param>
            <param name="Address">The hyperlink address.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.HyperLink.#ctor(Bytescout.Spreadsheet.Structures.CellsRange,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.HyperLink" /> class.
            </summary>
            <param name="Range">The cells range.</param>
            <param name="Address">The hyperlink address.</param>
            <param name="SubAddress">The sub address.</param>
            <param name="ScreenTip">The screen tip.</param>
            <param name="TextToDisplay">The text to display.</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.HyperLink.Address">
            <summary>
            Gets or sets the address of this hyperlink.
            </summary>
            <value>The address.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.HyperLink.Range">
            <summary>
            Gets the range which this hyperlink is attached to.
            </summary>
            <value>The range.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.HyperLink.ScreenTip">
            <summary>
            Gets or sets the ScreenTip text for the specified hyperlink.
            </summary>
            <value>The screen tip.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.HyperLink.SubAddress">
            <summary>
            Gets or sets the the location within the document associated with the hyperlink.
            </summary>
            <value>The sub address.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.HyperLink.TextToDisplay">
            <summary>
            Gets or sets the text to be displayed for the specified hyperlink. The default value is the address of the hyperlink.
            <value>The text to display.</value></summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.HyperLinks">
            <summary>
            Hyperlinks 
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.HyperLinks.#ctor(Bytescout.Spreadsheet.Worksheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.HyperLinks" /> class.
            </summary>
            <param name="Worksheet">The worksheet.</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.HyperLinks.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Bytescout.Spreadsheet.HyperLink" /> at the specified index.
            </summary>
            <value>The zero-based index of the element to get</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.HyperLinks.Count">
            <summary>
            Gets the number of elements actually contained in the HyperLinks.
            </summary>
            <value>The number of elements actually contained in the HyperLinks.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.HyperLinks.Add(Bytescout.Spreadsheet.HyperLink)">
            <summary>
            Adds an <see cref="T:Bytescout.Spreadsheet.HyperLink" /> to the end of the HyperLinks.
            </summary>
            <param name="item">The <see cref="T:Bytescout.Spreadsheet.HyperLink" /> to be added to the end of the HyperLinks.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.HyperLinks.Add(Bytescout.Spreadsheet.Structures.CellsRange,System.String,System.String,System.String,System.String)">
            <summary>
            Adds the hyperlink.
            </summary>
            <param name="Anchor">The cells range.</param>
            <param name="Address">The hyperlink address.</param>
            <param name="SubAddress">The sub address.</param>
            <param name="ScreenTip">The screen tip.</param>
            <param name="TextToDisplay">The text to display.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.HyperLinks.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:Bytescout.Spreadsheet.HyperLink" />. 
            </summary>
            <param name="index">The The zero-based index of the element to remove.</param>
        </member>
        <member name="T:Bytescout.Spreadsheet.ConversionOptions">
            <summary>
            Conversion options for XLS to CSV, TXT and other conversions
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.ConversionOptions.#ctor(System.String,System.String,Bytescout.Spreadsheet.OutputFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.ConversionOptions" /> class.
            </summary>
            <param name="Delimiter">The delimiter.</param>
            <param name="Quote">The quote.</param>
            <param name="Format">The format.</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.ConversionOptions.OutputFormat">
            <summary>
            Gets or sets the output format.
            </summary>
            <value>The output format.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.ConversionOptions.Delimiter">
            <summary>
            Gets or sets the delimiter.
            </summary>
            <value>The delimiter.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.ConversionOptions.Quote">
            <summary>
            Gets or sets the quote.
            </summary>
            <value>The quote.</value>
        </member>
        <member name="T:Bytescout.Spreadsheet.OutputFormat">
            <summary>
            Output format type
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.OutputFormat.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.OutputFormat.AsExcel">
            <summary>
            As Excel do
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.OutputFormat.OnlyDataTime">
            <summary>
            format DateTime only
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Protection.EncryptionType">
            <summary>
            Encryption method
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Protection.EncryptionType.XOR">
            <summary>
            XOR obfuscation
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Protection.EncryptionType.RC4">
            <summary>
            RC4 CryptoAPI encryption
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Protection.EncryptionType.RC4Compatible">
            <summary>
            RC4 encryption, Excel 97-2000 Compatible
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Cell">
            <summary>
            Cell class 
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.Value">
            <summary>
            Gets or sets the value of cell.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.Cell.Clear">
            <summary>
            Clears this cell.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.ValueAsExcelDisplays">
            <summary>
            Returns the formatted string value of the cell in the sam way you would see in Excel or another spreadsheet editor. Formatting uses the <see cref="T:Bytescout.Spreadsheet.Constants.NumberFormatType" /> settings to format the value.
            </summary>
            <value>The string with the formatted value.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.ValueAsHTML">
            <summary>
            Gets or sets the formatted text (Rich-Text) in HTML coded format
            </summary>
            <value>The like html presentation of formatted text.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.ValueAsString">
            <summary>
            Returns the formatted string value of the cell in the sam way you would see in Excel or another spreadsheet editor. Formatting uses the <see cref="T:Bytescout.Spreadsheet.Constants.NumberFormatType" /> settings to format the value or <see cref="P:Bytescout.Spreadsheet.Cell.NumberFormatString" /> format string.
            </summary>
            <value>The string with the formatted value.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.ValueAsDouble">
            <summary>
            Gets the value as double.
            </summary>
            <value>The value as double.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.ValueAsInteger">
            <summary>
            Gets the value as integer.
            </summary>
            <value>The value as integer.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.ValueAsBoolean">
            <summary>
            Gets a value as boolean.
            </summary>
            <value>The value as boolean.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.ValueAsUnformattedString">
            <summary>
            Gets the value as unformatted string.
            </summary>
            <value>The value as unformatted string.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.ValueAsDateTime">
            <summary>
            Gets or sets the value as date time, see type <see cref="T:System.DateTime" /></summary>
            <value>The value as <see cref="T:System.DateTime" />.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.IsInteger">
            <summary>
            Gets a value indicating whether this Cell contains integer number.
            </summary>
            <value>
                <c>true</c> if this Cell contains integer number; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.ValueDataType">
            <summary>
            Gets the type of the value data.
            </summary>
            <value>The type of the value data.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.ContainsArrayFormula">
            <summary>
            Gets a value indicating whether this cell contains an array formula.
            </summary>
            <value>
                <c>true</c> if this cell contains array formula; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.Formula">
            <summary>
            Gets or sets the formula for the cell.
            </summary>
            <value>The formula.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.Cell.Calculate">
            <summary>
            Calculates of formula this cell (if formula is set for this cell)
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.Font">
            <summary>
            Gets or sets the font of the cell.
            </summary>
            <value>The font.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.Cell.SetFontProperties(System.String,System.Boolean,System.Boolean,System.Boolean,System.Single,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the font properties.
            </summary>
            <param name="FontName">Name of the font.</param>
            <param name="IsBold">if set to <c>true</c> [is bold].</param>
            <param name="IsItalic">if set to <c>true</c> [is italic].</param>
            <param name="IsUnderline">if set to <c>true</c> [is underline].</param>
            <param name="Size">The size.</param>
            <param name="R">The red component value for the new color of the font.</param>
            <param name="G">The green component value for the new color of the font.</param>
            <param name="B">The blue component value for the new color of the font.</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.FontColor">
            <summary>
            Gets or sets the color of the font.
            </summary>
            <value>The color of the font.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.Cell.SetFontColorRGB(System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the color of the font from the specified 8-bit color values (red, green, and blue).
            </summary>
            <param name="r">The red component value for the new color of the font.</param>
            <param name="g">The green component value for the new color of the font.</param>
            <param name="b">The blue component value for the new color of the font.</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.FontColorIndex">
            <summary>
            Gets or sets the index of the font color.
            </summary>
            <value>The index of the font color.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.FontEscapement">
            <summary>
            Gets or sets the font escapement.
            </summary>
            <value>The font escapement.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.FontUnderline">
            <summary>
            Gets or sets the font underline style.
            </summary>
            <value>The font underline style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.CellFormat">
            <summary>
            Gets or sets the cell format.
            </summary>
            <value>The cell format.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.Locked">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Bytescout.Spreadsheet.COM.IExtFormat" /> is locked.
            </summary>
            <value>
                <c>true</c> if locked; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.HiddenFormula">
            <summary>
            Gets or sets a value indicating whether formula is hidden.
            </summary>
            <value>
                <c>true</c> if formula is hidden; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.AlignmentHorizontal">
            <summary>
            Gets or sets a horizontal text alignment style of the cell.
            </summary>
            <value>The horizontal text alignment style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.AlignmentVertical">
            <summary>
            Gets or sets the vertical text alignment style of the cell.
            </summary>
            <value>The vertical text alignment style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.Wrap">
            <summary>
            Gets or sets a value indicating a text is wrapped.
            </summary>
            <value>
                <c>true</c> if a text is wrapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.ShrinkToFit">
            <summary>
            Gets or sets a value indicating shrink content to fit into cell.
            </summary>
            <value>
                <c>true</c> if shrink to fit; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.Rotation">
            <summary>
            Gets or sets the text rotation angle for the cell.
            </summary>
            <value>The rotation angle.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.Indent">
            <summary>
            Gets or sets the Indent value for the cell.
            </summary>
            <value>The rotation angle.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.TextDirection">
            <summary>
            Gets or sets the reading order.
            </summary>
            <value>Reading order.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.LeftBorderStyle">
            <summary>
            Gets or sets the left border style.
            </summary>
            <value>The left border style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.RightBorderStyle">
            <summary>
            Gets or sets the right border style.
            </summary>
            <value>The right border style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.TopBorderStyle">
            <summary>
            Gets or sets the top border style.
            </summary>
            <value>The top border style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.BottomBorderStyle">
            <summary>
            Gets or sets the bottom border style.
            </summary>
            <value>The bottom border style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.DiagonalBorderStyle">
            <summary>
            Gets or sets the diagonal border style.
            </summary>
            <value>The diagonal border style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.LeftBorderColor">
            <summary>
            Gets or sets the color of the left border.
            </summary>
            <value>The color of the left border.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.RightBorderColor">
            <summary>
            Gets or sets the color of the right border.
            </summary>
            <value>The color of the right border.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.TopBorderColor">
            <summary>
            Gets or sets the color of the top border.
            </summary>
            <value>The color of the top border.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.BottomBorderColor">
            <summary>
            Gets or sets the color of the bottom border.
            </summary>
            <value>The color of the bottom border.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.DiagonalBorderColor">
            <summary>
            Gets or sets the color of the diagonal border.
            </summary>
            <value>The color of the diagonal border.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.IsDiagonalDownLine">
            <summary>
            Gets or sets a value indicating whether this instance is diagonal line from top left to right bottom
            </summary>
            <value>
                <c>true</c> if this instance is diagonal down line; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.IsDiagonalUpLine">
            <summary>
            Gets or sets a value indicating whether this instance is diagonal line from bottom left to right top
            </summary>
            <value>
                <c>true</c> if this instance is diagonal up line; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.FillPattern">
            <summary>
            Gets or sets the fill pattern.
            </summary>
            <value>The fill pattern.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.FillPatternBackColor">
            <summary>
            Gets or sets the background color for a fill pattern.
            </summary>
            <value>The background color for a fill pattern.</value>
            <remarks>
            XLS format stores document colors in a palette of fixed size. If you use some custom colors you should store them in the palette.
            It's allowed to modify any palette color.
            XLSX format is free of this defect.
            </remarks>
            <example>
            // Register custom color in the palette to make it correctly saved in XLS document.
            Color color = ColorTranslator.FromHtml("#D99795");
            document.Workbook.Colors[0] = color;
            cell.FillPatternForeColor = color;
            </example>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.FillPatternForeColor">
            <summary>
            Gets or sets the foreground color for a fill pattern.
            </summary>
            <value>The foreground color for a fill pattern.</value>
            <remarks>
            XLS format stores document colors in a palette of fixed size. If you use some custom colors you should store them in the palette.
            It's allowed to modify any palette color.
            XLSX format is free of this defect.
            </remarks>
            <example>
            // Register custom color in the palette to make it correctly saved in XLS document.
            Color color = ColorTranslator.FromHtml("#D99795");
            document.Workbook.Colors[0] = color;
            cell.FillPatternForeColor = color;
            </example>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.Merged">
            <summary>
            Gets a value indicating whether this <see cref="T:Bytescout.Spreadsheet.Cell" /> is merged.
            </summary>
            <value>
                <c>true</c> if merged; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.MergedWith">
            <summary>
            Gets the <see cref="T:Bytescout.Spreadsheet.Range" /> merged with this cell. 
            </summary>
            <value>The <see cref="T:Bytescout.Spreadsheet.Range" /> merged with this cell.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.MergedWithCell">
            <summary>
            Gets the top left cell of <see cref="T:Bytescout.Spreadsheet.Range" /> merged this with cell. 
            </summary>
            <value>The top left cell of <see cref="T:Bytescout.Spreadsheet.Range" /> merged this with cell.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.Validation">
            <summary>
            Gets the Validation object that represents data validation for the specified cell.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.NumberFormatString">
            <summary>
            Gets or sets the number format string.
            </summary>
            <value>The number format string.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Cell.ValueDataTypeByNumberFormatString">
            <summary>
            Gets or sets the type (<see cref="T:Bytescout.Spreadsheet.Constants.NumberFormatType" />) of the number format. 
            </summary>
            <value>The type of the number format.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.Cell.GetAddress">
            <summary>
             Returns address of the cell as CellAddress object.
            </summary>
            <returns>Address of the cell.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Cell.ToDateTime">
            <summary>
            Return the cell value as date time, see type <see cref="T:System.DateTime" /></summary>
            <value>The cell value as <see cref="T:System.DateTime" />.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.Cell.ToHTML">
            <summary>
            Return the formatted text (Rich-Text) in HTML coded format
            </summary>
            <returns>The like html presentation of formatted text</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Cell.ToInteger">
            <summary>
            Return cell value as integer, see type <see cref="T:System.Int32" />.
            </summary>
            <returns>The cell value as <see cref="T:System.Int32" /></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Cell.ToDouble">
            <summary>
            Return cell value as double, see type <see cref="T:System.Double" />.
            </summary>
            <returns>The cell value as <see cref="T:System.Double" /></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Cell.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Cell.Finalize">
            <summary>
            Cell destructor
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.Cell.Dispose">
            <summary>
            Disposes the instance
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.Cell.Dispose(System.Boolean)">
            <summary>
            Disposes the instance
            </summary>
            <param name="disposeManagedResources"></param>
        </member>
        <member name="T:Bytescout.Spreadsheet.Column">
            <summary>
            Column class 
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.Column.#ctor(Bytescout.Spreadsheet.Worksheet,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.Column" /> class.
            </summary>
            <param name="sheet">The sheet.</param>
            <param name="index">index of the column.</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.Column.Width">
            <summary>
            Gets or sets the width of column.
            </summary>
            <value>The width in pixels.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Column.WidthInChars">
            <summary>
            Gets or sets the width of column.
            </summary>
            <value>The width in 1/256 of the width of the zero character.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Column.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Bytescout.Spreadsheet.Cell" /> at the specified Index.
            </summary>
            <value></value>
        </member>
        <member name="M:Bytescout.Spreadsheet.Column.AutoFit">
            <summary>
            AutoFit of column width.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Column.IsFormatted">
            <summary>
            Gets a bool value indicating that the column is formatted differently from the default format.
            </summary>
            <value>
                <c>true</c> if this column has non default format; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Column.IsNotEmptyCells">
            <summary>
            Gets a bool value indicating that the column contains only empty cells or not
            </summary>
            <value>
                <c>true</c> if this column contains not empty cells; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Column.Font">
            <summary>
            Sets the font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.Column.SetFontProperties(System.String,System.Boolean,System.Boolean,System.Boolean,System.Single,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the font properties.
            </summary>
            <param name="FontName">Name of the font.</param>
            <param name="IsBold">if set to <c>true</c> [is bold].</param>
            <param name="IsItalic">if set to <c>true</c> [is italic].</param>
            <param name="IsUnderline">if set to <c>true</c> [is underline].</param>
            <param name="Size">The size.</param>
            <param name="R">The red component value for the new color of the font.</param>
            <param name="G">The green component value for the new color of the font.</param>
            <param name="B">The blue component value for the new color of the font.</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.Column.FontColor">
            <summary>
            Gets or sets the color of the font.
            </summary>
            <value>The color of the font.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.Column.SetFontColorRGB(System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the color of the font from the specified 8-bit color values (red, green, and blue).
            </summary>
            <param name="r">The red component value for the new color of the font.</param>
            <param name="g">The green component value for the new color of the font.</param>
            <param name="b">The blue component value for the new color of the font.</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.Column.FontColorIndex">
            <summary>
            Gets or sets the index of the font color.
            </summary>
            <value>The index of the font color.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Column.FontEscapement">
            <summary>
            Gets or sets the font escapement.
            </summary>
            <value>The font escapement.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Column.FontUnderline">
            <summary>
            Sets the font underline style.
            </summary>
            <value>The font underline style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Column.CellFormat">
            <summary>
            Gets or sets the cell format.
            </summary>
            <value>The cell format.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Column.Locked">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Bytescout.Spreadsheet.COM.IExtFormat" /> is locked.
            </summary>
            <value>
                <c>true</c> if locked; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Column.HiddenFormula">
            <summary>
            Gets or sets a value indicating whether formula is hidden.
            </summary>
            <value>
                <c>true</c> if formula is hidden; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Column.AlignmentHorizontal">
            <summary>
            Sets the horizontal text alignment style of the column.
            </summary>
            <value>The horizontal text alignment style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Column.AlignmentVertical">
            <summary>
            Sets the vertical text alignment style of the column.
            </summary>
            <value>The vertical text alignment style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Column.Wrap">
            <summary>
            Sets a value indicating whether a text is wrapped.
            </summary>
            <value>
                <c>true</c> if a text is wrapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Column.ShrinkToFit">
            <summary>
            Gets or sets a value indicating shrink content to fit into cell.
            </summary>
            <value>
                <c>true</c> if shrink to fit; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Column.Rotation">
            <summary>
            Sets the text rotation angle for the row.
            </summary>
            <value>The rotation angle.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Column.Indent">
            <summary>
            Gets or sets the Indent value for the cell.
            </summary>
            <value>The rotation angle.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Column.TextDirection">
            <summary>
            Gets or sets the reading order.
            </summary>
            <value>Reading order.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Column.LeftBorderStyle">
            <summary>
            Sets the left border style.
            </summary>
            <value>The left border style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Column.RightBorderStyle">
            <summary>
            Sets the right border style.
            </summary>
            <value>The right border style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Column.TopBorderStyle">
            <summary>
            Sets the top border style.
            </summary>
            <value>The top border style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Column.BottomBorderStyle">
            <summary>
            Sets the bottom border style.
            </summary>
            <value>The bottom border style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Column.DiagonalBorderStyle">
            <summary>
            Gets or sets the diagonal border style.
            </summary>
            <value>The diagonal border style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Column.LeftBorderColor">
            <summary>
            Sets the color of the left border.
            </summary>
            <value>The color of the left border.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Column.RightBorderColor">
            <summary>
            Sets the color of the right border.
            </summary>
            <value>The color of the right border.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Column.TopBorderColor">
            <summary>
            Sets the color of the top border.
            </summary>
            <value>The color of the top border.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Column.BottomBorderColor">
            <summary>
            Sets the color of the bottom border.
            </summary>
            <value>The color of the bottom border.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Column.DiagonalBorderColor">
            <summary>
            Gets or sets the color of the diagonal border.
            </summary>
            <value>The color of the diagonal border.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Column.IsDiagonalDownLine">
            <summary>
            Gets or sets a value indicating whether this instance is diagonal line from top left to right bottom
            </summary>
            <value>
                <c>true</c> if this instance is diagonal down line; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Column.IsDiagonalUpLine">
            <summary>
            Gets or sets a value indicating whether this instance is diagonal line from bottom left to right top
            </summary>
            <value>
                <c>true</c> if this instance is diagonal up line; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Column.FillPattern">
            <summary>
            Sets the fill pattern of the column.
            </summary>
            <value>The fill pattern.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Column.FillPatternBackColor">
            <summary>
            Sets the background color for a fill pattern of the column.
            </summary>
            <value>The background color for a fill pattern.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Column.FillPatternForeColor">
            <summary>
            Sets the foreground color for a fill pattern of the column.
            </summary>
            <value>The foreground color for a fill pattern.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Column.NumberFormat">
            <summary>
            Gets or sets the number format string.
            </summary>
            <value>The number format string.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Column.Hidden">
            <summary>
            Gets or sets indicating that the column is hidden.
            </summary>
            <value>
                <c>true</c> if this column is hidden; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Bytescout.Spreadsheet.Column.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="T:Bytescout.Spreadsheet.Columns">
            <summary>
            The list of Column class
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Columns.min">
            <summary>
            Min column index
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Columns.max">
            <summary>
            Max column index
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Columns.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Bytescout.Spreadsheet.Column" /> with the specified Index.
            </summary>
            <value></value>
        </member>
        <member name="M:Bytescout.Spreadsheet.Columns.Insert(System.Int32,System.Int32)">
            <summary>
            Inserts the specified ColumnCount Columns into the worksheet at the specified Index.
            </summary>
            <param name="Index">The index at which Column should be inserted.</param>
            <param name="ColumnCount">The Columns count.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Columns.Insert(System.Int32)">
            <summary>
            Inserts Column into the worksheet at the specified Index.
            </summary>
            <param name="Index">The index at which Column should be inserted.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Columns.Delete(System.Int32,System.Int32)">
            <summary>
            Deletes columns from First to Last indexes.
            </summary>
            <param name="First">The index first column.</param>
            <param name="Last">The index last column.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Columns.Delete(System.Int32)">
            <summary>
            Deletes the column specified index.
            </summary>
            <param name="Index">The column index.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Columns.CopyAndPaste(System.Int32,System.Int32,System.Int32)">
            <summary>
            Makes a copy and paste of the columns celection (First to Last columns) into Dest column (referenced by Dest index)
            </summary>
            <param name="First">The index of first column for copy.</param>
            <param name="Last">The index of last column for copy.</param>
            <param name="Dest">The index destination column.</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.Columns.FirstFormatedColumn">
            <summary>
            Gets the number of first formated column.
            </summary>
            <value>The number of first formated column.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Columns.LastFormatedColumn">
            <summary>
            Gets the number of last formated column.
            </summary>
            <value>The number of last formated column.</value>
        </member>
        <member name="T:Bytescout.Spreadsheet.ExtendedFormat">
            <summary>
            Extended format class
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.ExtendedFormat.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.ExtendedFormat.op_Equality(Bytescout.Spreadsheet.ExtendedFormat,Bytescout.Spreadsheet.ExtendedFormat)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.ExtendedFormat.op_Inequality(Bytescout.Spreadsheet.ExtendedFormat,Bytescout.Spreadsheet.ExtendedFormat)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.ExtendedFormat.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
                <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.ExtendedFormat.Equals(Bytescout.Spreadsheet.ExtendedFormat)">
            <summary>
            Equalses the specified ExtendedFormat.
            </summary>
            <param name="xf">The ExtendedFormat.</param>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.ExtendedFormat.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.ExtendedFormat.Dispose">
            <summary>
            Disposes the instance
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.ExtendedFormat.Dispose(System.Boolean)">
            <summary>
            Disposes the object
            </summary>
            <param name="disposeManagedResources">dispose managed resources</param>
        </member>
        <member name="T:Bytescout.Spreadsheet.HTMLTemplate">
            <summary>
            HTML Template
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.HTMLTemplate.TableHeader">
            <summary>
            Gets or sets the table header.
            </summary>
            <value>The table header.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.HTMLTemplate.CellHeader">
            <summary>
            Gets or sets the cell header.
            </summary>
            <value>The cell header.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.HTMLTemplate.SaveHTML(Bytescout.Spreadsheet.Worksheet,System.IO.StreamWriter)">
            <summary>
            Saves the HTML.
            </summary>
            <param name="sheet">The sheet.</param>
            <param name="file">The file.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.HTMLTemplate.SaveAsHTML(Bytescout.Spreadsheet.Worksheet,System.IO.Stream)">
            <summary>
            Saves as HTML.
            </summary>
            <param name="sheet">The sheet.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.HTMLTemplate.SaveAsHTML(Bytescout.Spreadsheet.Worksheet,System.String)">
            <summary>
            Saves as HTML.
            </summary>
            <param name="sheet">The sheet.</param>
            <param name="FileName">Name of the file.</param>
        </member>
        <member name="T:Bytescout.Spreadsheet.CellsSelectionMethod">
            <summary>
            Cells celection method
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.CellsSelectionMethod.ExcelLikeExtendToMergedCellsIfAny">
            <summary>
            (0) Excel like style: the selection extends to merged cells if there are any part of merged cells are included into the selection
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.CellsSelectionMethod.ErrorOnIntersectionWithMergedCells">
            <summary>
            (1) Do not extend to merged cells but through an exception if the selection intersects with merged cells (if any)
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.CellsSelectionMethod.NoErrorOnIntersectionWithMergedCells">
            <summary>
            (2) Do not extend to merged cells but do NOT through an exception if the selection intersects with merged cell (if any)
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Range">
            <summary>
            Range class 
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.Range.Address">
            <summary>
            Returns the range reference.
            </summary>
            <returns>The range reference</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Range.Address(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Returns the range reference.
            </summary>
            <param name="RowAbsolute">if set to <c>true</c> return the row part of the reference as an absolute reference.</param>
            <param name="ColumnAbsolute">if set to <c>true</c> return the column part of the reference as an absolute reference.</param>
            <param name="External">if set to <c>true</c> return an external reference.</param>
            <returns></returns>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.Areas">
            <summary>
            Gets an <see cref="T:Bytescout.Spreadsheet.Areas" /> collection that represents all the ranges in a multiple-area selection.
            </summary>
            <value>The <see cref="T:Bytescout.Spreadsheet.Areas" /> collection.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.Column">
            <summary>
            Gets the zero based column number of the first column in the first area (Areas[0]) of the <see cref="T:Bytescout.Spreadsheet.Range" /> .
            </summary>
            <value>The zero based column number of the first column in the first area.</value>
            <remarks>
            Column A returns 0, column B returns 1, and so on.
            </remarks>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.Columns">
            <summary>
            Gets a <see cref="T:Bytescout.Spreadsheet.Range" /> object that represents the columns in the specified range.
            </summary>
            <value>The <see cref="T:Bytescout.Spreadsheet.Range" /> object that represents the columns.</value>
            <remarks>
            When applied to a Range object that's a multiple-area selection, this property returns columns from only the first area of the range.
            </remarks>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.Count">
            <summary>
            Gets the number of cells in the <see cref="T:Bytescout.Spreadsheet.Range" />.
            </summary>
            <value>The number of cells in the <see cref="T:Bytescout.Spreadsheet.Range" />.</value>
            <example> This samples demonstrate the features of the Count property
            <code>
            int CellCount = worksheet.Range("A1:B3").Count; // 6 cells
            int RowCount1 = worksheet.Range("A1:B3").Rows.Count; // 3 rows
            int RowCount2 = worksheet.Range("1:3").Count; // 3 rows
            int ColumnCount1 = worksheet.Range("A1:B3").Columns.Count; // 2 columns
            int ColumnCount2 = worksheet.Range("A:B").Count; // 2 columns
            </code></example>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.Row">
            <summary>
            Gets the zero based row number of the first row in the first area (Areas[0]) of the <see cref="T:Bytescout.Spreadsheet.Range" /> .
            </summary>
            <value>The zero based row number of the first row in the first area.</value>
            <remarks>
            Row 1 returns 0, row 2 returns 1, and so on.
            </remarks>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.Rows">
            <summary>
            Gets a <see cref="T:Bytescout.Spreadsheet.Range" /> object that represents the rows in the specified range.
            </summary>
            <value>The <see cref="T:Bytescout.Spreadsheet.Range" /> object that represents the rows.</value>
            <remarks>
            When applied to a Range object that's a multiple-area selection, this property returns rows from only the first area of the range.
            </remarks>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.Value">
            <summary>
            Sets the value of range.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.ValueAsHTML">
            <summary>
            Sets the formatted text (Rich-Text) in HTML coded format
            </summary>
            <value>The like html presentation of formatted text.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.Formula">
            <summary>
            Sets the formula for the range.
            </summary>
            <value>The formula.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.TopRowIndex">
            <summary>
            Index of the top row of the range.
            </summary>
            <value>Top row index.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.BottomRowIndex">
            <summary>
            Index of the bottom row of the range.
            </summary>
            <value>Bottom row index.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.LeftColumnIndex">
            <summary>
            Index of the left column of the range.
            </summary>
            <value>Left column index.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.RightColumnIndex">
            <summary>
            Index of the right column of the range.
            </summary>
            <value>Right column index.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.Range.CopyInto(System.Int32,System.Int32)">
            <summary>
            Makes a copy and paste of this range into a new range specified by top left cell (row, col indexes) 
            </summary>
            <param name="row">The top row of destination range.</param>
            <param name="col">The left col of destination range.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Range.CopyInto(System.String)">
            <summary>
            Makes a copy and paste of this range into a new range specified by top left cell (referenced by A1-style name, for example: A1, F3 or C4)
            </summary>
            <param name="A1Ref">The A1-style top left cell reference of destination range.</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.IsNotEmptyCells">
            <summary>
            Gets a bool value indicating that the range contains only empty cells or not
            </summary>
            <value>
                <c>true</c> if this range contains not empty cells; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.Font">
            <summary>
            Sets the font of the cell.
            </summary>
            <value>The font.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.FontColor">
            <summary>
            Sets the color of the font.
            </summary>
            <value>The color of the font.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.FontColorIndex">
            <summary>
            Sets the index of the font color.
            </summary>
            <value>The index of the font color.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.FontEscapement">
            <summary>
            Sets the font escapement.
            </summary>
            <value>The font escapement.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.FontUnderline">
            <summary>
            Sets the font underline style.
            </summary>
            <value>The font underline style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.CellFormat">
            <summary>
            Sets the cell format.
            </summary>
            <value>The cell format.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.Locked">
            <summary>
            Sets a value indicating whether this <see cref="T:Bytescout.Spreadsheet.COM.IRange" /> is locked.
            </summary>
            <value>
                <c>true</c> if locked; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.HiddenFormula">
            <summary>
            Gets or sets a value indicating whether formula is hidden.
            </summary>
            <value>
                <c>true</c> if formula is hidden; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.AlignmentHorizontal">
            <summary>
            Sets a horizontal text alignment style of the cell.
            </summary>
            <value>The horizontal text alignment style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.AlignmentVertical">
            <summary>
            Sets the vertical text alignment style of the cell.
            </summary>
            <value>The vertical text alignment style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.Wrap">
            <summary>
            Sets a value indicating a text is wrapped.
            </summary>
            <value>
                <c>true</c> if a text is wrapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.ShrinkToFit">
            <summary>
            Gets or sets a value indicating shrink content to fit into cell.
            </summary>
            <value>
                <c>true</c> if shrink to fit; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.Rotation">
            <summary>
            Sets the text rotation angle for the cell.
            </summary>
            <value>The rotation angle.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.Indent">
            <summary>
            Gets or sets the Indent value for the cell.
            </summary>
            <value>The rotation angle.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.TextDirection">
            <summary>
            Gets or sets the reading order.
            </summary>
            <value>Reading order.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.LeftBorderStyle">
            <summary>
            Sets the left border style.
            </summary>
            <value>The left border style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.RightBorderStyle">
            <summary>
            Sets the right border style.
            </summary>
            <value>The right border style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.TopBorderStyle">
            <summary>
            Sets the top border style.
            </summary>
            <value>The top border style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.BottomBorderStyle">
            <summary>
            Sets the bottom border style.
            </summary>
            <value>The bottom border style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.DiagonalBorderStyle">
            <summary>
            Sets the diagonal border style.
            </summary>
            <value>The diagonal border style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.InnerBorderStyle">
            <summary>
            Sets the inner border style.
            </summary>
            <value>The inner border style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.OuterBorderStyle">
            <summary>
            Sets the outer border style.
            </summary>
            <value>The outer border style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.LeftBorderColor">
            <summary>
            Sets the color of the left border.
            </summary>
            <value>The color of the left border.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.RightBorderColor">
            <summary>
            Sets the color of the right border.
            </summary>
            <value>The color of the right border.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.TopBorderColor">
            <summary>
            Sets the color of the top border.
            </summary>
            <value>The color of the top border.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.BottomBorderColor">
            <summary>
            Sets the color of the bottom border.
            </summary>
            <value>The color of the bottom border.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.DiagonalBorderColor">
            <summary>
            Sets the color of the diagonal border.
            </summary>
            <value>The color of the diagonal border.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.InnerBorderColor">
            <summary>
            Sets the color of the inner border.
            </summary>
            <value>The color of the inner border.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.OuterBorderColor">
            <summary>
            Sets the color of the outer border.
            </summary>
            <value>The color of the outer border.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.IsDiagonalDownLine">
            <summary>
            Sets a value indicating whether this instance is diagonal down line.
            </summary>
            <value>
                <c>true</c> if this instance is diagonal down line; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.IsDiagonalUpLine">
            <summary>
            Sets a value indicating whether this instance is diagonal up line.
            </summary>
            <value>
                <c>true</c> if this instance is diagonal up line; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.FillPattern">
            <summary>
            Sets the fill pattern.
            </summary>
            <value>The fill pattern.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.FillPatternBackColor">
            <summary>
            Sets the background color for a fill pattern.
            </summary>
            <value>The background color for a fill pattern.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.FillPatternForeColor">
            <summary>
            Sets the foreground color for a fill pattern.
            </summary>
            <value>The foreground color for a fill pattern.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.Range.Merge">
            <summary>
            Merges cells in the range.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.Range.UnMerge">
            <summary>
            Unmerges cells in the range.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.NumberFormatString">
            <summary>
            Sets the number format string.
            </summary>
            <value>The number format string.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Range.ValueDataTypeByNumberFormatString">
            <summary>
            Sets the type (<see cref="P:Bytescout.Spreadsheet.Range.ValueDataTypeByNumberFormatString" />) of the number format. 
            </summary>
            <value>The type of the number format.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.Range.Calculate">
            <summary>
            Calculates the formulas in the Range.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.Range.Sort(System.String,Bytescout.Spreadsheet.Constants.SortOrder,System.Boolean,Bytescout.Spreadsheet.Constants.SortOrientation,Bytescout.Spreadsheet.Constants.SortDataOption)">
            <summary>
            Sorts a range.
            </summary>
            <param name="Key">The sort field.</param>
            <param name="Order">The sort order.</param>
            <param name="MatchCase">if set to <c>true</c> to do a case-sensitive sort.</param>
            <param name="Orientation">The sort orientation.</param>
            <param name="DataOption">Specifies how to sort text in Key.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Range.Sort(System.String,Bytescout.Spreadsheet.Constants.SortOrder,System.String,Bytescout.Spreadsheet.Constants.SortOrder,System.String,Bytescout.Spreadsheet.Constants.SortOrder,System.Boolean,Bytescout.Spreadsheet.Constants.SortOrientation,Bytescout.Spreadsheet.Constants.SortDataOption,Bytescout.Spreadsheet.Constants.SortDataOption,Bytescout.Spreadsheet.Constants.SortDataOption)">
            <summary>
            Sorts a range.
            </summary>
            <param name="Key1">The first sort field.</param>
            <param name="Order1">The sort order for the field specified in Key1.</param>
            <param name="Key2">The second sort field.</param>
            <param name="Order2">The sort order for the field specified in Key2.</param>
            <param name="Key3">The third sort field.</param>
            <param name="Order3">The sort order for the field specified in Key3.</param>
            <param name="MatchCase">if set to <c>true</c> to do a case-sensitive sort.</param>
            <param name="Orientation">The sort orientation.</param>
            <param name="DataOption1">Specifies how to sort text in Key1.</param>
            <param name="DataOption2">Specifies how to sort text in Key2.</param>
            <param name="DataOption3">Specifies how to sort text in Key3.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Range.SpecialCells(Bytescout.Spreadsheet.Constants.XlCellType,System.Object)">
            <summary>
            Returns a CellList object that represents all the cells that match the specified type and value.
            </summary>
            <param name="Type">The cells to include.</param>
            <param name="Value">Can be one of the XlSpecialCellsValue values or null.</param>
            <returns></returns>
        </member>
        <member name="T:Bytescout.Spreadsheet.Row">
            <summary>
            Row class
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Row.min">
            <summary>
            Min cell
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Row.max">
            <summary>
            Max cell
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Row.recalcMinMax">
            <summary>
            Recalculate min and max
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.Row.#ctor(Bytescout.Spreadsheet.Worksheet,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.Row" /> class.
            </summary>
            <param name="sheet">The sheet.</param>
            <param name="index">index of the row.</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.Row.Height">
            <summary>
            Gets or sets the height of row.
            </summary>
            <value>The height of row, in pixel.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Row.HeightInTwips">
            <summary>
            Gets or sets the height of row.
            </summary>
            <value>The height of row, in twips.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Row.UseStandardHeight">
            <summary>
            Gets or sets a value indicating that row height equals the standard height of the sheet.
            </summary>
            <value>
                <c>true</c> if the row height equals the standard height of the sheet; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Row.Hidden">
            <summary>
            Gets or sets indicating that the row is hidden.
            </summary>
            <value>
                <c>true</c> if this row is hidden; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Bytescout.Spreadsheet.Row.AutoFit">
            <summary>
            AutoFit of row height.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Row.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Bytescout.Spreadsheet.Cell" /> at the specified Index.
            </summary>
            <value></value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Row.ColumnMin">
            <summary>
            Gets the index of the first column that contains a cell populated with data or formatting in the row. 
            </summary>
            <value>The index of the column.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Row.ColumnMax">
            <summary>
            Gets the index of the last column that contains a cell populated with data or formatting in the row. 
            </summary>
            <value>The index of the column.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Row.IsFormatted">
            <summary>
            Gets a bool value indicating that the row is formatted differently from the default format.
            </summary>
            <value>
                <c>true</c> if this row has non default format; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Row.IsNotEmptyCells">
            <summary>
            Gets a bool value indicating that the row contains only empty cells or not
            </summary>
            <value>
                <c>true</c> if this row contains not empty cells; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Bytescout.Spreadsheet.Row.InsertCell(System.Int32,System.Int32)">
            <summary>
            Inserts the cells.
            </summary>
            <param name="Index">The index at which cell should be inserted.</param>
            <param name="CellCount">The cell count.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Row.DeleteCell(System.Int32,System.Int32)">
            <summary>
            Deletes the cells.
            </summary>
            <param name="First">The index first cell.</param>
            <param name="Last">The index last cell.</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.Row.Font">
            <summary>
            Sets the font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.Row.SetFontProperties(System.String,System.Boolean,System.Boolean,System.Boolean,System.Single,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the font properties.
            </summary>
            <param name="FontName">Name of the font.</param>
            <param name="IsBold">if set to <c>true</c> [is bold].</param>
            <param name="IsItalic">if set to <c>true</c> [is italic].</param>
            <param name="IsUnderline">if set to <c>true</c> [is underline].</param>
            <param name="Size">The size.</param>
            <param name="R">The red component value for the new color of the font.</param>
            <param name="G">The green component value for the new color of the font.</param>
            <param name="B">The blue component value for the new color of the font.</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.Row.FontColor">
            <summary>
            Gets or sets the color of the font.
            </summary>
            <value>The color of the font.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.Row.SetFontColorRGB(System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the color of the font from the specified 8-bit color values (red, green, and blue).
            </summary>
            <param name="r">The red component value for the new color of the font.</param>
            <param name="g">The green component value for the new color of the font.</param>
            <param name="b">The blue component value for the new color of the font.</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.Row.FontColorIndex">
            <summary>
            Gets or sets the index of the font color.
            </summary>
            <value>The index of the font color.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Row.FontEscapement">
            <summary>
            Gets or sets the font escapement.
            </summary>
            <value>The font escapement.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Row.FontUnderline">
            <summary>
            Sets the font underline style.
            </summary>
            <value>The font underline style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Row.CellFormat">
            <summary>
            Gets or sets the cell format
            </summary>
            <value>The cells format.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Row.Locked">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Bytescout.Spreadsheet.Row" /> is locked or not
            </summary>
            <value>
                <c>true</c> if locked; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Row.HiddenFormula">
            <summary>
            Gets or sets a value indicating whether formula is hidden.
            </summary>
            <value>
                <c>true</c> if formula is hidden; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Row.AlignmentHorizontal">
            <summary>
            Sets the horizontal text alignment style of the row.
            </summary>
            <value>The horizontal text alignment style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Row.AlignmentVertical">
            <summary>
            Sets the vertical text alignment style of the row.
            </summary>
            <value>The vertical text alignment style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Row.Wrap">
            <summary>
            Sets a value indicating whether a text is wrapped.
            </summary>
            <value>
                <c>true</c> if a text is wrapped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Row.ShrinkToFit">
            <summary>
            Gets or sets a value indicating shrink content to fit into cell.
            </summary>
            <value>
                <c>true</c> if shrink to fit; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Row.Rotation">
            <summary>
            Sets the text rotation angle for the row.
            </summary>
            <value>The rotation angle.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Row.Indent">
            <summary>
            Gets or sets the Indent value for the cell.
            </summary>
            <value>The rotation angle.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Row.TextDirection">
            <summary>
            Gets or sets the reading order.
            </summary>
            <value>Reading order.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Row.LeftBorderStyle">
            <summary>
            Sets the left border style.
            </summary>
            <value>The left border style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Row.RightBorderStyle">
            <summary>
            Sets the right border style.
            </summary>
            <value>The right border style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Row.TopBorderStyle">
            <summary>
            Sets the top border style.
            </summary>
            <value>The top border style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Row.BottomBorderStyle">
            <summary>
            Sets the bottom border style.
            </summary>
            <value>The bottom border style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Row.DiagonalBorderStyle">
            <summary>
            Gets or sets the diagonal border style.
            </summary>
            <value>The diagonal border style.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Row.LeftBorderColor">
            <summary>
            Sets the color of the left border.
            </summary>
            <value>The color of the left border.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Row.RightBorderColor">
            <summary>
            Sets the color of the right border.
            </summary>
            <value>The color of the right border.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Row.TopBorderColor">
            <summary>
            Sets the color of the top border.
            </summary>
            <value>The color of the top border.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Row.BottomBorderColor">
            <summary>
            Sets the color of the bottom border.
            </summary>
            <value>The color of the bottom border.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Row.DiagonalBorderColor">
            <summary>
            Gets or sets the color of the diagonal border.
            </summary>
            <value>The color of the diagonal border.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Row.IsDiagonalDownLine">
            <summary>
            Gets or sets a value indicating whether this instance is diagonal down line
            </summary>
            <value>
                <c>true</c> if this instance is diagonal down line; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Row.IsDiagonalUpLine">
            <summary>
            Gets or sets a value indicating whether this instance is diagonal up line
            </summary>
            <value>
                <c>true</c> if this instance is diagonal up line; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Row.FillPattern">
            <summary>
            Sets the fill pattern of the row.
            </summary>
            <value>The fill pattern.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Row.FillPatternBackColor">
            <summary>
            Sets the background color for a fill pattern of the row.
            </summary>
            <value>The background color for a fill pattern.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Row.FillPatternForeColor">
            <summary>
            Sets the foreground color for a fill pattern of the row.
            </summary>
            <value>The foreground color for a fill pattern.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Row.NumberFormat">
            <summary>
            Gets or sets the number format string.
            </summary>
            <value>The number format string.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.Row.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="T:Bytescout.Spreadsheet.Rows">
            <summary>
            The list of Row class
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Rows.min">
            <summary>
            Min row
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Rows.max">
            <summary>
            Max row
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.Rows.#ctor(Bytescout.Spreadsheet.Worksheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.Rows" /> class.
            </summary>
            <param name="sheet">The sheet.</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.Rows.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Bytescout.Spreadsheet.Row" /> with the specified Index.
            </summary>
            <value></value>
        </member>
        <member name="M:Bytescout.Spreadsheet.Rows.Add(System.Int32)">
            <summary>
            Adds the specified RowCount Row.
            </summary>
            <param name="RowCount">The row count.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Rows.Insert(System.Int32,System.Int32)">
            <summary>
            Inserts the specified RowCount Row into the List at the specified Index.
            </summary>
            <param name="Index">The index at which Row should be inserted.</param>
            <param name="RowCount">The row count.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Rows.Insert(System.Int32)">
            <summary>
            Inserts the Row into the List at the specified Index.
            </summary>
            <param name="Index">The index at which Row should be inserted.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Rows.Delete(System.Int32,System.Int32)">
            <summary>
            Deletes rows from First to Last indexes.
            </summary>
            <param name="First">The index first row.</param>
            <param name="Last">The index last row.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Rows.Delete(System.Int32)">
            <summary>
            Deletes the row.
            </summary>
            <param name="Index">The row index.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Rows.CopyAndPaste(System.Int32,System.Int32,System.Int32)">
            <summary>
            Makes a copy and paste of the rows selection (from First to Last) into a new position (referenced by Dest row index)
            </summary>
            <param name="First">The index of first row for copy.</param>
            <param name="Last">The index of last row for copy.</param>
            <param name="Dest">The index destination row.</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.Rows.FirstFormatedRow">
            <summary>
            Gets the number of first formated row.
            </summary>
            <value>The number of first formated row.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Rows.LastFormatedRow">
            <summary>
            Gets the number of last formated row.
            </summary>
            <value>The number of last formated row.</value>
        </member>
        <member name="T:Bytescout.Spreadsheet.Progress">
            <summary>
            Event handler delegate for the file loading prcess.
            </summary>
            <param name="val">Progress in percent.</param>
        </member>
        <member name="T:Bytescout.Spreadsheet.SpreadsheetOptions">
            <summary>
            Spreadsheet options class
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.SpreadsheetOptions.ThrowExceptionsOnFormatIncompatibilities">
            <summary>
            Throw the exception if data can be corrupted while saving to the file or stream
            (usually this applies, for example, if you save into XLS format while spreadsheet
            contains formatting not supported by XLS format but supported by XLSX format only)
            False by default
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.SpreadsheetOptions.ThrowExceptionsOnFormatLimits">
            <summary>
            Gets or sets a value indicating whether [throw exceptions on spreadsheet format limits].
            </summary>
            <value>
                <c>true</c> if [throw exceptions on format limits]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.SpreadsheetOptions.ThrowExceptionOnUnsupportedFormula">
            <summary>
            Gets or sets a value indicating whether [throw exception on unsupported formula].
            </summary>
            <value>
                <c>true</c> if [throw exception on unsupported formula]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.SpreadsheetOptions.ThrowExceptionOnCalculateError">
            <summary>
            Gets or sets a value indicating whether [throw exception on calculate error].
            </summary>
            <value>
                <c>true</c> if [throw exception on calculate error]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.SpreadsheetOptions.MaxRowCountAllowed">
            <summary>
            Gets the max row count allowed for the current format limitations set (see methods .SetExcel2003Limits, .SetExcel2007Limits, .SetOpenOffice3Limits to set current limitations)
            </summary>
            <value>The max row count allowed</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.SpreadsheetOptions.MaxColumnCountAllowed">
            <summary>
            Gets the max column count allowed for the current format limitations set (see methods .SetExcel2003Limits, .SetExcel2007Limits, .SetOpenOffice3Limits to set current limitations)
            </summary>
            <value>The max columns.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.SpreadsheetOptions.MaxStringLengthAllowedPerCell">
            <summary>
            Gets the max string length per cell allowed for the current format limitations set (see methods .SetExcel2003Limits, .SetExcel2007Limits, .SetOpenOffice3Limits to set current limitations)
            </summary>
            <value>The max string length per cell.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetOptions.SetExcel2003Limits">
            <summary>
            Sets Excel2003 compatible limits (string length, max column count, max row count etc)
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetOptions.SetExcel2007Limits">
            <summary>
            Sets Excel2007 compatible limits (string length, max column count, max row count etc)
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetOptions.SetOpenOffice3Limits">
            <summary>
            Sets Open Office 3 Calc compatible limits (string length, max column count, max row count etc)
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.SpreadsheetOptions.AutoFitRowsBeforeSave">
            <summary>
            Gets or sets a value indicating whether make auto-fit of rows before saving
            </summary>
            <value>
                <c>true</c> if make auto-fit of rows before saving; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Bytescout.Spreadsheet.SearchOptions">
            <summary>
            Search options class
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.SearchOptions.SearchString">
            <summary>
            String to search.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.SearchOptions.CaseSensitiveSearch">
            <summary>
            Use case sensitive search.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.SearchOptions.RegexSearch">
            <summary>
            Perform regular expression search. <see cref="P:Bytescout.Spreadsheet.SearchOptions.SearchString" /> must contain a regular expression.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.SearchOptions.SearchBackwards">
            <summary>
            Perform backward search.
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Spreadsheet">
            <summary>
            Main class for read and create XLS files
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.Spreadsheet.LoadProgress">
            <summary>
            CallBack function to fire on file loading progress tracking.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.Spreadsheet" /> class.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Spreadsheet.RegistrationName">
            <summary>
            Sets the name of the registration.
            </summary>
            <value>The name of the registration.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Spreadsheet.RegistrationKey">
            <summary>
            Sets the registration key.
            </summary>
            <value>The registration key.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Spreadsheet.UserName">
            <summary>
            Gets or sets the name of the user.
            </summary>
            <value>The name of the user.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.LoadFromFile(System.String)">
            <summary>
            Load data from file.
            </summary>
            <param name="FileName">Name of the file.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.LoadFromFile(System.String,System.String)">
            <summary>
            Load data from file.
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="Delimiter">Delimiter for text files.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.LoadFromFile(System.String,Bytescout.Spreadsheet.CacheType)">
            <summary>
            Load data from file.
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="Cache">Type of the cache.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.LoadFromFile(System.String,Bytescout.Spreadsheet.CacheType,System.String)">
            <summary>
            Load data from file.
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="Cache">Type of the cache.</param>
            <param name="Delimiter">Delimiter for text files.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.LoadFromFile(System.String,System.String,System.Text.Encoding)">
            <summary>
            Load data from file.
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="Delimiter">Delimiter for text files.</param>
            <param name="Encoding">The character encoding for text files.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.LoadFromFile(System.String,Bytescout.Spreadsheet.CacheType,System.String,System.Text.Encoding)">
            <summary>
            Load data from file.
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="Cache">Type of the cache.</param>
            <param name="Delimiter">Delimiter for text files.</param>
            <param name="Encoding">The character encoding for text files.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.LoadFromFile(System.String,Bytescout.Spreadsheet.CacheType,System.String,System.Text.Encoding,System.String)">
            <summary>
            Load data from file.
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="Cache">Type of the cache.</param>
            <param name="Delimiter">Delimiter for text files.</param>
            <param name="Encoding">The character encoding for text files.</param>
            <param name="Password">The password.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.LoadFromStream(System.IO.Stream)">
            <summary>
            Load data from stream.
            </summary>
            <param name="AStream">The stream.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.LoadFromStream(System.IO.Stream,Bytescout.Spreadsheet.CacheType)">
            <summary>
            Load data from stream.
            </summary>
            <param name="AStream">The stream.</param>
            <param name="Cache">Type of the cache.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.LoadFromStream(System.IO.Stream,Bytescout.Spreadsheet.CacheType,System.String)">
            <summary>
            Load data from stream.
            </summary>
            <param name="AStream">The stream.</param>
            <param name="Cache">Type of the cache.</param>
            <param name="Password">The password.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.LoadFromStream(System.IO.Stream,Bytescout.Spreadsheet.Constants.SpreadsheetFormatType)">
            <summary>
            Load data from stream.
            </summary>
            <param name="AStream">The stream.</param>
            <param name="SType">Type of the stream.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.LoadFromStream(System.IO.Stream,Bytescout.Spreadsheet.Constants.SpreadsheetFormatType,Bytescout.Spreadsheet.CacheType)">
            <summary>
            Load data from stream.
            </summary>
            <param name="AStream">The stream.</param>
            <param name="SType">Type of the stream.</param>
            <param name="Cache">Type of the cache.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.LoadFromStream(System.IO.Stream,Bytescout.Spreadsheet.Constants.SpreadsheetFormatType,System.String,System.Text.Encoding)">
            <summary>
            Load data from stream.
            </summary>
            <param name="AStream">The stream.</param>
            <param name="SType">Type of the stream.</param>
            <param name="Delimiter">Delimiter for text files.</param>
            <param name="Encoding">The character encoding for text files.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.LoadFromStream(System.IO.Stream,Bytescout.Spreadsheet.Constants.SpreadsheetFormatType,Bytescout.Spreadsheet.CacheType,System.String,System.Text.Encoding)">
            <summary>
            Load data from stream.
            </summary>
            <param name="AStream">The stream.</param>
            <param name="SType">Type of the stream.</param>
            <param name="Cache">Type of the cache.</param>
            <param name="Delimiter">Delimiter for text files.</param>
            <param name="Encoding">The character encoding for text files.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.LoadFromStream(System.IO.Stream,Bytescout.Spreadsheet.Constants.SpreadsheetFormatType,Bytescout.Spreadsheet.CacheType,System.String,System.Text.Encoding,System.String)">
            <summary>
            Load data from stream.
            </summary>
            <param name="AStream">The stream.</param>
            <param name="SType">Type of the stream.</param>
            <param name="Cache">Type of the cache.</param>
            <param name="Delimiter">Delimiter for text files.</param>
            <param name="Encoding">The character encoding for text files.</param>
            <param name="Password">The password.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.SaveAsXLS(System.String)">
            <summary>
            Saves data in XLS file with specified name
            </summary>
            <param name="FileName">Name of the file to save to.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.SaveAsXML(System.String,System.Int32)">
            <summary>
            Saves data in XML file with specified name
            </summary>
            <param name="FileName">Name of the file to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.SaveAsXML(System.String,System.Int32,System.Text.Encoding)">
            <summary>
            Saves data in XML file with specified name
            </summary>
            <param name="FileName">Name of the file to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
            <param name="encoding">The character encoding.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.SaveAsCSV(System.String,System.Int32)">
            <summary>
            Saves data in CSV file with specified name
            </summary>
            <param name="FileName">Name of the file to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.SaveAsCSV(System.String,System.Int32,System.String)">
            <summary>
            Saves data in CSV file with specified name
            </summary>
            <param name="FileName">Name of the file to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
            <param name="Delimiter">Delimiter string.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.SaveAsCSV(System.String,System.Int32,System.String,System.String)">
            <summary>
            Saves data in CSV file with specified name
            </summary>
            <param name="FileName">Name of the file to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
            <param name="Delimiter">Delimiter symbol.</param>
            <param name="Quote">Quotation symbol.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.SaveAsCSV(System.String,System.Int32,System.String,System.String,System.Text.Encoding)">
            <summary>
            Saves data in CSV file with specified name
            </summary>
            <param name="FileName">Name of the file to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
            <param name="Delimiter">Delimiter symbol.</param>
            <param name="Quote">Quotation symbol.</param>
            <param name="encoding">The character encoding.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.SaveAsTXT(System.String,System.Int32)">
            <summary>
            Saves data in TXT tab delimited file with specified name
            </summary>
            <param name="FileName">Name of the file to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.SaveAsTXT(System.String,System.Int32,System.String)">
            <summary>
            Saves data in TXT tab delimited file with specified name
            </summary>
            <param name="FileName">Name of the file to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
            <param name="Delimiter">Delimiter character string.</param>/// 
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.SaveAsTXT(System.String,System.Int32,System.String,System.String)">
            <summary>
            Saves data in TXT tab delimited file with specified name
            </summary>
            <param name="FileName">Name of the file to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
            <param name="Delimiter">The delimiter symbol.</param>
            <param name="QuoteSymbol">The quotation symbol.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.SaveAsTXT(System.String,System.Int32,System.String,System.String,System.Text.Encoding)">
            <summary>
            Saves data in TXT tab delimited file with specified name
            </summary>
            <param name="FileName">Name of the file to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
            <param name="Delimiter">The delimiter symbol.</param>
            <param name="QuoteSymbol">The quotation symbol.</param>
            <param name="encoding">The character encoding.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.SaveAsHTML(System.String)">
            <summary>
            Saves spreadsheet in a HTML format file. 
            The second and subsequent worksheets of the spreadsheet will be saved 
            in separate files with auto-generated names.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns>List of generated HTML files.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.SaveAsHTML(System.String,System.Boolean)">
            <summary>
            Saves spreadsheet in a HTML format file. 
            The second and subsequent worksheets of the spreadsheet will be saved 
            in separate files with auto-generated names.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="createNavigationLinks">If true, the method will create links for navigation between generated HTML files.</param>
            <returns>List of generated HTML files.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.SaveAsPDF(System.String)">
            <summary>
            Saves spreadsheet to PDF file with specified name.
            </summary>
            <param name="FileName">Name of the file to save to.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.SaveAsPDF(System.String,System.Boolean)">
            <summary>
             Saves spreadsheet to PDF file with specified name.
             </summary>
            <param name="FileName">Name of the file to save to.</param>
            <param name="autoSize">Automatic document sizing. If <c>false</c>, the page size wiil be taken from worksheet page setup.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.SaveAsXLSX(System.String)">
            <summary>
            Saves data in XLSX format to a file with specified name
            </summary>
            <param name="FileName">Name of the file to save to.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.SaveAsXLSX(System.String,System.String)">
            <summary>
            Saves data in XLSX format to a file with specified name
            </summary>
            <param name="FileName">Name of the file to save to.</param>
            <param name="Password">The password.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.SaveAs(System.String,Bytescout.Spreadsheet.Constants.SpreadsheetFormatType)">
            <summary>
            Saves data in XLS or XLSX file FileName
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="SType">The format in which save a file.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.SaveAs(System.String)">
            <summary>
            Saves data in XLS or XLSX file FileName
            </summary>
            <param name="FileName">Name of the file.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.SaveToStreamXLS(System.IO.Stream)">
            <summary>
            Saves data in XLS format to a given stream
            </summary>
            <param name="AStream">Stream to save to.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.SaveToStreamXLSX(System.IO.Stream)">
            <summary>
            Saves data in XLSX format to a given stream
            </summary>
            <param name="stream">Stream to save to.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.SaveToStreamXLSX(System.IO.Stream,System.String)">
            <summary>
            Saves data in XLSX format to a given stream
            </summary>
            <param name="stream">Stream to save to.</param>
            <param name="Password">The password.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.SaveToStreamXML(System.IO.Stream,System.Int32)">
            <summary>
            Saves data in XML format to a given stream
            </summary>
            <param name="AStream">Stream to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.SaveToStreamXML(System.IO.Stream,System.Int32,System.Text.Encoding)">
            <summary>
            Saves data in XML format to a given stream
            </summary>
            <param name="AStream">Stream to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
            <param name="encoding">The character encoding.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.SaveToStreamHTML(System.IO.Stream)">
            <summary>
            Saves first worksheet of spreadsheet as HTML document to a given stream.
            </summary>
            <param name="stream">The stream to save to.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.SaveToStreamHTML(System.IO.Stream,System.Int32)">
            <summary>
            Saves a worksheet of spreadsheet as HTML document to a given stream.
            </summary>
            <param name="stream">The stream to save to.</param>
            <param name="sheet">The worksheet to save.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.SaveToStreamCSV(System.IO.Stream,System.Int32)">
            <summary>
            Saves data in CSV format to a given stream
            </summary>
            <param name="AStream">Stream to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.SaveToStreamCSV(System.IO.Stream,System.Int32,System.String)">
            <summary>
            Saves data in CSV format to a given stream
            </summary>
            <param name="AStream">Stream to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
            <param name="Delimiter">Delimiter string.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.SaveToStreamCSV(System.IO.Stream,System.Int32,System.String,System.String)">
            <summary>
            Saves data in CSV format to a given stream
            </summary>
            <param name="AStream">Stream to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
            <param name="Delimiter">Delimiter symbol.</param>
            <param name="Quote">Quotation symbol.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.SaveToStreamCSV(System.IO.Stream,System.Int32,System.String,System.String,System.Text.Encoding)">
            <summary>
            Saves data in CSV format to a given stream
            </summary>
            <param name="AStream">Stream to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
            <param name="Delimiter">Delimiter symbol.</param>
            <param name="Quote">Quotation symbol.</param>
            <param name="encoding">The character encoding.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.SaveToStreamTXT(System.IO.Stream,System.Int32)">
            <summary>
            Saves data in TXT format to a given stream
            </summary>
            <param name="AStream">Stream to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.SaveToStreamTXT(System.IO.Stream,System.Int32,System.String)">
            <summary>
            Saves data in TXT format to a given stream
            </summary>
            <param name="AStream">Stream to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
            <param name="Delimiter">Delimiter character string.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.SaveToStreamTXT(System.IO.Stream,System.Int32,System.String,System.String)">
            <summary>
            Saves data in TXT format to a given stream
            </summary>
            <param name="AStream">Stream to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
            <param name="Delimiter">The delimiter symbol.</param>
            <param name="QuoteSymbol">The quotation symbol.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.SaveToStreamTXT(System.IO.Stream,System.Int32,System.String,System.String,System.Text.Encoding)">
            <summary>
            Saves data in TXT format to a given stream
            </summary>
            <param name="AStream">Stream to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
            <param name="Delimiter">The delimiter symbol.</param>
            <param name="QuoteSymbol">The quotation symbol.</param>
            <param name="encoding">The character encoding.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.SaveToStream(System.IO.Stream)">
            <summary>
            Saves data in XLS format to a given stream
            </summary>
            <param name="AStream">Stream to save to.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.SaveToStream(System.IO.Stream,Bytescout.Spreadsheet.Constants.SpreadsheetFormatType)">
            <summary>
            Saves data in XLS or XLSX format to a given stream
            </summary>
            <param name="AStream">Stream to save to.</param>
            <param name="SType">The format in which saves data.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.GetAsBytesArray(Bytescout.Spreadsheet.Constants.SpreadsheetFormatType)">
            <summary>
            Gets the bytes of spreadsheet saved as document with specified type.
            </summary>
            <param name="type">The type to use while retrieving bytes.</param>
            <returns>The bytes of spreadsheet saved as document with specified type.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.GetAsBytesArrayXLS">
            <summary>
            Gets the bytes of spreadsheet saved as XLS document.
            </summary>
            <returns>The bytes of spreadsheet saved as XLS document.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.GetAsBytesArrayXLSX">
            <summary>
            Gets the bytes of spreadsheet saved as XLSX document.
            </summary>
            <returns>The bytes of spreadsheet saved as XLSX document.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.GetAsBytesArrayCSV">
            <summary>
            Gets the bytes of spreadsheet saved as CSV document.
            </summary>
            <returns>The bytes of spreadsheet saved as CSV document.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.GetAsBytesArrayTXT">
            <summary>
            Gets the bytes of spreadsheet saved as text document.
            </summary>
            <returns>The bytes of spreadsheet saved as text document.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.GetAsBytesArrayXML">
            <summary>
            Gets the bytes of spreadsheet saved as XML document.
            </summary>
            <returns>The bytes of spreadsheet saved as XML document.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.GetAsBytesArrayHTML">
            <summary>
            Gets the bytes of spreadsheet saved as HTML document.
            </summary>
            <returns>The bytes of spreadsheet saved as HTML document.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.GetAsBytesArrayHTML(System.Int32)">
            <summary>
            Gets the bytes of specified worksheet page saved as HTML document.
            </summary>
            <param name="worksheetIndex">Worksheet index.</param>
            <returns>The bytes of specified worksheet page saved as HTML document.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.ImportFromList(System.Collections.IList)">
            <summary>
            Import from IList of rows. Each row will contain IList of columns.
            </summary>
            <param name="list">List of rows. Each row should contain an IList of columns</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.ImportFromList(System.Collections.IList,System.Int32)">
            <summary>
            Import from IList of rows to the specified worksheet
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.ImportFromList(System.Collections.IList,System.String)">
            <summary>
            Import from IList of rows to the specified worksheet
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.ExportToList(System.Collections.IList)">
            <summary>
            Export rows to provided IList. Each row is String[] array of column values.
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.ExportToList(System.Collections.IList,System.String)">
            <summary>
            Export the named worksheet to the list
            </summary>
            <param name="list">List must be a 2 dimensional string array</param>
            <param name="worksheetName">Name of worksheet to export</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.ExportToList(System.Collections.IList,System.Int32)">
            <summary>
            Export the worksheet specified by index to the list
            </summary>
            <param name="list">List must be a 2 dimensional string array</param>
            <param name="worksheetIndex">Index of worksheet to export</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.ImportFromJaggedArray(System.String[][])">
            <summary>
            Import from jagged array.
            </summary>
            <param name="array"></param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.ImportFromJaggedArray(System.String[][],System.Int32)">
            <summary>
            Import from jagged array to the specified worksheet
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.ImportFromJaggedArray(System.String[][],System.String)">
            <summary>
            Import from jagged array to the specified worksheet
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.ExportToJaggedArray">
            <summary>
            Return spreadsheet rows and columns as jagged array 
            </summary>
            <returns>A jagged array</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.ExportToJaggedArray(System.String)">
            <summary>
            Return the cells in the named worksheet as a jagged array 
            </summary>
            <param name="worksheetName">Name of worksheet to export</param>
            <returns>A jagged array</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.ExportToJaggedArray(System.Int32)">
            <summary>
            Return the cells in the specified worksheet as a jagged array 
            </summary>
            <param name="worksheetIndex">Index of worksheet to export</param>
            <returns>A jagged array</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.ImportFrom2DArray(System.String[0:,0:])">
            <summary>
            Import from two-dimensional array. 
            </summary>
            <param name="array"></param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.ImportFrom2DArray(System.String[0:,0:],System.Int32)">
            <summary>
            Import from two-dimensional array to the specified worksheet
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.ImportFrom2DArray(System.String[0:,0:],System.String)">
            <summary>
            Import from two-dimensional array to the specified worksheet
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.ExportTo2DArray">
            <summary>
            Return spreadsheet rows and columns as two-dimensional array; 
            </summary>
            <returns>Two dimensional array</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.ExportTo2DArray(System.String)">
            <summary>
            Return spreadsheet rows and columns as two-dimensional array; 
            </summary>
            <param name="worksheetName">Name of worksheet to export</param>
            <returns>Two dimensional array</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.ExportTo2DArray(System.Int32)">
            <summary>
            Return spreadsheet rows and columns as two-dimensional array; 
            </summary>
            <param name="worksheetIndex">Index of worksheet to export</param>
            <returns>Two dimensional array</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.ImportFromDataTable(System.Data.DataTable)">
            <summary>
            Fills the spreadsheet with rows and columns from specified DataTable.
            </summary>
            <param name="dataTable">The data table.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.ImportFromDataTable(System.Data.DataTable,System.UInt32)">
            <summary>
            Fills the spreadsheet with rows and columns from specified DataTable. The method will automatically create new worksheet if table row count exceeds specified row limit.
            </summary>
            <param name="dataTable">The data table.</param>
            <param name="rowLimit">Worksheet row limit.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.ImportFromDataTable(System.Data.DataTable,System.String)">
            <summary>
            Import rows and columns from DataTable to specified worksheet.
            </summary>
            <param name="dataTable"></param>
            <param name="worksheetName"></param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.ImportFromDataTable(System.Data.DataTable,System.Int32)">
            <summary>
            Import rows and columns from DataTable to specified worksheet.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.ExportToDataTable">
            <summary>
            Return new DataTable object filled from first worksheet.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.ExportToDataTable(System.Int32)">
            <summary>
            Return new DataTable object filled from specified worksheet.
            </summary>
            <param name="worksheetIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.ExportToDataTable(System.Int32,System.Boolean)">
            <summary>
            Return new DataTable object filled from specified worksheet.
            <param name="FirstRowAsHeader">if set to <c>true</c> use data from first row as columns header].</param></summary>
            <param name="worksheetIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.ExportToDataTable(System.String)">
            <summary>
            Return new DataTable object filled from specified worksheet.
            </summary>
            <param name="worksheetName">Name of worksheet to export</param>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.ExportToDataTable(System.String,System.Boolean)">
            <summary>
            Return new DataTable object filled from specified worksheet.
            </summary>
            <param name="worksheetName">Name of worksheet to export</param>
            <param name="FirstRowAsHeader">if set to <c>true</c> use data from first row as columns header].</param>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.ImportFromDataSet(System.Data.DataSet)">
            <summary>
            Fills the spreadsheet with rows and columns from tables of specified DataSet.
            </summary>
            <param name="dataSet">The data set.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.ImportFromDataSet(System.Data.DataSet,System.UInt32)">
            <summary>
            Fills the spreadsheet with rows and columns from tables of specified DataSet. The method will automatically create new worksheet if table row count exceeds specified row limit.
            </summary>
            <param name="dataSet">The data set.</param>
            <param name="rowLimit">Worksheet row limit.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.ExportToDataSet(System.Data.DataSet)">
            <summary>
            Fill provided DataSet with DataTables created from spreadsheet's worksheets.
            </summary>
            <param name="dataSet"></param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.ExportToDataSet(System.Data.DataSet,System.Boolean)">
            <summary>
            Fill provided DataSet with DataTables created from spreadsheet's worksheets.
            </summary>
            <param name="dataSet"></param>
            <param name="FirstRowAsHeader">if set to <c>true</c> use data from first row as columns header].</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.ExportToDataSet">
            <summary>
            Return new DataSet filled from spreadsheet. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.ImportFromJSON(System.String)">
            <summary>
            Fills the spreadsheet with rows and columns from JSON data string.
            </summary>
            <param name="jsonString">String containing JSON data.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.ExportToJSON(System.Int32)">
            <summary>
            Return JSON data filled from spreadsheet. 
            </summary>
            <param name="worksheetIndex">Index of worksheet to export to JSON.</param>
            <returns>String containing JSON data.</returns>
        </member>
        <member name="P:Bytescout.Spreadsheet.Spreadsheet.Options">
            <summary>
            Gets the options.
            </summary>
            <value>The options.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Spreadsheet.SearchOptions">
            <summary>
            Gets the search options.
            </summary>
            <value>The search options.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Spreadsheet.Workbook">
            <summary>
            Gets or sets the Workbook.
            </summary>
            <value>The WorkBook.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.Worksheet(System.Int32)">
            <summary>
            Return Worksheet the specified index.
            </summary>
            <param name="Index">The index.</param>
            <returns></returns>
        </member>
        <member name="P:Bytescout.Spreadsheet.Spreadsheet.Worksheets">
            <summary>
            Gets or sets the Worksheets.
            </summary>
            <value>The Worksheets collection.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Spreadsheet.Cache">
            <summary>
            Sets the cache type.
            </summary>
            <value>The cache type.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Bytescout.Spreadsheet.Spreadsheet" /> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.Spreadsheet.Close">
            <summary>
            Closes this instance.
            </summary>
        </member>
        <member name="E:Bytescout.Spreadsheet.Spreadsheet.OnCalcError">
            <summary>
            Occurs when [on calc error].
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.SpreadsheetComponent">
            <summary>
            Spreadsheet component
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.SpreadsheetComponent" /> class.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.SpreadsheetComponent" /> class.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.SpreadsheetComponent.UserName">
            <summary>
            Gets or sets the name part of the registration information.
            </summary>
            <value>The name part of the registration information.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.SpreadsheetComponent.UserKey">
            <summary>
            Gets or sets the key number part of registration information.
            </summary>
            <value>The key number part of registration information.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.LoadFromFile(System.String)">
            <summary>
            Load data from file.
            </summary>
            <param name="FileName">Name of the file.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.LoadFromFile(System.String,Bytescout.Spreadsheet.CacheType)">
            <summary>
            Load data from file.
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="Cache">Type of the cache.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.LoadFromFile(System.String,Bytescout.Spreadsheet.CacheType,System.String)">
            <summary>
            Load data from file.
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="Cache">Type of the cache.</param>
            <param name="Delimiter">Delimiter for text files.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.LoadFromFile(System.String,System.String,System.Text.Encoding)">
            <summary>
            Load data from file.
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="Delimiter">Delimiter for text files.</param>
            <param name="Encoding">The character encoding for text files.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.LoadFromFile(System.String,Bytescout.Spreadsheet.CacheType,System.String,System.Text.Encoding)">
            <summary>
            Load data from file.
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="Cache">Type of the cache.</param>
            <param name="Delimiter">Delimiter for text files.</param>
            <param name="Encoding">The character encoding for text files.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.LoadFromFile(System.String,Bytescout.Spreadsheet.CacheType,System.String,System.Text.Encoding,System.String)">
            <summary>
            Load data from file.
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="Cache">Type of the cache.</param>
            <param name="Delimiter">Delimiter for text files.</param>
            <param name="Encoding">The character encoding for text files.</param>
            <param name="Password">The password.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.LoadFromStream(System.IO.Stream)">
            <summary>
            Load data from stream.
            </summary>
            <param name="AStream">The stream.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.LoadFromStream(System.IO.Stream,Bytescout.Spreadsheet.CacheType)">
            <summary>
            Load data from stream.
            </summary>
            <param name="AStream">The stream.</param>
            <param name="Cache">Type of the cache.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.LoadFromStream(System.IO.Stream,Bytescout.Spreadsheet.Constants.SpreadsheetFormatType)">
            <summary>
            Load data from stream.
            </summary>
            <param name="AStream">The stream.</param>
            <param name="SType">Type of the stream.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.LoadFromStream(System.IO.Stream,Bytescout.Spreadsheet.Constants.SpreadsheetFormatType,Bytescout.Spreadsheet.CacheType)">
            <summary>
            Load data from stream.
            </summary>
            <param name="AStream">The stream.</param>
            <param name="SType">Type of the stream.</param>
            <param name="Cache">Type of the cache.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.LoadFromStream(System.IO.Stream,Bytescout.Spreadsheet.Constants.SpreadsheetFormatType,System.String,System.Text.Encoding)">
            <summary>
            Load data from stream.
            </summary>
            <param name="AStream">The stream.</param>
            <param name="SType">Type of the stream.</param>
            <param name="Delimiter">Delimiter for text files.</param>
            <param name="Encoding">The character encoding for text files.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.LoadFromStream(System.IO.Stream,Bytescout.Spreadsheet.Constants.SpreadsheetFormatType,Bytescout.Spreadsheet.CacheType,System.String,System.Text.Encoding)">
            <summary>
            Load data from stream.
            </summary>
            <param name="AStream">The stream.</param>
            <param name="SType">Type of the stream.</param>
            <param name="Cache">Type of the cache.</param>
            <param name="Delimiter">Delimiter for text files.</param>
            <param name="Encoding">The character encoding for text files.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.SaveAsXLS(System.String)">
            <summary>
            Saves data in XLS file with specified name
            </summary>
            <param name="FileName">Name of the file to save to.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.SaveAsXML(System.String,System.Int32)">
            <summary>
            Saves data in XML file with specified name
            </summary>
            <param name="FileName">Name of the file to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.SaveAsCSV(System.String,System.Int32,System.String)">
            <summary>
            Saves data in CSV file with specified name
            </summary>
            <param name="FileName">Name of the file to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
            <param name="Delimiter">Delimiter string.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.SaveAsCSV(System.String,System.Int32)">
            <summary>
            Saves data in CSV file with specified name
            </summary>
            <param name="FileName">Name of the file to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.SaveAsTXT(System.String,System.Int32)">
            <summary>
            Saves data in TXT file with specified name
            </summary>
            <param name="FileName">Name of the file to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.SaveAsHTML(System.String)">
            <summary>
            Saves spreadsheet in a HTML format file. 
            The second and subsequent worksheets of the spreadsheet will be saved 
            in separate files with auto-generated names.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns>List of generated HTML files.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.SaveAsHTML(System.String,System.Boolean)">
            <summary>
            Saves spreadsheet in a HTML format file. 
            The second and subsequent worksheets of the spreadsheet will be saved 
            in separate files with auto-generated names.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="createNavigationLinks">If true, the method will create links for navigation between generated HTML files.</param>
            <returns>List of generated HTML files.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.SaveAsXLSX(System.String)">
            <summary>
            Saves data in XLSX format to a file with specified name
            </summary>
            <param name="FileName">Name of the file to save to.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.SaveAs(System.String)">
            <summary>
            Saves data in XLS or XLSX file FileName
            </summary>
            <param name="FileName">Name of the file.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.SaveAs(System.String,Bytescout.Spreadsheet.Constants.SpreadsheetFormatType)">
            <summary>
            Saves data in XLS or XLSX file FileName
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="SType">The format in which save a file.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.SaveToStreamXLS(System.IO.Stream)">
            <summary>
            Saves data in XLS format to a given stream
            </summary>
            <param name="AStream">Stream to save to.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.SaveToStreamXLSX(System.IO.Stream)">
            <summary>
            Saves data in XLSX format to a given stream
            </summary>
            <param name="stream">Stream to save to.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.SaveToStreamXML(System.IO.Stream,System.Int32)">
            <summary>
            Saves data in XML format to a given stream
            </summary>
            <param name="AStream">Stream to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.SaveToStreamHTML(System.IO.Stream)">
            <summary>
            Saves first worksheet of spreadsheet as HTML document to a given stream.
            </summary>
            <param name="stream">The stream to save to.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.SaveToStreamHTML(System.IO.Stream,System.Int32)">
            <summary>
            Saves a worksheet of spreadsheet as HTML document to a given stream.
            </summary>
            <param name="stream">The stream to save to.</param>
            <param name="sheet">The worksheet to save.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.SaveToStreamCSV(System.IO.Stream,System.Int32,System.String)">
            <summary>
            Saves data in CSV format to a given stream
            </summary>
            <param name="AStream">Stream to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
            <param name="Delimiter">Delimiter string.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.SaveToStreamCSV(System.IO.Stream,System.Int32)">
            <summary>
            Saves data in CSV format to a given stream
            </summary>
            <param name="AStream">Stream to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.SaveToStreamTXT(System.IO.Stream,System.Int32)">
            <summary>
            Saves data in TXT format to a given stream
            </summary>
            <param name="AStream">Stream to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.SaveToStream(System.IO.Stream)">
            <summary>
            Saves data in XLS format to a given stream
            </summary>
            <param name="AStream">Stream to save to.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.GetAsBytesArray(Bytescout.Spreadsheet.Constants.SpreadsheetFormatType)">
            <summary>
            Gets the bytes of spreadsheet saved as document with specified type.
            </summary>
            <param name="type">The type to use while retrieving bytes.</param>
            <returns>The bytes of spreadsheet saved as document with specified type.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.GetAsBytesArrayXLS">
            <summary>
            Gets the bytes of spreadsheet saved as XLS document.
            </summary>
            <returns>The bytes of spreadsheet saved as XLS document.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.GetAsBytesArrayXLSX">
            <summary>
            Gets the bytes of spreadsheet saved as XLSX document.
            </summary>
            <returns>The bytes of spreadsheet saved as XLSX document.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.GetAsBytesArrayCSV">
            <summary>
            Gets the bytes of spreadsheet saved as CSV document.
            </summary>
            <returns>The bytes of spreadsheet saved as CSV document.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.GetAsBytesArrayTXT">
            <summary>
            Gets the bytes of spreadsheet saved as text document.
            </summary>
            <returns>The bytes of spreadsheet saved as text document.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.GetAsBytesArrayXML">
            <summary>
            Gets the bytes of spreadsheet saved as XML document.
            </summary>
            <returns>The bytes of spreadsheet saved as XML document.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.GetAsBytesArrayHTML">
            <summary>
            Gets the bytes of spreadsheet saved as HTML document.
            </summary>
            <returns>The bytes of spreadsheet saved as HTML document.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.GetAsBytesArrayHTML(System.Int32)">
            <summary>
            Gets the bytes of specified worksheet page saved as HTML document.
            </summary>
            <param name="worksheetIndex">Worksheet index.</param>
            <returns>The bytes of specified worksheet page saved as HTML document.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.SaveToStream(System.IO.Stream,Bytescout.Spreadsheet.Constants.SpreadsheetFormatType)">
            <summary>
            Saves data in XLS or XLSX format to a given stream
            </summary>
            <param name="AStream">Stream to save to.</param>
            <param name="SType">The format in which saves data.</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.SpreadsheetComponent.Options">
            <summary>
            Gets the options.
            </summary>
            <value>The options.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.SpreadsheetComponent.Workbook">
            <summary>
            Gets or sets the Workbook.
            </summary>
            <value>The WorkBook.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.Worksheet(System.Int32)">
            <summary>
            Return Worksheet the specified index.
            </summary>
            <param name="Index">The index.</param>
            <returns></returns>
        </member>
        <member name="P:Bytescout.Spreadsheet.SpreadsheetComponent.Cache">
            <summary>
            Sets the cache type.
            </summary>
            <value>The cache type.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Bytescout.Spreadsheet.Spreadsheet" /> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetComponent.Close">
            <summary>
            Closes this instance.
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.SpreadsheetFont">
            <summary>
            Spreadsheet font class 
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetFont.#ctor(System.String,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.SpreadsheetFont" /> class.
            </summary>
            <param name="FontName">Name of the font.</param>
            <param name="Size">The size.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetFont.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.Color,Bytescout.Spreadsheet.Constants.FontEscapementType,Bytescout.Spreadsheet.Constants.FontUnderlineStyle,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.SpreadsheetFont" /> class.
            </summary>
            <param name="FontName">Name of the font.</param>
            <param name="Size">The size.</param>
            <param name="Style">The style.</param>
            <param name="color">The color.</param>
            <param name="Escapement">The escapement.</param>
            <param name="Underline">The underline.</param>
            <param name="CharSet">The char set.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetFont.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode"></see> is suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetFont.op_Equality(Bytescout.Spreadsheet.SpreadsheetFont,Bytescout.Spreadsheet.SpreadsheetFont)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetFont.op_Inequality(Bytescout.Spreadsheet.SpreadsheetFont,Bytescout.Spreadsheet.SpreadsheetFont)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetFont.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"></see> to compare with the current <see cref="T:System.Object"></see>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>; otherwise, false.
            </returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetFont.Equals(Bytescout.Spreadsheet.SpreadsheetFont)">
            <summary>
            Equalses the specified SpreadsheetFont.
            </summary>
            <param name="font">The SpreadsheetFont.</param>
            <returns></returns>
        </member>
        <member name="P:Bytescout.Spreadsheet.SpreadsheetFont.Font">
            <summary>
            Gets the font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.SpreadsheetFont.Height">
            <summary>
            Gets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.SpreadsheetFont.Italic">
            <summary>
            Gets a value indicating whether this <see cref="T:Bytescout.Spreadsheet.SpreadsheetFont" /> is italic.
            </summary>
            <value>
                <c>true</c> if italic; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.SpreadsheetFont.StruckOut">
            <summary>
            Gets a value indicating whether [struck out].
            </summary>
            <value>
                <c>true</c> if [struck out]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.SpreadsheetFont.FontColor">
            <summary>
            Gets the color of the font.
            </summary>
            <value>The color of the font.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.SpreadsheetFont.Bold">
            <summary>
            Gets a value indicating whether this <see cref="T:Bytescout.Spreadsheet.SpreadsheetFont" /> is bold.
            </summary>
            <value>
                <c>true</c> if bold; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.SpreadsheetFont.Escapement">
            <summary>
            Gets the escapement.
            </summary>
            <value>The escapement.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.SpreadsheetFont.Underline">
            <summary>
            Gets the underline.
            </summary>
            <value>The underline.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.SpreadsheetFont.CharacterSet">
            <summary>
            Gets the character set.
            </summary>
            <value>The character set.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.SpreadsheetFont.FontName">
            <summary>
            Gets the name of the font.
            </summary>
            <value>The name of the font.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.SpreadsheetFont.Style">
            <summary>
            Gets the style.
            </summary>
            <value>The style.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetFont.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetFont.Dispose">
            <summary>
            Disposes the object
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetFont.Dispose(System.Boolean)">
            <summary>
            Disposes the object
            </summary>
            <param name="disposeManagedResources">dispose managed resources</param>
        </member>
        <member name="T:Bytescout.Spreadsheet.SpreadsheetWebControl">
            <summary>
            Spreadsheet web control 
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the HTML opening tag of the control to the specified writer. This method is used primarily by control developers.
            </summary>
            <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter"></see> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the HTML closing tag of the control into the specified writer. This method is used primarily by control developers.
            </summary>
            <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter"></see> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the contents.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.SpreadsheetWebControl.UserName">
            <summary>
            Gets or sets the name part of the registration information.
            </summary>
            <value>The name part of the registration information.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.SpreadsheetWebControl.UserKey">
            <summary>
            Gets or sets the key number part of registration information.
            </summary>
            <value>The key number part of registration information.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.LoadFromFile(System.String)">
            <summary>
            Load data from file.
            </summary>
            <param name="FileName">Name of the file.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.LoadFromFile(System.String,System.String)">
            <summary>
            Load data from file.
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="Delimiter">Delimiter for text files.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.LoadFromFile(System.String,Bytescout.Spreadsheet.CacheType)">
            <summary>
            Load data from file.
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="Cache">Type of the cache.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.LoadFromFile(System.String,Bytescout.Spreadsheet.CacheType,System.String)">
            <summary>
            Load data from file.
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="Cache">Type of the cache.</param>
            <param name="Delimiter">Delimiter for text files.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.LoadFromFile(System.String,System.String,System.Text.Encoding)">
            <summary>
            Load data from file.
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="Delimiter">Delimiter for text files.</param>
            <param name="Encoding">The character encoding for text files.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.LoadFromFile(System.String,Bytescout.Spreadsheet.CacheType,System.String,System.Text.Encoding)">
            <summary>
            Load data from file.
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="Cache">Type of the cache.</param>
            <param name="Delimiter">Delimiter for text files.</param>
            <param name="Encoding">The character encoding for text files.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.LoadFromFile(System.String,Bytescout.Spreadsheet.CacheType,System.String,System.Text.Encoding,System.String)">
            <summary>
            Load data from file.
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="Cache">Type of the cache.</param>
            <param name="Delimiter">Delimiter for text files.</param>
            <param name="Encoding">The character encoding for text files.</param>
            <param name="Password">The password.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.LoadFromStream(System.IO.Stream)">
            <summary>
            Load data from stream.
            </summary>
            <param name="AStream">The stream.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.LoadFromStream(System.IO.Stream,Bytescout.Spreadsheet.CacheType)">
            <summary>
            Load data from stream.
            </summary>
            <param name="AStream">The stream.</param>
            <param name="Cache">Type of the cache.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.LoadFromStream(System.IO.Stream,Bytescout.Spreadsheet.Constants.SpreadsheetFormatType)">
            <summary>
            Load data from stream.
            </summary>
            <param name="AStream">The stream.</param>
            <param name="SType">Type of the stream.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.LoadFromStream(System.IO.Stream,Bytescout.Spreadsheet.Constants.SpreadsheetFormatType,Bytescout.Spreadsheet.CacheType)">
            <summary>
            Load data from stream.
            </summary>
            <param name="AStream">The stream.</param>
            <param name="SType">Type of the stream.</param>
            <param name="Cache">Type of the cache.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.LoadFromStream(System.IO.Stream,Bytescout.Spreadsheet.Constants.SpreadsheetFormatType,System.String,System.Text.Encoding)">
            <summary>
            Load data from stream.
            </summary>
            <param name="AStream">The stream.</param>
            <param name="SType">Type of the stream.</param>
            <param name="Delimiter">Delimiter for text files.</param>
            <param name="Encoding">The character encoding for text files.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.LoadFromStream(System.IO.Stream,Bytescout.Spreadsheet.Constants.SpreadsheetFormatType,Bytescout.Spreadsheet.CacheType,System.String,System.Text.Encoding)">
            <summary>
            Load data from stream.
            </summary>
            <param name="AStream">The stream.</param>
            <param name="SType">Type of the stream.</param>
            <param name="Cache">Type of the cache.</param>
            <param name="Delimiter">Delimiter for text files.</param>
            <param name="Encoding">The character encoding for text files.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.SaveAsXLS(System.String)">
            <summary>
            Saves data in XLS file with specified name
            </summary>
            <param name="FileName">Name of the file to save to.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.SaveAsXML(System.String,System.Int32)">
            <summary>
            Saves data in XML file with specified name
            </summary>
            <param name="FileName">Name of the file to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.SaveAsCSV(System.String,System.Int32)">
            <summary>
            Saves data in CSV file with specified name
            </summary>
            <param name="FileName">Name of the file to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.SaveAsTXT(System.String,System.Int32)">
            <summary>
            Saves data in TXT file with specified name
            </summary>
            <param name="FileName">Name of the file to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.SaveAsHTML(System.String)">
            <summary>
            Saves spreadsheet in a HTML format file. 
            The second and subsequent worksheets of the spreadsheet will be saved 
            in separate files with auto-generated names.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns>List of generated HTML files.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.SaveAsHTML(System.String,System.Boolean)">
            <summary>
            Saves spreadsheet in a HTML format file. 
            The second and subsequent worksheets of the spreadsheet will be saved 
            in separate files with auto-generated names.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="createNavigationLinks">If true, the method will create links for navigation between generated HTML files.</param>
            <returns>List of generated HTML files.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.SaveAsXLSX(System.String)">
            <summary>
            Saves data in XLSX format to a file with specified name
            </summary>
            <param name="FileName">Name of the file to save to.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.SaveAs(System.String)">
            <summary>
            Saves data in XLS or XLSX file FileName
            </summary>
            <param name="FileName">Name of the file.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.SaveAs(System.String,Bytescout.Spreadsheet.Constants.SpreadsheetFormatType)">
            <summary>
            Saves data in XLS or XLSX file FileName
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="SType">The format in which save a file.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.SaveToStreamXLS(System.IO.Stream)">
            <summary>
            Saves data in XLS format to a given stream
            </summary>
            <param name="AStream">Stream to save to.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.SaveToStreamXLSX(System.IO.Stream)">
            <summary>
            Saves data in XLSX format to a given stream
            </summary>
            <param name="stream">Stream to save to.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.SaveToStreamXML(System.IO.Stream,System.Int32)">
            <summary>
            Saves data in XML format to a given stream
            </summary>
            <param name="AStream">Stream to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.SaveToStreamHTML(System.IO.Stream)">
            <summary>
            Saves first worksheet of spreadsheet as HTML document to a given stream.
            </summary>
            <param name="stream">The stream to save to.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.SaveToStreamHTML(System.IO.Stream,System.Int32)">
            <summary>
            Saves a worksheet of spreadsheet as HTML document to a given stream.
            </summary>
            <param name="stream">The stream to save to.</param>
            <param name="sheet">The worksheet to save.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.SaveToStreamCSV(System.IO.Stream,System.Int32)">
            <summary>
            Saves data in CSV format to a given stream
            </summary>
            <param name="AStream">Stream to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.SaveToStreamTXT(System.IO.Stream,System.Int32)">
            <summary>
            Saves data in TXT format to a given stream
            </summary>
            <param name="AStream">Stream to save to.</param>
            <param name="SheetIndex">Index of worksheet.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.SaveToStream(System.IO.Stream)">
            <summary>
            Saves data in XLS format to a given stream
            </summary>
            <param name="AStream">Stream to save to.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.SaveToStream(System.IO.Stream,Bytescout.Spreadsheet.Constants.SpreadsheetFormatType)">
            <summary>
            Saves data in XLS or XLSX format to a given stream
            </summary>
            <param name="AStream">Stream to save to.</param>
            <param name="SType">The format in which saves data.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.GetAsBytesArray(Bytescout.Spreadsheet.Constants.SpreadsheetFormatType)">
            <summary>
            Gets the bytes of spreadsheet saved as document with specified type.
            </summary>
            <param name="type">The type to use while retrieving bytes.</param>
            <returns>The bytes of spreadsheet saved as document with specified type.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.GetAsBytesArrayXLS">
            <summary>
            Gets the bytes of spreadsheet saved as XLS document.
            </summary>
            <returns>The bytes of spreadsheet saved as XLS document.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.GetAsBytesArrayXLSX">
            <summary>
            Gets the bytes of spreadsheet saved as XLSX document.
            </summary>
            <returns>The bytes of spreadsheet saved as XLSX document.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.GetAsBytesArrayCSV">
            <summary>
            Gets the bytes of spreadsheet saved as CSV document.
            </summary>
            <returns>The bytes of spreadsheet saved as CSV document.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.GetAsBytesArrayTXT">
            <summary>
            Gets the bytes of spreadsheet saved as text document.
            </summary>
            <returns>The bytes of spreadsheet saved as text document.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.GetAsBytesArrayXML">
            <summary>
            Gets the bytes of spreadsheet saved as XML document.
            </summary>
            <returns>The bytes of spreadsheet saved as XML document.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.GetAsBytesArrayHTML">
            <summary>
            Gets the bytes of spreadsheet saved as HTML document.
            </summary>
            <returns>The bytes of spreadsheet saved as HTML document.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.GetAsBytesArrayHTML(System.Int32)">
            <summary>
            Gets the bytes of specified worksheet page saved as HTML document.
            </summary>
            <param name="worksheetIndex">Worksheet index.</param>
            <returns>The bytes of specified worksheet page saved as HTML document.</returns>
        </member>
        <member name="P:Bytescout.Spreadsheet.SpreadsheetWebControl.Options">
            <summary>
            Gets the options.
            </summary>
            <value>The options.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.SpreadsheetWebControl.Workbook">
            <summary>
            Gets or sets the Workbook.
            </summary>
            <value>The WorkBook.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.Worksheet(System.Int32)">
            <summary>
            Return Worksheet the specified index.
            </summary>
            <param name="Index">The index.</param>
            <returns></returns>
        </member>
        <member name="P:Bytescout.Spreadsheet.SpreadsheetWebControl.Cache">
            <summary>
            Sets the cache type.
            </summary>
            <value>The cache type.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Bytescout.Spreadsheet.Spreadsheet" /> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetWebControl.Close">
            <summary>
            Closes this instance.
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.Workbook">
            <summary>
            Workbook class
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.Workbook.#ctor(Bytescout.Spreadsheet.Spreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.Workbook" /> class.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Workbook.Properties">
            <summary>
            Workbook properties 
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Workbook.DocumentProperties">
            <summary>
            Document Properties
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Workbook.Worksheets">
            <summary>
            Gets the worksheets.
            </summary>
            <value>The worksheets.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Workbook.Charts">
            <summary>
            Gets the charts.
            </summary>
            <value>The charts.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Workbook.DefaultFont">
            <summary>
            Gets or sets the workbook default font.
            </summary>
            <value>The default font.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Workbook.Locale">
            <summary>
            Gets or sets the CultureInfo using in Workbook. This property 
            should be used to set the locale (regional) settings for use in 
            the new workbook (number, currency, time, date formatting). When 
            you load existing spreadsheet then the SDK tries to use the saved 
            locale settings for this file disregarding current Windows regional 
            and language settings. When new workbook is created then the current 
            Windows locale is used by default.
            </summary>
            <value>The locale.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Workbook.AddInFunctionsNamesLocale">
            <summary>
            Gets or sets the add in functions names locale.
            </summary>
            <value>The add in functions names locale.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Workbook.RangeSelectionMethod">
            <summary>
            Gets or sets the range selection method.
            </summary>
            <value>The range selection method.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Workbook.ExternalReferenceUpdate">
            <summary>
            Gets or sets a value indicating whether external reference should be updated or not.
            </summary>
            <value>
                <c>true</c> if external reference update; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Workbook.AutoCalculation">
            <summary>
            Gets or sets a value indicating if formula should be re-calculated automatically on change of cells value.
            </summary>
            <value>
                <c>true</c> if calculate formulas automatically; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Workbook.Password">
            <summary>
            Sets the password to use for encryption file.
            </summary>
            <value>The password.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.Workbook.RemovePassword">
            <summary>
            Removes the password.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Workbook.EncryptionType">
            <summary>
            Gets or sets the type of the encryption.
            </summary>
            <value>The type of the encryption.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Workbook.EncryptionKeyLength">
            <summary>
            Gets or sets value that specifies the number of bits in the encryption key. Must be a multiple of 8.
            </summary>
            <value>The length of the encryption key.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Workbook.ProtectStructure">
            <summary>
            Gets or sets a value indicating whether the order of the sheets in the workbook is protected.
            </summary>
            <value>
                <c>true</c> if the order of the sheets in the workbook is protected; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Workbook.ProtectWindows">
            <summary>
            Gets or sets a value indicating whether the windows of the workbook are protected.
            </summary>
            <value>
                <c>true</c> if the windows of the workbook are protected; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.Workbook.Protect(System.String,System.Boolean,System.Boolean)">
            <summary>
            Protects the workbook.
            </summary>
            <param name="Password">The password.</param>
            <param name="Structure">True to protect the structure of the workbook.</param>
            <param name="Windows">True to protect the workbook windows.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Workbook.UnProtect(System.String)">
            <summary>
            Removes protection from the workbook.
            </summary>
            <param name="Password">The password.</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.Workbook.ReadOnlyRecommended">
            <summary>
            Gets or sets a value indicating whether the workbook is read only recommended.
            </summary>
            <value>
                <c>true</c> if read only recommended; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.Workbook.ProtectFromModifications(System.String)">
            <summary>
            Protects the workbook from modifications (read only recommended).
            </summary>
            <param name="Password">The password.</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.Workbook.Colors">
            <summary>
            Gets the colors in the user-defined palette. The palette has 56 entries.
            </summary>
            <value>The colors.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.Workbook.Calculate">
            <summary>
            Calculates the all formulas in the Workbook.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Workbook.Names">
            <summary>
            Gets collection of the <see cref="T:Bytescout.Spreadsheet.DefinedName" /> objects.
            </summary>
            <value>The names.</value>
        </member>
        <member name="T:Bytescout.Spreadsheet.Worksheet">
            <summary>
            Worksheet class 
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Worksheet.HPageBreaks">
            <summary>
            Gets the H page breaks.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Worksheet.VPageBreaks">
            <summary>
            Gets the V page breaks.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.#ctor(System.String,Bytescout.Spreadsheet.Workbook)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.Worksheet" /> class.
            </summary>
            <param name="sheetname">The name of worksheet.</param>
            <param name="Workbook">Parent workbook of the worksheet.</param>/// 
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.#ctor(Bytescout.Spreadsheet.Records.XlsBiffBoundSheet,Bytescout.Spreadsheet.Workbook)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.Worksheet" /> class.
            </summary>
            <param name="BoundSheet">The BoundSheet record.</param>
            <param name="Workbook">The workbook.</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.Worksheet.Name">
            <summary>
            Gets or sets Worksheet name
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Worksheet.Active">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Bytescout.Spreadsheet.Worksheet" /> is active.
            </summary>
            <value>
                <c>true</c> if active; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Worksheet.Protected">
            <summary>
            Gets a value indicating whether this <see cref="T:Bytescout.Spreadsheet.Worksheet" /> is protected against modification.
            </summary>
            <value>
                <c>true</c> if protected; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.Protect(System.String)">
            <summary>
            Protects this <see cref="T:Bytescout.Spreadsheet.Worksheet" /> with the password specified.
            </summary>
            <param name="Password">The password.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.Protect(System.String,Bytescout.Spreadsheet.Constants.EnhancedSheetProtection)">
            <summary>
            Protects this <see cref="T:Bytescout.Spreadsheet.Worksheet" /> with specified password and options.
            </summary>
            <param name="Password">The password.</param>
            <param name="Options">The <see cref="T:Bytescout.Spreadsheet.Constants.EnhancedSheetProtection" /> options.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.UnProtect(System.String)">
            <summary>
            UnProtects this <see cref="T:Bytescout.Spreadsheet.Worksheet" /> with the password.
            </summary>
            <param name="Password">The password.</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.Worksheet.ProtectionOptions">
            <summary>
            Gets the option flags for sheet protection.
            </summary>
            <value>The <see cref="T:Bytescout.Spreadsheet.Constants.EnhancedSheetProtection" /> options.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Worksheet.DefaultColumnWidth">
            <summary>
            Gets or sets the default width of the column in 1/256 of the width of the zero character, using default font.
            </summary>
            <value>The width of the default column.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Worksheet.IsEmpty">
            <summary>
            Gets a value indicating whether worksheet is empty.
            </summary>
            <value>
                <c>true</c> if this worksheet is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Worksheet.UsedRangeRowMin">
            <summary>
            Gets the first used row.
            </summary>
            <value>The first used row.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Worksheet.UsedRangeRowMax">
            <summary>
            Gets the last used row.
            </summary>
            <value>The last used row.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Worksheet.UsedRangeColumnMin">
            <summary>
            Gets the first used column.
            </summary>
            <value>The first used column.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Worksheet.UsedRangeColumnMax">
            <summary>
            Gets the last used column.
            </summary>
            <value>The last used column.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Worksheet.NotEmptyRowMin">
            <summary>
            Gets the first row contains not empty cell.
            </summary>
            <value>The first not empty row.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Worksheet.NotEmptyRowMax">
            <summary>
            Gets the last row contains not empty cell.
            </summary>
            <value>The last not empty row.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Worksheet.NotEmptyColumnMin">
            <summary>
            Gets the first column contains not empty cell.
            </summary>
            <value>The first not empty column.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Worksheet.NotEmptyColumnMax">
            <summary>
            Gets the last column contains not empty cell.
            </summary>
            <value>The last not empty column.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Worksheet.Rows">
            <summary>
            Gets the list of rows.
            </summary>
            <value>The list of rows.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Worksheet.Columns">
            <summary>
            Gets the list of columns.
            </summary>
            <value>The list of columns.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Worksheet.Item(System.Int32,System.Int32)">
            <summary>
            Gets the <see cref="T:Bytescout.Spreadsheet.Cell" /> with the specified row and col.
            </summary>
            <value></value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Worksheet.Item(System.String)">
            <summary>
            Gets the <see cref="T:Bytescout.Spreadsheet.Cell" /> with the specified by A1-style reference.
            </summary>
            <value></value>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.Cell(System.Int32,System.Int32)">
            <summary>
            Return cell the specified i and j.
            </summary>
            <param name="row">The index of row.</param>
            <param name="col">The index of column.</param>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.Cell(System.String)">
            <summary>
            Return cell the specified by A1-style reference.
            </summary>
            <param name="A1Ref">The A1-style reference.</param>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.Range(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Return cell range from the specified cell at (row1, col1) as upper-left cell and cell at (row2, col1) are the lower-right cell for this rectangle based range selection
            </summary>
            <param name="row1">The upper row of the range.</param>
            <param name="col1">The left col of the range.</param>
            <param name="row2">The lower row of the range.</param>
            <param name="col2">The right col of the range.</param>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.Range(System.String)">
            <summary>
            Return cell range the specified by A1-style reference.
            </summary>
            <param name="A1Ref">The A1-style reference.</param>
            <returns></returns>
        </member>
        <member name="P:Bytescout.Spreadsheet.Worksheet.ViewOptions">
            <summary>
            Gets the view optionsfor the worksheet.
            </summary>
            <value>The view options.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Worksheet.Pictures">
            <summary>
            Gets the pictures.
            </summary>
            <value>The pictures.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Worksheet.Charts">
            <summary>
            Gets the charts.
            </summary>
            <value>The charts.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Worksheet.Hyperlinks">
            <summary>
            Returns a <see cref="T:Bytescout.Spreadsheet.HyperLinks" /> collection that represents the hyperlinks for the worksheet.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.SaveAsTXT(System.IO.Stream)">
            <summary>
            Saves worksheet in a tab-delimited text file
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.SaveAsTXT(System.IO.Stream,System.String)">
            <summary>
            Saves worksheet in a text format
            </summary>
            <param name="stream">The stream.</param>
            <param name="Delimiter">Delimiter of values.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.SaveAsTXT(System.IO.Stream,System.String,System.String)">
            <summary>
            Saves worksheet in a text format.
            </summary>
            <param name="stream">The stream.</param>
            <param name="Delimiter">The delimiter symbol.</param>
            <param name="QuoteSymbol">The quotation symbol.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.SaveAsTXT(System.IO.Stream,System.String,System.String,System.Text.Encoding)">
            <summary>
            Saves worksheet in a text format.
            </summary>
            <param name="stream">The stream.</param>
            <param name="Delimiter">The delimiter symbol.</param>
            <param name="QuoteSymbol">The quotation symbol.</param>
            <param name="encoding">The character encoding.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.SaveAsTXT(System.IO.Stream,Bytescout.Spreadsheet.ConversionOptions)">
            <summary>
            Saves worksheet in a text format.
            </summary>
            <param name="stream">The stream.</param>
            <param name="options">The format options.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.SaveAsTXT(System.String)">
            <summary>
            Saves worksheet in a tab-delimited text file
            </summary>
            <param name="FileName">Name of the file.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.SaveAsTXT(System.String,System.String)">
            <summary>
            Saves worksheet in a text file format
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="Delimiter">Delimiter of values.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.SaveAsTXT(System.String,System.String,System.String)">
            <summary>
            Saves worksheet in a text format.
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="Delimiter">The delimiter symbol.</param>
            <param name="QuoteSymbol">The quotation symbol.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.SaveAsTXT(System.String,System.String,System.String,System.Text.Encoding)">
            <summary>
            Saves worksheet in a text format.
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="Delimiter">The delimiter symbol.</param>
            <param name="QuoteSymbol">The quotation symbol.</param>
            <param name="encoding">The character encoding.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.SaveAsTXT(System.String,Bytescout.Spreadsheet.ConversionOptions)">
            <summary>
            Saves worksheet in a text format.
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="options">The format options.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.SaveAsCSV(System.IO.Stream)">
            <summary>
            Saves worksheet in a CSV format file
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.SaveAsCSV(System.IO.Stream,System.String)">
            <summary>
            Saves worksheet in a CSV format file
            </summary>
            <param name="stream">The stream.</param>
            <param name="Delimiter">Delimiter of values.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.SaveAsCSV(System.IO.Stream,System.String,System.String)">
            <summary>
            Saves worksheet in a CSV format file
            </summary>
            <param name="stream">The stream.</param>
            <param name="Delimiter">Delimiter symbol.</param>
            <param name="Quote">Quotation symbol.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.SaveAsCSV(System.IO.Stream,System.String,System.String,System.Text.Encoding)">
            <summary>
            Saves worksheet in a CSV format file
            </summary>
            <param name="stream">The stream.</param>
            <param name="Delimiter">Delimiter symbol.</param>
            <param name="Quote">Quotation symbol.</param>
            <param name="encoding">The character encoding.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.SaveAsCSV(System.IO.Stream,Bytescout.Spreadsheet.ConversionOptions)">
            <summary>
            Saves worksheet in a CSV format file
            </summary>
            <param name="stream">The stream.</param>
            <param name="options">The format options.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.SaveAsCSV(System.String)">
            <summary>
            Saves worksheet in a CSV format file
            </summary>
            <param name="FileName">Name of the file.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.SaveAsCSV(System.String,System.String)">
            <summary>
            Saves worksheet in a CSV format file
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="Delimiter">Delimiter of values.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.SaveAsCSV(System.String,System.String,System.String)">
            <summary>
            Saves worksheet in a CSV format file.
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="Delimiter">Delimiter symbol.</param>
            <param name="Quote">Quotation symbol.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.SaveAsCSV(System.String,System.String,System.String,System.Text.Encoding)">
            <summary>
            Saves worksheet in a CSV format file.
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="Delimiter">Delimiter symbol.</param>
            <param name="Quote">Quotation symbol.</param>
            <param name="encoding">The character encoding.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.SaveAsCSV(System.String,Bytescout.Spreadsheet.ConversionOptions)">
            <summary>
            Saves worksheet in a CSV format file.
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="options">The format options.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.SaveAsHTML(System.IO.Stream)">
            <summary>
            Saves worksheet in a HTML format file.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.SaveAsHTML(System.IO.StreamWriter)">
            <summary>
            Saves worksheet in a HTML format file. Use this overload to specify the encoding for output HTML file. 
            Create StreamWriter instance with required encoding in constructor parameters.
            </summary>
            <param name="streamWriter">The stream.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.SaveAsHTML(System.String)">
            <summary>
            Saves worksheet in a HTML format file.
            </summary>
            <param name="FileName">Name of the file.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.SaveAsXML(System.IO.Stream)">
            <summary>
            Saves worksheet in a XML format file
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.SaveAsXML(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Saves worksheet in a XML format file
            </summary>
            <param name="stream">The stream.</param>
            <param name="encoding">The character encoding.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.SaveAsXML(System.String)">
            <summary>
            Saves worksheet in a XML format file
            </summary>
            <param name="FileName">Name of the file.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.SaveAsXML(System.String,System.Text.Encoding)">
            <summary>
            Saves worksheet in a XML format file
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="encoding">The character encoding.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.GetAsBytesArrayCSV">
            <summary>
            Gets the bytes of worksheet saved as CSV document.
            </summary>
            <returns>The bytes of worksheet saved as CSV document.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.GetAsBytesArrayTXT">
            <summary>
            Gets the bytes of worksheet saved as text document.
            </summary>
            <returns>The bytes of worksheet saved as text document.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.GetAsBytesArrayXML">
            <summary>
            Gets the bytes of worksheet saved as XML document.
            </summary>
            <returns>The bytes of worksheet saved as XML document.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.GetAsBytesArrayHTML">
            <summary>
            Gets the bytes of worksheet saved as HTML document.
            </summary>
            <returns>The bytes of worksheet saved as HTML document.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.Find(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Finds the specified search string on the worksheet.
            </summary>
            <param name="searchString">Search string.</param>
            <param name="caseSensitive">Use case sensitive search.</param>
            <param name="useRegularExpressions">The search string contains a regular expression.</param>
            <param name="searchBackwards">Perform backward search.</param>
            <returns>A cell containing the search string.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.Find">
            <summary>
            Finds the specified search string on the worksheet. Specify the search
            options using <see cref="P:Bytescout.Spreadsheet.Spreadsheet.SearchOptions" /> property.
            </summary>
            <returns>A cell containing the search string.</returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.FindNext">
            <summary>
            Finds next occurrence of the search string on the worksheet. You should
            initialize the search with the Find() method.
            </summary>
            <returns>A cell containing the search string or <see langword="null" />
            if the string is not found.</returns>
        </member>
        <member name="P:Bytescout.Spreadsheet.Worksheet.BackgroundPicture">
            <summary>
            Gets or sets the sheet background picture.
            </summary>
            <value>The background picture.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Worksheet.Visible">
            <summary>
            Gets or sets the visible state of the sheet.
            </summary>
            <value>The visible.</value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Worksheet.PageSetup">
            <summary>
            Gets or sets the page setup.
            </summary>
            <value>The page setup.</value>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.Calculate">
            <summary>
            Calculates the formulas in the Worksheet.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.AutoFitRows">
            <summary>
            AutoFit of rows height.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.SaveAsPDF(System.String)">
            <summary>
             Saves worksheet to PDF file with specified name.
            </summary>
            <param name="fileName">Output PDF file name.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.SaveAsPDF(System.String,System.Boolean)">
            <summary>
             Saves worksheet to PDF file with specified name.
            </summary>
            <param name="fileName">Output PDF file name.</param>
            <param name="autoSize">Automatic document sizing. If <c>false</c>, the page size wiil be taken from worksheet page setup.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.SaveAsPDF(System.IO.Stream)">
            <summary>
             Saves worksheet to PDF file with specified name.
            </summary>
            <param name="stream">Output stream.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheet.SaveAsPDF(System.IO.Stream,System.Boolean)">
            <summary>
             Saves worksheet to PDF file with specified name.
            </summary>
            <param name="stream">Output stream.</param>
            <param name="autoSize">Automatic document sizing. If <c>false</c>, the page size wiil be taken from worksheet page setup.</param>
        </member>
        <member name="T:Bytescout.Spreadsheet.Worksheets">
            <summary>
            The list of WorkSheet class 
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheets.#ctor(Bytescout.Spreadsheet.Workbook)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.Worksheets" /> class.
            </summary>
            <param name="Workbook">The workbook.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheets.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:Bytescout.Spreadsheet.Worksheets.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Bytescout.Spreadsheet.Worksheet" /> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Bytescout.Spreadsheet.Worksheets.Item(System.String)">
            <summary>
            Gets the <see cref="T:Bytescout.Spreadsheet.Worksheet" /> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheets.ByName(System.String)">
            <summary>
            Get Worksheet by name.
            </summary>
            <param name="Name">The name of Worksheet.</param>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheets.IndexOf(System.String)">
            <summary>
            Returns the index of worksheet on her name
            </summary>
            <param name="Name">The name of <see cref="T:Bytescout.Spreadsheet.Worksheet" /> object in the list.</param>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheets.Add">
            <summary>
            Adds the worksheet with default name "Untitled N".
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheets.Add(System.String)">
            <summary>
            Adds the worksheet.
            </summary>
            <param name="Name">The name of worksheet.</param>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheets.AddFromFile(System.String)">
            <summary>
            Adds the worksheet from CSV file.
            </summary>
            <param name="FileName">Name of the file.</param>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheets.AddFromFile(System.String,System.String,System.Text.Encoding)">
            <summary>
            Adds the worksheet from CSV file.
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="Delimiter">The delimiter.</param>
            <param name="Encoding">The character encoding.</param>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheets.Add(Bytescout.Spreadsheet.Worksheet)">
            <summary>
            Adds the worksheet.
            </summary>
            <param name="worksheet">The worksheet.</param>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheets.Insert(System.Int32,System.String)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="Index">The zero-based index at which worksheet should be inserted.</param>
            <param name="Name">The name of worksheet.</param>
            <returns></returns>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheets.Move(System.Int32,System.Int32)">
            <summary>
            Moves the specified SourceIndex Worksheet.
            </summary>
            <param name="SourceIndex">Index of the source.</param>
            <param name="DestIndex">Index of the destination.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheets.Copy(System.Int32,System.Int32,System.String)">
            <summary>
            Copies the specified SourceIndex Worksheet.
            </summary>
            <param name="SourceIndex">Index of the source.</param>
            <param name="DestIndex">Index of the dest.</param>
            <param name="NewSheetName">New name of the Worksheet.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheets.Copy(System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            Copies the specified SourceIndex Worksheet.
            </summary>
            <param name="SourceIndex">Index of the source.</param>
            <param name="DestIndex">Index of the dest.</param>
            <param name="NewSheetName">New name of the Worksheet.</param>
            <param name="OfficeArtCopy">if set to <c>true</c> OfficeArt data copy too.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheets.Delete(System.Int32)">
            <summary>
            Deletes the worksheet.
            </summary>
            <param name="Index">The index of worksheet.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheets.Delete(System.String)">
            <summary>
            Deletes the worksheet.
            </summary>
            <param name="Name">The name of worksheet.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.Worksheets.DeleteAll">
            <summary>
            Deletes all worksheets.
            </summary>
        </member>
        <member name="P:Bytescout.Spreadsheet.Worksheets.Count">
            <summary>
            Gets the worksheet count.
            </summary>
            <value>The worksheet count.</value>
        </member>
        <member name="T:Bytescout.Spreadsheet.CacheType">
            <summary>
            XLS format file caching type
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.CacheType.Memory">
            <summary>
            (0) Memory caching
            </summary>
        </member>
        <member name="F:Bytescout.Spreadsheet.CacheType.File">
            <summary>
            (1) File caching
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.ExceptionEventArgs">
            <summary>
            Provides data for the Error event
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.ExceptionEventArgs.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.ExceptionEventArgs" /> class.
            </summary>
            <param name="exception">The exception.</param>
        </member>
        <member name="P:Bytescout.Spreadsheet.ExceptionEventArgs.Exception">
            <summary>
            Gets the exception that represents the error.
            </summary>
            <value>The exception.</value>
        </member>
        <member name="T:Bytescout.Spreadsheet.CalcErrorHandler">
            <summary>
            Represents the method that will handle the OnCalcError event of a Spreadsheet
            </summary>
        </member>
        <member name="T:Bytescout.Spreadsheet.SpreadsheetException">
            <summary>
            Spreadsheet exception
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.SpreadsheetException" /> class.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.SpreadsheetException" /> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.SpreadsheetException" /> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.SpreadsheetException" /> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"></see> is zero (0). </exception>
            <exception cref="T:System.ArgumentNullException">The info parameter is null. </exception>
        </member>
        <member name="T:Bytescout.Spreadsheet.SpreadsheetChartException">
            <summary>
            Represents errors that occur saving chart to biff stream. 
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetChartException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.SpreadsheetChartException" /> class.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetChartException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.SpreadsheetChartException" /> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetChartException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.SpreadsheetChartException" /> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetChartException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.SpreadsheetChartException" /> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"></see> is zero (0). </exception>
            <exception cref="T:System.ArgumentNullException">The info parameter is null. </exception>
        </member>
        <member name="T:Bytescout.Spreadsheet.BiffChartSaveException">
            <summary>
            Represents errors that occur saving chart to biff stream. 
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.BiffChartSaveException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.BiffChartSaveException" /> class.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.BiffChartSaveException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.BiffChartSaveException" /> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.BiffChartSaveException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.SpreadsheetProtectionException" /> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.BiffChartSaveException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.BiffChartSaveException" /> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"></see> is zero (0). </exception>
            <exception cref="T:System.ArgumentNullException">The info parameter is null. </exception>
        </member>
        <member name="T:Bytescout.Spreadsheet.SpreadsheetProtectionException">
            <summary>
            Spreadsheet protect exception
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetProtectionException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.SpreadsheetProtectionException" /> class.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetProtectionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.SpreadsheetProtectionException" /> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetProtectionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.SpreadsheetProtectionException" /> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetProtectionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.SpreadsheetProtectionException" /> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"></see> is zero (0). </exception>
            <exception cref="T:System.ArgumentNullException">The info parameter is null. </exception>
        </member>
        <member name="T:Bytescout.Spreadsheet.InvalidPasswordException">
            <summary>
            Spreadsheet protect exception
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.InvalidPasswordException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.SpreadsheetProtectionException" /> class.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.InvalidPasswordException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.SpreadsheetProtectionException" /> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.InvalidPasswordException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.SpreadsheetProtectionException" /> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.InvalidPasswordException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.SpreadsheetProtectionException" /> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"></see> is zero (0). </exception>
            <exception cref="T:System.ArgumentNullException">The info parameter is null. </exception>
        </member>
        <member name="T:Bytescout.Spreadsheet.SpreadsheetProtectionPasswordRequired">
            <summary>
            Exception thrown when spreadsheet is protected with the password
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetProtectionPasswordRequired.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.SpreadsheetProtectionPasswordRequired" /> class.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetProtectionPasswordRequired.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.SpreadsheetProtectionPasswordRequired" /> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetProtectionPasswordRequired.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.SpreadsheetProtectionPasswordRequired" /> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetProtectionPasswordRequired.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.SpreadsheetProtectionPasswordRequired" /> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"></see> is zero (0). </exception>
            <exception cref="T:System.ArgumentNullException">The info parameter is null. </exception>
        </member>
        <member name="T:Bytescout.Spreadsheet.SpreadsheetFormulaException">
            <summary>
            Spreadsheet formula exception
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetFormulaException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.SpreadsheetFormulaException" /> class.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetFormulaException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.SpreadsheetFormulaException" /> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetFormulaException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.SpreadsheetFormulaException" /> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetFormulaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.SpreadsheetFormulaException" /> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"></see> is zero (0). </exception>
            <exception cref="T:System.ArgumentNullException">The info parameter is null. </exception>
        </member>
        <member name="T:Bytescout.Spreadsheet.DefinedNameException">
            <summary>
            Defined name exception
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.DefinedNameException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.DefinedNameException" /> class.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.DefinedNameException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.DefinedNameException" /> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.DefinedNameException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.DefinedNameException" /> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.DefinedNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.SpreadsheetFormulaException" /> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"></see> is zero (0). </exception>
            <exception cref="T:System.ArgumentNullException">The info parameter is null. </exception>
        </member>
        <member name="T:Bytescout.Spreadsheet.SpreadsheetReferenceException">
            <summary>
            Spreadsheet reference exception
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetReferenceException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.SpreadsheetReferenceException" /> class.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetReferenceException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.SpreadsheetReferenceException" /> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetReferenceException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.SpreadsheetReferenceException" /> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetReferenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.SpreadsheetReferenceException" /> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"></see> is zero (0). </exception>
            <exception cref="T:System.ArgumentNullException">The info parameter is null. </exception>
        </member>
        <member name="T:Bytescout.Spreadsheet.FormulaReferenceException">
            <summary>
            Formula reference exception
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.FormulaReferenceException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.FormulaReferenceException" /> class.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.FormulaReferenceException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.FormulaReferenceException" /> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.FormulaReferenceException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.FormulaReferenceException" /> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.FormulaReferenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.FormulaReferenceException" /> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"></see> is zero (0). </exception>
            <exception cref="T:System.ArgumentNullException">The info parameter is null. </exception>
        </member>
        <member name="T:Bytescout.Spreadsheet.FormulaCalculationException">
            <summary>
            Formula calculation exception
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.FormulaCalculationException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.FormulaCalculationException" /> class.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.FormulaCalculationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.FormulaCalculationException" /> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.FormulaCalculationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.FormulaCalculationException" /> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.FormulaCalculationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.FormulaCalculationException" /> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"></see> is zero (0). </exception>
            <exception cref="T:System.ArgumentNullException">The info parameter is null. </exception>
        </member>
        <member name="T:Bytescout.Spreadsheet.BuiltInFuncException">
            <summary>
            Built-in function in formula exception
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.BuiltInFuncException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.BuiltInFuncException" /> class.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.BuiltInFuncException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.BuiltInFuncException" /> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.BuiltInFuncException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.BuiltInFuncException" /> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.BuiltInFuncException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.BuiltInFuncException" /> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"></see> is zero (0). </exception>
            <exception cref="T:System.ArgumentNullException">The info parameter is null. </exception>
        </member>
        <member name="T:Bytescout.Spreadsheet.FuncNotSupportedException">
            <summary>
            Built-in function is not supported exception
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.FuncNotSupportedException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.BuiltInFuncException" /> class.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.FuncNotSupportedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.BuiltInFuncException" /> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.FuncNotSupportedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.BuiltInFuncException" /> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.FuncNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.BuiltInFuncException" /> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"></see> is zero (0). </exception>
            <exception cref="T:System.ArgumentNullException">The info parameter is null. </exception>
        </member>
        <member name="T:Bytescout.Spreadsheet.OpenXMLParserException">
            <summary>
            Open XML (XLSX) parser exception
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.OpenXMLParserException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.OpenXMLParserException" /> class.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.OpenXMLParserException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.OpenXMLParserException" /> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.OpenXMLParserException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.OpenXMLParserException" /> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.OpenXMLParserException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.OpenXMLParserException" /> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"></see> is zero (0). </exception>
            <exception cref="T:System.ArgumentNullException">The info parameter is null. </exception>
        </member>
        <member name="T:Bytescout.Spreadsheet.SpreadsheetProtectionXLSSheetLimitationsException">
            <summary>
            Spreadsheet protect exception
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetProtectionXLSSheetLimitationsException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.SpreadsheetProtectionException" /> class.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetProtectionXLSSheetLimitationsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.SpreadsheetProtectionException" /> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetProtectionXLSSheetLimitationsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.SpreadsheetProtectionException" /> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.SpreadsheetProtectionXLSSheetLimitationsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.SpreadsheetProtectionException" /> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"></see> is zero (0). </exception>
            <exception cref="T:System.ArgumentNullException">The info parameter is null. </exception>
        </member>
        <member name="T:Bytescout.Spreadsheet.IncorrectOLEAutomationDateException">
            <summary>
            Not a valid OLE Automation Date value exception
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.IncorrectOLEAutomationDateException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.IncorrectOLEAutomationDateException" /> class.
            </summary>
        </member>
        <member name="M:Bytescout.Spreadsheet.IncorrectOLEAutomationDateException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.IncorrectOLEAutomationDateException" /> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.IncorrectOLEAutomationDateException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.IncorrectOLEAutomationDateException" /> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Bytescout.Spreadsheet.IncorrectOLEAutomationDateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Spreadsheet.IncorrectOLEAutomationDateException" /> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"></see> is zero (0). </exception>
            <exception cref="T:System.ArgumentNullException">The info parameter is null. </exception>
        </member>
        <member name="T:Bytescout.MSCompoundFile.VtHeadingPair">
            <summary>
            Heading Pair struct
            </summary>
        </member>
        <member name="P:Bytescout.MSCompoundFile.VtHeadingPair.headingString">
            <summary>
            heading String
            </summary>
        </member>
        <member name="P:Bytescout.MSCompoundFile.VtHeadingPair.headerParts">
            <summary>
            Header parts
            </summary>
        </member>
        <member name="T:Bytescout.MSCompoundFile.DocumentSummaryInformation">
            <summary>
            Structure describing SummaryInformation Property Set
            </summary>
        </member>
        <member name="P:Bytescout.MSCompoundFile.DocumentSummaryInformation.Codepage">
            <summary>
            Codepage for text
            </summary>
        </member>
        <member name="P:Bytescout.MSCompoundFile.DocumentSummaryInformation.Category">
            <summary>
            Category name for the document
            </summary>
        </member>
        <member name="P:Bytescout.MSCompoundFile.DocumentSummaryInformation.Presformat">
            <summary>
            Presentation format type of the document
            </summary>
        </member>
        <member name="P:Bytescout.MSCompoundFile.DocumentSummaryInformation.Bytecount">
            <summary>
            An estimate of the size of the document in bytes. May be ignored.
            </summary>
        </member>
        <member name="P:Bytescout.MSCompoundFile.DocumentSummaryInformation.Linecount">
            <summary>
            An estimate of the number of text lines in the document. May be ignored.
            </summary>
        </member>
        <member name="P:Bytescout.MSCompoundFile.DocumentSummaryInformation.Paracount">
            <summary>
            An estimate or an exact count of the number of paragraphs in the document. May be ignored.
            </summary>
        </member>
        <member name="P:Bytescout.MSCompoundFile.DocumentSummaryInformation.Slidecount">
            <summary>
            Specifies the number of slides in the document. May be ignored.
            </summary>
        </member>
        <member name="P:Bytescout.MSCompoundFile.DocumentSummaryInformation.Notecount">
            <summary>
            Specifies the number of notes in the document. May be ignored.
            </summary>
        </member>
        <member name="P:Bytescout.MSCompoundFile.DocumentSummaryInformation.Hiddencount">
            <summary>
            Specifies the number of hidden slides in the document. May be ignored.
            </summary>
        </member>
        <member name="P:Bytescout.MSCompoundFile.DocumentSummaryInformation.Mmclipcount">
            <summary>
            Specifies the number of multimedia clips in the document. May be ignored.
            </summary>
        </member>
        <member name="P:Bytescout.MSCompoundFile.DocumentSummaryInformation.Scale">
            <summary>
            The value of the property must be FALSE.
            </summary>
        </member>
        <member name="P:Bytescout.MSCompoundFile.DocumentSummaryInformation.Headingpair">
            <summary>
            heading pair
            </summary>
        </member>
        <member name="P:Bytescout.MSCompoundFile.DocumentSummaryInformation.Docparts">
            <summary>
            docparts
            </summary>
        </member>
        <member name="P:Bytescout.MSCompoundFile.DocumentSummaryInformation.Manager">
            <summary>
            specifies the manager associated with the document.
            </summary>
        </member>
        <member name="P:Bytescout.MSCompoundFile.DocumentSummaryInformation.Company">
            <summary>
            Specifies the company associated with the document‘s authoring.
            </summary>
        </member>
        <member name="P:Bytescout.MSCompoundFile.DocumentSummaryInformation.Linksdirty">
            <summary>
            Links dirty
            </summary>
        </member>
        <member name="P:Bytescout.MSCompoundFile.DocumentSummaryInformation.Cchwithspaces">
            <summary>
            Specifies an estimate of the number of characters in the document including whitespace. May be ignored.
            </summary>
        </member>
        <member name="P:Bytescout.MSCompoundFile.DocumentSummaryInformation.Shareddoc">
            <summary>
            The property value MUST be FALSE (0x00000000).
            </summary>
        </member>
        <member name="P:Bytescout.MSCompoundFile.DocumentSummaryInformation.Hyperlinkschanged">
            <summary>
            hyperlinks changed
            </summary>
        </member>
        <member name="P:Bytescout.MSCompoundFile.DocumentSummaryInformation.Version">
            <summary>
            Specifies the version of the application that wrote the property set storage.
            </summary>
        </member>
        <member name="P:Bytescout.MSCompoundFile.DocumentSummaryInformation.Contenttype">
            <summary>
            Specifies the content type of the file. May be absent.
            </summary>
        </member>
        <member name="P:Bytescout.MSCompoundFile.DocumentSummaryInformation.Contentstatus">
            <summary>
            specifies the document status. May be absent.
            </summary>
        </member>
        <member name="P:Bytescout.MSCompoundFile.DocumentSummaryInformation.Language">
            <summary>
            Should be absent.
            </summary>
        </member>
        <member name="P:Bytescout.MSCompoundFile.DocumentSummaryInformation.Docversion">
            <summary>
            Should be absent.
            </summary>
        </member>
        <member name="T:Bytescout.MSCompoundFile.AlgorithmID">
            <summary>
            Algorithm type
            </summary>
        </member>
        <member name="F:Bytescout.MSCompoundFile.AlgorithmID.ByFlags">
            <summary>
            (0) By Flags
            </summary>
        </member>
        <member name="F:Bytescout.MSCompoundFile.AlgorithmID.RC4">
            <summary>
            (2665) RC4
            </summary>
        </member>
        <member name="F:Bytescout.MSCompoundFile.AlgorithmID.AES128">
            <summary>
            (26126) AES 128
            </summary>
        </member>
        <member name="F:Bytescout.MSCompoundFile.AlgorithmID.AES192">
            <summary>
            (26127) ARS 192
            </summary>
        </member>
        <member name="F:Bytescout.MSCompoundFile.AlgorithmID.AES256">
            <summary>
            (26128) AES 256
            </summary>
        </member>
        <member name="T:Bytescout.MSCompoundFile.HashAlgorithmID">
            <summary>
            Hash Algorithm
            </summary>
        </member>
        <member name="F:Bytescout.MSCompoundFile.HashAlgorithmID.ByFlags">
            <summary>
            (0) By Flags
            </summary>
        </member>
        <member name="F:Bytescout.MSCompoundFile.HashAlgorithmID.SHA1">
            <summary>
            (32772) SHA 1
            </summary>
        </member>
        <member name="F:Bytescout.MSCompoundFile.HashAlgorithmID.SHA256">
            <summary>
            SHA 256 (only xlsx)
            </summary>
        </member>
        <member name="F:Bytescout.MSCompoundFile.HashAlgorithmID.SHA512">
            <summary>
            SHA 512 (only xlsx)
            </summary>
        </member>
        <member name="T:Bytescout.MSCompoundFile.CompoundFile">
            <summary>
            Base class for operations with a compound file (OLE file).
            </summary>
        </member>
        <member name="F:Bytescout.MSCompoundFile.CompoundFile.NewDocument">
            <summary>
            Indicates if the class contains new document or not.
            </summary>
        </member>
        <member name="M:Bytescout.MSCompoundFile.CompoundFile.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.MSCompoundFile.CompoundFile" /> class.
            </summary>
            <param name="olestream">Stream with compound file.</param>
            <param name="newdoc">set to <c>true</c> [newdoc] if you want to create new compound file.</param>
        </member>
        <member name="M:Bytescout.MSCompoundFile.CompoundFile.StreamRead">
            <summary>
            Read of compound file structures.
            </summary>
        </member>
        <member name="M:Bytescout.MSCompoundFile.CompoundFile.WriteToFile2(System.IO.Stream)">
            <summary>
            Method flushes currently opened document into stream
            </summary>
            <param name="astream">The stream to write the document into.</param>
        </member>
        <member name="T:Bytescout.MSCompoundFile.SummaryInformation">
            <summary>
            Structure describing SummaryInformation Property Set
            </summary>
        </member>
        <member name="P:Bytescout.MSCompoundFile.SummaryInformation.Codepage">
            <summary>
            Codepage for text
            </summary>
        </member>
        <member name="P:Bytescout.MSCompoundFile.SummaryInformation.Title">
            <summary>
            The title of the document.
            </summary>
        </member>
        <member name="P:Bytescout.MSCompoundFile.SummaryInformation.Subject">
            <summary>
            The subject of the document.
            </summary>
        </member>
        <member name="P:Bytescout.MSCompoundFile.SummaryInformation.Author">
            <summary>
            The author of the document.
            </summary>
        </member>
        <member name="P:Bytescout.MSCompoundFile.SummaryInformation.Keywords">
            <summary>
            Keywords related to the document.
            </summary>
        </member>
        <member name="P:Bytescout.MSCompoundFile.SummaryInformation.Comments">
            <summary>
            Comments related the document.
            </summary>
        </member>
        <member name="P:Bytescout.MSCompoundFile.SummaryInformation.Template">
            <summary>
            The application specific template used to create the document.
            </summary>
        </member>
        <member name="P:Bytescout.MSCompoundFile.SummaryInformation.LastAuthor">
            <summary>
            The last author of the document.
            </summary>
        </member>
        <member name="P:Bytescout.MSCompoundFile.SummaryInformation.RevisionNumber">
            <summary>
            An application-specific revision number for this version of the document.
            </summary>
        </member>
        <member name="P:Bytescout.MSCompoundFile.SummaryInformation.PageCount">
            <summary>
            The total number of pages in the document.
            </summary>
        </member>
        <member name="P:Bytescout.MSCompoundFile.SummaryInformation.WordCount">
            <summary>
            The total number of words in the document.
            </summary>
        </member>
        <member name="P:Bytescout.MSCompoundFile.SummaryInformation.CharCount">
            <summary>
            The total number of characters in the document.
            </summary>
        </member>
        <member name="P:Bytescout.MSCompoundFile.SummaryInformation.ApplicationName">
            <summary>
            The name of the application that was used to create the document.
            </summary>
        </member>
        <member name="P:Bytescout.MSCompoundFile.SummaryInformation.Security">
            <summary>
            A 32-bit signed integer representing a set of application-suggested access control flags with the following values:
                0x00000001: Password protected
                0x00000002: Read-only recommended
                0x00000004: Read-only enforced
                0x00000008: Locked for annotations
            </summary>
        </member>
        <member name="P:Bytescout.MSCompoundFile.SummaryInformation.EditTime">
            <summary>
            Gets or sets the total amount of time that has been spent editing the document.
            </summary>
            <value>The edit time.</value>
        </member>
        <member name="P:Bytescout.MSCompoundFile.SummaryInformation.LastPrinted">
            <summary>
            Gets or sets the most recent time the document was printed.
            </summary>
            <value>The last printed.</value>
        </member>
        <member name="P:Bytescout.MSCompoundFile.SummaryInformation.CreateDateTime">
            <summary>
            Gets or sets the time that the document was created.
            </summary>
            <value>The create date time.</value>
        </member>
        <member name="P:Bytescout.MSCompoundFile.SummaryInformation.LastSavedDateTime">
            <summary>
            Gets or sets the most recent time the document was saved.
            </summary>
            <value>The last saved date time.</value>
        </member>
        <member name="T:Bytescout.Zip.ZipCRC32">
            <summary>
            Calculates a 32bit Cyclic Redundancy Checksum (CRC) using the
            same polynomial used by Zip. This type ie generally not used 
            directly by applications wishing to create, read, or manipulate 
            zip archive files.
            </summary>
        </member>
        <member name="P:Bytescout.Zip.ZipCRC32.TotalBytesRead">
            <summary>
            indicates the total number of bytes read on the CRC stream.
            This is used when writing the ZipDirEntry when compressing files.
            </summary>
        </member>
        <member name="M:Bytescout.Zip.ZipCRC32.GetCrc32(System.IO.Stream)">
            <summary>
            Returns the CRC32 for the specified stream.
            </summary>
            <param name="input">The stream over which to calculate the CRC32</param>
            <returns>the CRC32 calculation</returns>
        </member>
        <member name="M:Bytescout.Zip.ZipCRC32.GetCrc32AndCopy(System.IO.Stream,System.IO.Stream)">
            <summary>
            Returns the CRC32 for the specified stream, and writes the input into the output stream.
            </summary>
            <param name="input">The stream over which to calculate the CRC32</param>
            <param name="output">The stream into which to deflate the input</param>
            <returns>the CRC32 calculation</returns>
        </member>
        <member name="M:Bytescout.Zip.ZipCRC32.#ctor">
            <summary>
            Construct an instance of the CRC32 class, preinitializing the 
            table for speed of lookup.
            </summary>
        </member>
        <member name="T:Bytescout.Zip.ZipEntry">
            <summary>
            Represents a single entry in a ZipFile. Typically, applications
            get a ZipEntry by enumerating the entries within a ZipFile or
            as a result of AddItem methods.
            </summary>
        </member>
        <member name="M:Bytescout.Zip.ZipEntry.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Zip.ZipEntry" /> class.
            </summary>
            <param name="filename">The filename.</param>
        </member>
        <member name="M:Bytescout.Zip.ZipEntry.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Zip.ZipEntry" /> class.
            </summary>
            <param name="filename">The filename.</param>
            <param name="pathInArchive">The path in archive.</param>
            <param name="memoryCache">if set to <c>true</c> using memory for cache.</param>
        </member>
        <member name="M:Bytescout.Zip.ZipEntry.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="P:Bytescout.Zip.ZipEntry.Stream">
            <summary>
            Gets the stream.
            </summary>
            <value>The stream.</value>
        </member>
        <member name="P:Bytescout.Zip.ZipEntry.LastModified">
            <summary>
            Gets the last modified.
            </summary>
            <value>The last modified.</value>
        </member>
        <member name="P:Bytescout.Zip.ZipEntry.FileName">
            <summary>
            The name of the file contained in the ZipEntry. 
            </summary>
        </member>
        <member name="P:Bytescout.Zip.ZipEntry.Comment">
            <summary>
            The comment attached to the ZipEntry. 
            </summary>
        </member>
        <member name="P:Bytescout.Zip.ZipEntry.BitField">
            <summary>
            Gets a bit field as defined in the zip spec. 
            </summary>
        </member>
        <member name="P:Bytescout.Zip.ZipEntry.CompressedSize">
            <summary>
            The compressed size of the file, in bytes, within the zip archive. 
            </summary>
        </member>
        <member name="P:Bytescout.Zip.ZipEntry.UncompressedSize">
            <summary>
            The size of the file, in bytes, before compression, or after extraction. 
            </summary>
        </member>
        <member name="P:Bytescout.Zip.ZipEntry.CompressionRatio">
            <summary>
            The ratio of compressed size to uncompressed size. 
            </summary>
        </member>
        <member name="P:Bytescout.Zip.ZipEntry.IsDirectory">
            <summary>
            True if the entry is a directory (not a file). 
            This is a readonly property on the entry.
            </summary>
        </member>
        <member name="P:Bytescout.Zip.ZipEntry.SaveUncompressed">
            <summary>
            Gets or sets a value indicating whether [save uncompressed].
            </summary>
            <value>
                <c>true</c> if [save uncompressed]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Bytescout.Zip.ZipEntry.Extract">
            <summary>
             Extract the entry to the filesystem, starting at the current 
             working directory. 
             </summary>
            <remarks>
                <para>
             The last modified time of the created file may be adjusted 
             during extraction to compensate for differences in how the .NET 
             Base Class Library deals with daylight saving time (DST) versus 
             how the Windows filesystem deals with daylight saving time. 
             See http://blogs.msdn.com/oldnewthing/archive/2003/10/24/55413.aspx 
             for more context.
            </para>
            </remarks>
        </member>
        <member name="M:Bytescout.Zip.ZipEntry.Extract(System.Boolean)">
            <summary>
            Extract the entry to the filesystem, starting at the current 
            working directory, potentially overwriting any existing file.
            </summary>
            <param name="overwriteExisting">true if the caller wants to 
            overwrite any existing file with the same name in the 
            filesystem.</param>
        </member>
        <member name="M:Bytescout.Zip.ZipEntry.ExtractTo(System.String)">
            <summary>
            Extract the entry to the filesystem, starting at the specified 
            base directory. 
            </summary>
            <param name="baseDirectory">the path name of the base 
            directory.</param>
        </member>
        <member name="M:Bytescout.Zip.ZipEntry.ExtractTo(System.String,System.Boolean)">
            <summary>
            Extract the entry to the filesystem, starting at the specified 
            base directory, and potentially overwriting existing files in 
            the filesystem. 
            </summary>
            <param name="baseDirectory">the path name of the base 
            directory</param>
            <param name="overwriteExisting">if true, overwrite any existing 
            files if necessary upon extraction.</param>
        </member>
        <member name="M:Bytescout.Zip.ZipEntry.ExtractTo(System.IO.Stream)">
            <summary>
            Extracts the entry to the specified stream. 
            </summary>
            <param name="s">the stream to which the entry should be 
            extracted.</param>
        </member>
        <member name="T:Bytescout.Zip.ZipFile">
            <summary>
            The ZipFile type represents a zip archive file.  This is the main type in the
            class library that reads and writes zip files, as defined in the format
            for zip described by PKWare.  This implementation is based on the
            Compression.DeflateStream base class in the .NET Framework
            base class library, for v2.0 and later.
            </summary>
        </member>
        <member name="M:Bytescout.Zip.ZipFile.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.Zip.ZipFile" /> class.
            </summary>
        </member>
        <member name="M:Bytescout.Zip.ZipFile.#ctor(System.String)">
            <summary>
            Creates a new ZipFile instance for an existing zip archive, using 
            the specified file name. The file name may be fully qualified.
            </summary>
            <param name="zipFileName">The name of the existing zip archive.</param>
            <remarks>
                <para>Applications can use this constructor to create a new 
            ZipFile for an existing zip archive for read and write purposes.
            </para>
                <para>
            An application reading a zip archive can call this constructor, 
            passing the name of a zip file that does exist.  The file is then 
            read into the <c>ZipFile</c> instance.  The app can then enumerate 
            the entries or can add a new entry.
            </para>
            </remarks>
        </member>
        <member name="M:Bytescout.Zip.ZipFile.#ctor(System.String,System.Boolean)">
            <summary>
            Creates a new ZipFile instance for an existing zip archive, using 
            the specified file name. The file name may be fully qualified.
            </summary>
            <param name="zipFileName">The name of the existing zip archive.</param>
            <param name="memoryCache">if set to <c>true</c> using memory for cache.</param>
            <remarks>
                <para>Applications can use this constructor to create a new 
            ZipFile for an existing zip archive for read and write purposes.
            </para>
                <para>
            An application reading a zip archive can call this constructor, 
            passing the name of a zip file that does exist.  The file is then 
            read into the <c>ZipFile</c> instance.  The app can then enumerate 
            the entries or can add a new entry.
            </para>
            </remarks>
        </member>
        <member name="M:Bytescout.Zip.ZipFile.#ctor(System.IO.Stream)">
            <summary>
            Creates an instance of ZipFile initialized with zip archive data
            from a specified stream.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown if the stream is not readable or empty.
            </exception>
            <param name="s">The stream to read from. It must be readable 
            and contain zip archive. Stream does not gets closed.</param>
        </member>
        <member name="M:Bytescout.Zip.ZipFile.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Creates an instance of ZipFile initialized with zip archive data
            from a specified stream.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown if the stream is not readable or empty.
            </exception>
            <param name="s">The stream to read from. It must be readable 
            and contain zip archive. Stream does not gets closed.</param>
            <param name="memoryCache">if set to <c>true</c> using memory for cache.</param>
        </member>
        <member name="M:Bytescout.Zip.ZipFile.#ctor(System.Byte[])">
            <summary>
            Creates an instance of ZipFile initialized with zip archive data
            from a specified byte buffer.
            </summary>
            <param name="buffer">The byte array containing the zip data.</param>
            <exception cref="T:System.ArgumentException">
            Thrown if the byte buffer is null or empty.
            </exception>
        </member>
        <member name="M:Bytescout.Zip.ZipFile.#ctor(System.Byte[],System.Boolean)">
            <summary>
            Creates an instance of ZipFile initialized with zip archive data
            from a specified byte buffer.
            </summary>
            <param name="buffer">The byte array containing the zip data.</param>
            <exception cref="T:System.ArgumentException">
            Thrown if the byte buffer is null or empty.
            </exception>
            <param name="memoryCache">if set to <c>true</c> using memory for cache.</param>
        </member>
        <member name="M:Bytescout.Zip.ZipFile.Finalize">
            <summary>
            This is the class Destructor, which gets called implicitly when 
            the instance is destroyed. Because the ZipFile type implements 
            IDisposable, this method calls Dispose(false).
            </summary>
        </member>
        <member name="M:Bytescout.Zip.ZipFile.Dispose">
            <summary>
            Handles closing of the read and write streams associated
            to the ZipFile, if necessary.  The Dispose() method is generally 
            employed implicitly, via a using() {} statement. 
            </summary>
        </member>
        <member name="M:Bytescout.Zip.ZipFile.Dispose(System.Boolean)">
            <summary>
            The Dispose() method.  It disposes any managed resources, 
            if the flag is set, then marks the instance disposed.
            This method is typically not called from application code.
            </summary>
            <param name="disposeManagedResources">indicates whether the 
            method should dispose streams or not.</param>
        </member>
        <member name="M:Bytescout.Zip.ZipFile.GetEnumerator">
            <summary>
            Generic IEnumerator support, for use of a ZipFile in a foreach construct.  
            </summary>
            <returns>a generic enumerator suitable for use  within a foreach loop.</returns>
        </member>
        <member name="M:Bytescout.Zip.ZipFile.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            IEnumerator support, for use of a ZipFile in a foreach construct.  
            </summary>
        </member>
        <member name="P:Bytescout.Zip.ZipFile.EntryCount">
            <summary>
            Gets the number of zip entries in the zip archive.
            </summary>
            <value>The number of zip entries in the zip archive.</value>
        </member>
        <member name="P:Bytescout.Zip.ZipFile.Item(System.Int32)">
            <summary>
            This is a number-based indexer into the zip archive.
            </summary>
            <value>The index of an entry to retrieve.</value>
        </member>
        <member name="P:Bytescout.Zip.ZipFile.Comment">
            <summary>
            Gets or sets a comment for the zip file.
            </summary>
        </member>
        <member name="M:Bytescout.Zip.ZipFile.AddItem(System.String)">
            <summary>
            Adds an item, either a file or a folder, to the zip archive.  
            </summary>
            <remarks>
                <para>
            If adding a folder, then add is NOT recursive and only empty 
            folder will be added to zip archive.
            </para>
                <para>
            The name of the item may be a relative path or a fully-qualified 
            path. If name is null, then empty entry will be added. You can
            populate entry using Stream property later.
            </para>
                <para>
            The folder name used for the file within the archive is the 
            same as folder name (potentially a relative path) specified in 
            the fileOrFolderName.
            </para>
            </remarks>
            <param name="fileOrFolderName">the name of the file or folder 
            to add.</param>
        </member>
        <member name="M:Bytescout.Zip.ZipFile.AddItem(System.String,System.String)">
            <summary>
            Adds an item, either a file or a folder, to the zip archive,
            explicitly specifying the folder path to be used in the archive.
            </summary>
            <remarks>
                <para>
            If adding a folder, then add is NOT recursive and only empty 
            folder will be added to zip archive.
            </para>
                <para>
            The name of the item may be a relative path or a fully-qualified 
            path. If name is null, then empty entry will be added. You can
            populate entry using Stream property later.
            </para>
                <para>
            This version of the method allows the caller to explicitly specify 
            the folder path to be used in the archive, which would override 
            the "natural" path of the filesystem file.
            </para>
            </remarks>
            <param name="fileOrFolderName">the name of the file or folder 
            to add.</param>
            <param name="pathInArchive">
            The name of the folder path to use within the zip archive. 
            This path may, or may not, correspond to a real folder in the 
            current filesystem. If the files within the zip are later 
            extracted, this is the path used for the extracted file. 
            Passing null will use the path of the fileOrFolderName. Passing 
            the empty string ("") will insert the item at the root path 
            within the archive.
            </param>
        </member>
        <member name="M:Bytescout.Zip.ZipFile.AddFolder(System.String)">
            <summary>
            Adds a folder to the zip archive. 
            </summary>
            <remarks>
            The name of the folder may be a relative path or a 
            fully-qualified path. The add operation is recursive, so that 
            any files or sub-folders within the folder are also added to 
            the archive.
            </remarks>
            <param name="folderName">the name of the folder to add.</param>
        </member>
        <member name="M:Bytescout.Zip.ZipFile.AddFolder(System.String,System.String)">
            <summary>
            Adds a folder to the zip archive, overriding the path to be 
            used in the archive. 
            </summary>
            <remarks>
            The name of the folder may be a relative path or a 
            fully-qualified path. The add operation is recursive, so that 
            any files or sub-folders within the folder are also added to 
            the archive.
            </remarks>
            <param name="folderName">the name of the folder to add.</param>
            <param name="pathInArchive">
            Specifies a folder path to use to override any path in the 
            folderName. This path may, or may not, correspond to a real 
            folder in the current filesystem. If the zip archive is later 
            extracted, this is the path used for the extracted file or 
            folder. Passing null will use the path of the folderName. 
            Passing the empty string ("") will insert the item at the root 
            path within the archive.
            </param>
        </member>
        <member name="M:Bytescout.Zip.ZipFile.Save(System.String)">
            <summary>
            Save the zip archive to a file with the given name. 
            </summary>
            <param name="zipFileName">
            The name of the file to save zip archive to. If file already exists,
            it will be overwritten.
            </param>
        </member>
        <member name="M:Bytescout.Zip.ZipFile.Save(System.IO.Stream)">
            <summary>
            Save the zip archive to a given stream. 
            </summary>
            <param name="outStream">
            The name of the stream to save zip archive to. Stream must be
            writable. Stream does not gets closed.
            </param>
        </member>
        <member name="M:Bytescout.Zip.ZipFile.Extract(System.String)">
            <summary>
            Extracts all of the items in the zip archive, to the specified 
            path in the filesystem. The path can be relative or fully-qualified. 
            </summary>
            <remarks>
                <para>If an extraction of a file from the zip archive would 
            overwrite an existing file in the filesystem, the file will not 
            be overwritten and an exception will be thrown. To avoid this, use 
            the overload that allows you to specify that you want
            to overwrite existing files.
            </para>
            </remarks>
            <param name="path">The path to which the contents of the zip 
            archive should be extracted.</param>
        </member>
        <member name="M:Bytescout.Zip.ZipFile.Extract(System.String,System.Boolean)">
            <summary>
            Extracts all of the items in the zip archive, to the specified 
            path in the filesystem, optionally overwriting any existing files. 
            The path can be relative or fully-qualified.
            </summary>
            <param name="path">the path to which the contents of the zip 
            archive are extracted.</param>
            <param name="overwriteExisting">If true, then any existing file 
            will be overwritten upon extraction.</param>
        </member>
    </members>
</doc>